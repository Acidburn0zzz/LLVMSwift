{"Structs/X86MMXType.html#/s:4LLVM10X86MMXTypeV7contextAA7ContextCvp":{"name":"context","abstract":"<p>Returns the context associated with this type.</p>","parent_name":"X86MMXType"},"Structs/X86MMXType.html#/s:4LLVM10X86MMXTypeV2inAcA7ContextC_tcfc":{"name":"init(in:)","abstract":"<p>Creates an <code>X86MMXType</code>.</p>","parent_name":"X86MMXType"},"Structs/X86MMXType.html#/s:4LLVM10X86MMXTypeV02asA0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM type object.</p>","parent_name":"X86MMXType"},"Structs/X86MMXType.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"X86MMXType"},"Structs/VoidType.html#/s:4LLVM8VoidTypeV7contextAA7ContextCvp":{"name":"context","abstract":"<p>Returns the context associated with this type.</p>","parent_name":"VoidType"},"Structs/VoidType.html#/s:4LLVM8VoidTypeV2inAcA7ContextC_tcfc":{"name":"init(in:)","abstract":"<p>Creates an instance of the <code>Void</code> type.</p>","parent_name":"VoidType"},"Structs/VoidType.html#/s:4LLVM8VoidTypeV02asA0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM type object.</p>","parent_name":"VoidType"},"Structs/VoidType.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"VoidType"},"Structs/VectorType.html#/s:4LLVM10VectorTypeV07elementC0AA6IRType_pvp":{"name":"elementType","abstract":"<p>Returns the type of elements in the vector.</p>","parent_name":"VectorType"},"Structs/VectorType.html#/s:4LLVM10VectorTypeV5countSivp":{"name":"count","abstract":"<p>Returns the number of elements in the vector.</p>","parent_name":"VectorType"},"Structs/VectorType.html#/s:4LLVM10VectorTypeV07elementC05countAcA6IRType_p_Sitcfc":{"name":"init(elementType:count:)","abstract":"<p>Creates a vector type of the given element type and size.</p>","parent_name":"VectorType"},"Structs/VectorType.html#/s:4LLVM10VectorTypeV8constantyAA8ConstantVyAA0B0OGSayAA7IRValue_pGF":{"name":"constant(_:)","abstract":"<p>Creates a constant value of this vector type initialized with the given","parent_name":"VectorType"},"Structs/VectorType.html#/s:4LLVM10VectorTypeV02asA0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM type object.</p>","parent_name":"VectorType"},"Structs/VectorType.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"VectorType"},"Structs/Use.html#/s:4LLVM3UseV4nextACSgyF":{"name":"next()","abstract":"<p>Retrieves the next use of a value.</p>","parent_name":"Use"},"Structs/Use.html#/s:4LLVM3UseV4userAA7IRValue_pSgyF":{"name":"user()","abstract":"<p>Obtain the user value for this <code>Use</code> object.</p>","parent_name":"Use"},"Structs/Use.html#/s:4LLVM3UseV9usedValueAA7IRValue_pSgyF":{"name":"usedValue()","abstract":"<p>Obtain the value this <code>Use</code> object corresponds to.</p>","parent_name":"Use"},"Structs/Size.html#/s:4LLVM4SizeV8rawValues6UInt64Vvp":{"name":"rawValue","abstract":"<p>Accesses the raw value unitless value of this size.</p>","parent_name":"Size"},"Structs/Size.html#/s:4LLVM4SizeV4zeroACvpZ":{"name":"zero","abstract":"<p>A size carrying a value of zero.</p>","parent_name":"Size"},"Structs/Size.html#/s:4LLVM4SizeV3oneACvpZ":{"name":"one","abstract":"<p>A size carrying a value of one.</p>","parent_name":"Size"},"Structs/Size.html#/s:4LLVM4SizeVyACs6UInt64Vcfc":{"name":"init(_:)","abstract":"<p>Initializes and returns a size carrying the given value.</p>","parent_name":"Size"},"Structs/Size.html#/s:4LLVM4SizeV4bits5radixACs6UInt64V_AGtcfc":{"name":"init(bits:radix:)","abstract":"<p>Initializes and returns a size carrying the given value which represents","parent_name":"Size"},"Structs/Size.html#/s:4LLVM4SizeV11valueInBits5radixs6UInt64VAG_tF":{"name":"valueInBits(radix:)","abstract":"<p>Returns the value of this size in bits according to a given radix.</p>","parent_name":"Size"},"Structs/Size.html#/s:4LLVM4SizeV12isPowerOfTwoSbvp":{"name":"isPowerOfTwo","abstract":"<p>Returns true if this size value is a power of two, including if it is","parent_name":"Size"},"Structs/Size.html#/s:4LLVM4SizeV7roundUp2toAcA9AlignmentV_tF":{"name":"roundUp(to:)","abstract":"<p>Computes a size with value rounded up to the next highest value that is","parent_name":"Size"},"Structs/Size.html#/s:4LLVM4SizeV1roiyA2C_AA9AlignmentVtFZ":{"name":"%(_:_:)","abstract":"<p>Returns the remainder of dividing the first size value","parent_name":"Size"},"Structs/Size.html#/s:Sz8clampingxqd___tcSzRd__lufc":{"name":"init(clamping:)","parent_name":"Size"},"Structs/Size.html#/s:Sz18truncatingIfNeededxqd___tcSzRd__lufc":{"name":"init(truncatingIfNeeded:)","parent_name":"Size"},"Structs/Size.html#/s:Sj7exactlyxSgqd___tcSzRd__lufc":{"name":"init(exactly:)","parent_name":"Size"},"Structs/Size.html#/s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc":{"name":"init(integerLiteral:)","parent_name":"Size"},"Structs/Size.html#/s:Sz7exactlyxSgqd___tcSBRd__lufc":{"name":"init(exactly:)","parent_name":"Size"},"Structs/Size.html#/s:Szyxqd__cSBRd__lufc":{"name":"init(_:)","parent_name":"Size"},"Structs/Size.html#/s:Szyxqd__cSzRd__lufc":{"name":"init(_:)","parent_name":"Size"},"Structs/Size.html#/s:Sz5words5WordsQzvp":{"name":"words","parent_name":"Size"},"Structs/Size.html#/s:Sz8bitWidthSivp":{"name":"bitWidth","parent_name":"Size"},"Structs/Size.html#/s:Sz20trailingZeroBitCountSivp":{"name":"trailingZeroBitCount","parent_name":"Size"},"Structs/Size.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"Size"},"Structs/Size.html#/s:SL1loiySbx_xtFZ":{"name":"<(_:_:)","parent_name":"Size"},"Structs/Size.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"Size"},"Structs/Size.html#/s:Sz1poiyxx_xtFZ":{"name":"+(_:_:)","parent_name":"Size"},"Structs/Size.html#/s:Sz2peoiyyxz_xtFZ":{"name":"+=(_:_:)","parent_name":"Size"},"Structs/Size.html#/s:Sz1soiyxx_xtFZ":{"name":"-(_:_:)","parent_name":"Size"},"Structs/Size.html#/s:Sz2seoiyyxz_xtFZ":{"name":"-=(_:_:)","parent_name":"Size"},"Structs/Size.html#/s:Sz1moiyxx_xtFZ":{"name":"*(_:_:)","parent_name":"Size"},"Structs/Size.html#/s:Sz2meoiyyxz_xtFZ":{"name":"*=(_:_:)","parent_name":"Size"},"Structs/Size.html#/s:Sz1doiyxx_xtFZ":{"name":"/(_:_:)","parent_name":"Size"},"Structs/Size.html#/s:Sz2deoiyyxz_xtFZ":{"name":"/=(_:_:)","parent_name":"Size"},"Structs/Size.html#/s:Sz1roiyxx_xtFZ":{"name":"%(_:_:)","parent_name":"Size"},"Structs/Size.html#/s:Sz2reoiyyxz_xtFZ":{"name":"%=(_:_:)","parent_name":"Size"},"Structs/Size.html#/s:Sz2aeoiyyxz_xtFZ":{"name":"&=(_:_:)","parent_name":"Size"},"Structs/Size.html#/s:Sz2oeoiyyxz_xtFZ":{"name":"|=(_:_:)","parent_name":"Size"},"Structs/Size.html#/s:Sz2xeoiyyxz_xtFZ":{"name":"^=(_:_:)","parent_name":"Size"},"Structs/Size.html#/s:Sz3ggeoiyyxz_qd__tSzRd__lFZ":{"name":">>=(_:_:)","parent_name":"Size"},"Structs/Size.html#/s:Sz3lleoiyyxz_qd__tSzRd__lFZ":{"name":"<<=(_:_:)","parent_name":"Size"},"Structs/Size.html#/s:Sz1topyxxFZ":{"name":"~(_:)","parent_name":"Size"},"Structs/Size.html#/s:4LLVM4SizeV10isMultiple2ofSbAC_tF":{"name":"isMultiple(of:)","abstract":"<p>Returns true if the given size is a multiple of this size.</p>","parent_name":"Size"},"Structs/Size.html#/s:s27ExpressibleByIntegerLiteralP0cD4TypeQa":{"name":"IntegerLiteralType","parent_name":"Size"},"Structs/Size.html#/s:Sz5WordsQa":{"name":"Words","parent_name":"Size"},"Structs/Size.html#/s:4LLVM4SizeV1moiyA2C_s6UInt64VtFZ":{"name":"*(_:_:)","abstract":"<p>Multiplies a size value by a raw unitless value and produces their product.</p>","parent_name":"Size"},"Structs/Size.html#/s:4LLVM4SizeV1moiyACs6UInt64V_ACtFZ":{"name":"*(_:_:)","abstract":"<p>Multiplies a raw unitless value by a size value and produces their product.</p>","parent_name":"Size"},"Structs/Size.html#/s:4LLVM4SizeV2meoiyyACz_s6UInt64VtFZ":{"name":"*=(_:_:)","abstract":"<p>Multiplies a size value by a raw unitless value and stores the result in","parent_name":"Size"},"Structs/Alignment.html#/s:4LLVM9AlignmentV8rawValues6UInt32Vvp":{"name":"rawValue","abstract":"<p>Accesses the raw alignment value in bytes.</p>","parent_name":"Alignment"},"Structs/Alignment.html#/s:4LLVM9AlignmentV4zeroACvpZ":{"name":"zero","abstract":"<p>A zero-byte alignment value.</p>","parent_name":"Alignment"},"Structs/Alignment.html#/s:4LLVM9AlignmentV3oneACvpZ":{"name":"one","abstract":"<p>An one-byte alignment value.</p>","parent_name":"Alignment"},"Structs/Alignment.html#/s:4LLVM9AlignmentVyACs6UInt32Vcfc":{"name":"init(_:)","abstract":"<p>Initializes and returns an alignment with the given value interpreted as","parent_name":"Alignment"},"Structs/Alignment.html#/s:4LLVM9AlignmentV6isZeroSbvp":{"name":"isZero","abstract":"<p>Returns true if this alignment value is zero bytes, else return false.</p>","parent_name":"Alignment"},"Structs/Alignment.html#/s:4LLVM9AlignmentV4log2s6UInt32VyF":{"name":"log2()","abstract":"<p>Returns the log-base-two value of this alignment as a 32-bit integer.</p>","parent_name":"Alignment"},"Structs/Alignment.html#/s:4LLVM9AlignmentV4log2s6UInt64VyF":{"name":"log2()","abstract":"<p>Returns the log-base-two value of this alignment as a 64-bit integer.</p>","parent_name":"Alignment"},"Structs/Alignment.html#/s:4LLVM9AlignmentV9alignment2atAcA4SizeV_tF":{"name":"alignment(at:)","abstract":"<p>Returns the alignment of a pointer which points to the given number of","parent_name":"Alignment"},"Structs/Alignment.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"Alignment"},"Structs/Alignment.html#/s:SL1loiySbx_xtFZ":{"name":"<(_:_:)","parent_name":"Alignment"},"Structs/Alignment.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"Alignment"},"Structs/TokenType.html#/s:4LLVM9TokenTypeV7contextAA7ContextCvp":{"name":"context","abstract":"<p>Returns the context associated with this type.</p>","parent_name":"TokenType"},"Structs/TokenType.html#/s:4LLVM9TokenTypeV2inAcA7ContextC_tcfc":{"name":"init(in:)","abstract":"<p>Initializes a token type from the given LLVM type object.</p>","parent_name":"TokenType"},"Structs/TokenType.html#/s:4LLVM9TokenTypeV02asA0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM type object.</p>","parent_name":"TokenType"},"Structs/TokenType.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"TokenType"},"Structs/StructLayout.html#/s:4LLVM12StructLayoutV4sizeAA4SizeVvp":{"name":"size","abstract":"<p>Returns the total size of the struct in bytes.</p>","parent_name":"StructLayout"},"Structs/StructLayout.html#/s:4LLVM12StructLayoutV9alignmentAA9AlignmentVvp":{"name":"alignment","abstract":"<p>Returns the alignment of the struct in bytes.</p>","parent_name":"StructLayout"},"Structs/StructLayout.html#/s:4LLVM12StructLayoutV8isPaddedSbvp":{"name":"isPadded","abstract":"<p>Returns true if the structure type includes padding between elements.</p>","parent_name":"StructLayout"},"Structs/StructLayout.html#/s:4LLVM12StructLayoutV12elementCountSivp":{"name":"elementCount","abstract":"<p>Returns the number of elements of this structure type.</p>","parent_name":"StructLayout"},"Structs/StructLayout.html#/s:4LLVM12StructLayoutV13memberOffsetsSayAA4SizeVGvp":{"name":"memberOffsets","abstract":"<p>Returns the offsets of each member from the start of the of the struct in","parent_name":"StructLayout"},"Structs/StructLayout.html#/s:4LLVM12StructLayoutV5index2ofSiAA4SizeV_tF":{"name":"index(of:)","abstract":"<p>Given a valid byte offset into the structure, returns the structure","parent_name":"StructLayout"},"Structs/Switch.html#/s:4LLVM6SwitchV7addCaseyyAA7IRValue_p_AA10BasicBlockVtF":{"name":"addCase(_:_:)","abstract":"<p>Inserts a case with the given value and destination basic block in the","parent_name":"Switch"},"Structs/Switch.html#/s:4LLVM6SwitchV02asA0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM value object.</p>","parent_name":"Switch"},"Structs/StructType.html#/s:4LLVM10StructTypeV4llvmACs13OpaquePointerV_tcfc":{"name":"init(llvm:)","abstract":"<p>Initializes a structure type from the given LLVM type object.</p>","parent_name":"StructType"},"Structs/StructType.html#/s:4LLVM10StructTypeV12elementTypes8isPacked2inACSayAA6IRType_pG_SbAA7ContextCtcfc":{"name":"init(elementTypes:isPacked:in:)","abstract":"<p>Creates a structure type from an array of component element types.</p>","parent_name":"StructType"},"Structs/StructType.html#/s:4LLVM10StructTypeV7setBody_8isPackedySayAA6IRType_pG_SbtF":{"name":"setBody(_:isPacked:)","abstract":"<p>Invalidates and resets the member types of this structure.</p>","parent_name":"StructType"},"Structs/StructType.html#/s:4LLVM10StructTypeV8constant6valuesAA8ConstantVyAA0B0OGSayAA7IRValue_pG_tF":{"name":"constant(values:)","abstract":"<p>Creates a constant value of this structure type initialized with the given","parent_name":"StructType"},"Structs/StructType.html#/s:4LLVM10StructTypeV8constant6values8isPackedAA8ConstantVyAA0B0OGSayAA7IRValue_pG_SbtFZ":{"name":"constant(values:isPacked:)","abstract":"<p>Creates an constant struct value initialized with the given list of values.</p>","parent_name":"StructType"},"Structs/StructType.html#/s:4LLVM10StructTypeV4nameSSvp":{"name":"name","abstract":"<p>Retrieves the name associated with this structure type, or the empty","parent_name":"StructType"},"Structs/StructType.html#/s:4LLVM10StructTypeV12elementTypesSayAA6IRType_pGvp":{"name":"elementTypes","abstract":"<p>Retrieves the element types associated with this structure type.</p>","parent_name":"StructType"},"Structs/StructType.html#/s:4LLVM10StructTypeV02asA0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM type object.</p>","parent_name":"StructType"},"Structs/StructType.html#/s:4LLVM10StructTypeV8isOpaqueSbvp":{"name":"isOpaque","abstract":"<p>Return true if this is a struct type with an identity that has an","parent_name":"StructType"},"Structs/StructType.html#/s:4LLVM10StructTypeV8isPackedSbvp":{"name":"isPacked","abstract":"<p>Returns true if this is a packed struct type.</p>","parent_name":"StructType"},"Structs/StructType.html#/s:4LLVM10StructTypeV9isLiteralSbvp":{"name":"isLiteral","abstract":"<p>Returns true if this is a literal struct type.</p>","parent_name":"StructType"},"Structs/StructType.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"StructType"},"Structs/PointerType.html#/s:4LLVM11PointerTypeV7pointeeAA6IRType_pvp":{"name":"pointee","abstract":"<p>Retrieves the type of the value being pointed to.</p>","parent_name":"PointerType"},"Structs/PointerType.html#/s:4LLVM11PointerTypeV12addressSpaceSivp":{"name":"addressSpace","abstract":"<p>Retrieves the address space where the pointed-to object resides.</p>","parent_name":"PointerType"},"Structs/PointerType.html#/s:4LLVM11PointerTypeV7pointee12addressSpaceAcA6IRType_p_Sitcfc":{"name":"init(pointee:addressSpace:)","abstract":"<p>Creates a <code>PointerType</code> from a pointee type and an optional address space.</p>","parent_name":"PointerType"},"Structs/PointerType.html#/s:4LLVM11PointerTypeV6toVoidACvpZ":{"name":"toVoid","abstract":"<p>/ Creates a type that simulates a pointer to void <code>(void*)</code>.</p>","parent_name":"PointerType"},"Structs/PointerType.html#/s:4LLVM11PointerTypeV02asA0s06OpaqueB0VyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM type object.</p>","parent_name":"PointerType"},"Structs/PointerType.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"PointerType"},"Structs/PhiNode.html#/s:4LLVM7PhiNodeV11addIncomingyySayAA7IRValue_p_AA10BasicBlockVtGF":{"name":"addIncoming(_:)","abstract":"<p>Adds a list of incoming value and their associated basic blocks to the end","parent_name":"PhiNode"},"Structs/PhiNode.html#/s:4LLVM7PhiNodeV8incomingSayAA7IRValue_p_AA10BasicBlockVtGvp":{"name":"incoming","abstract":"<p>Obtain the incoming values and their associated basic blocks for this PHI","parent_name":"PhiNode"},"Structs/PhiNode.html#/s:4LLVM7PhiNodeV13incomingValue2atAA7IRValue_pSgSi_tF":{"name":"incomingValue(at:)","abstract":"<p>Retrieves the incoming value for the given index for this PHI node, if it","parent_name":"PhiNode"},"Structs/PhiNode.html#/s:4LLVM7PhiNodeV13incomingBlock2atAA05BasicE0VSgSi_tF":{"name":"incomingBlock(at:)","abstract":"<p>Retrieves the incoming basic block for the given index for this PHI node,","parent_name":"PhiNode"},"Structs/PhiNode.html#/s:4LLVM7PhiNodeV02asA0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM value object.</p>","parent_name":"PhiNode"},"Structs/Relocation.html#/s:4LLVM10RelocationV4typeSivp":{"name":"type","abstract":"<p>Retrieves the type of this relocation.</p>","parent_name":"Relocation"},"Structs/Relocation.html#/s:4LLVM10RelocationV6offsetSivp":{"name":"offset","abstract":"<p>The offset the relocated symbol resides at.</p>","parent_name":"Relocation"},"Structs/Relocation.html#/s:4LLVM10RelocationV6symbolAA6SymbolVvp":{"name":"symbol","abstract":"<p>The symbol that is the subject of the relocation.</p>","parent_name":"Relocation"},"Structs/Relocation.html#/s:4LLVM10RelocationV8typeNameSSvp":{"name":"typeName","abstract":"<p>Get a string that represents the type of this relocation for display","parent_name":"Relocation"},"Structs/Symbol.html#/s:4LLVM6SymbolV4nameSSvp":{"name":"name","abstract":"<p>The symbol name.</p>","parent_name":"Symbol"},"Structs/Symbol.html#/s:4LLVM6SymbolV4sizeSivp":{"name":"size","abstract":"<p>The size of the data in the symbol.</p>","parent_name":"Symbol"},"Structs/Symbol.html#/s:4LLVM6SymbolV7addressSivp":{"name":"address","abstract":"<p>The address of the symbol in the object file.</p>","parent_name":"Symbol"},"Structs/Section.html#/s:4LLVM7SectionV4nameSSvp":{"name":"name","abstract":"<p>The section&rsquo;s declared name.</p>","parent_name":"Section"},"Structs/Section.html#/s:4LLVM7SectionV4sizeSivp":{"name":"size","abstract":"<p>The size of the contents of the section.</p>","parent_name":"Section"},"Structs/Section.html#/s:4LLVM7SectionV8contentsSSvp":{"name":"contents","abstract":"<p>The raw contents of the section.</p>","parent_name":"Section"},"Structs/Section.html#/s:4LLVM7SectionV7addressSivp":{"name":"address","abstract":"<p>The address of the section in the object file.</p>","parent_name":"Section"},"Structs/Section.html#/s:4LLVM7SectionV11relocationsAA18RelocationSequenceCvp":{"name":"relocations","abstract":"<p>Returns a sequence of all the relocations in this object file.</p>","parent_name":"Section"},"Structs/Section.html#/s:4LLVM7SectionV8contains6symbolSbAA6SymbolV_tF":{"name":"contains(symbol:)","abstract":"<p>Returns whether a symbol matching the given <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Symbol.html\">Symbol</a></code> can be found in","parent_name":"Section"},"Structs/MetadataType.html#/s:4LLVM12MetadataTypeV7contextAA7ContextCvp":{"name":"context","abstract":"<p>Returns the context associated with this type.</p>","parent_name":"MetadataType"},"Structs/MetadataType.html#/s:4LLVM12MetadataTypeV2inAcA7ContextC_tcfc":{"name":"init(in:)","abstract":"<p>Creates an embedded metadata type for the given LLVM type object.</p>","parent_name":"MetadataType"},"Structs/MetadataType.html#/s:4LLVM12MetadataTypeV02asA0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM type object.</p>","parent_name":"MetadataType"},"Structs/MetadataType.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"MetadataType"},"Structs/DIFlags.html#/s:SY8rawValue03RawB0Qzvp":{"name":"rawValue","parent_name":"DIFlags"},"Structs/DIFlags.html#/s:s9OptionSetP8rawValuex03RawD0Qz_tcfc":{"name":"init(rawValue:)","parent_name":"DIFlags"},"Structs/DIFlags.html#/s:4LLVM7DIFlagsV7privateACvpZ":{"name":"private","abstract":"<p>Denotes the <code>private</code> visibility attribute.</p>","parent_name":"DIFlags"},"Structs/DIFlags.html#/s:4LLVM7DIFlagsV9protectedACvpZ":{"name":"protected","abstract":"<p>Denotes the <code>protected</code> visibility attribute.</p>","parent_name":"DIFlags"},"Structs/DIFlags.html#/s:4LLVM7DIFlagsV6publicACvpZ":{"name":"public","abstract":"<p>Denotes the <code>public</code> visibility attribute.</p>","parent_name":"DIFlags"},"Structs/DIFlags.html#/s:4LLVM7DIFlagsV18forwardDeclarationACvpZ":{"name":"forwardDeclaration","abstract":"<p>Denotes a forward declaration.</p>","parent_name":"DIFlags"},"Structs/DIFlags.html#/s:4LLVM7DIFlagsV10appleBlockACvpZ":{"name":"appleBlock","abstract":"<p>Denotes a block object.</p>","parent_name":"DIFlags"},"Structs/DIFlags.html#/s:4LLVM7DIFlagsV16blockByrefStructACvpZ":{"name":"blockByrefStruct","abstract":"<p>Denotes the structure containing a variable captured by reference in a","parent_name":"DIFlags"},"Structs/DIFlags.html#/s:4LLVM7DIFlagsV7virtualACvpZ":{"name":"virtual","abstract":"<p>Denotes a virtual function or dynamic dispatch.</p>","parent_name":"DIFlags"},"Structs/DIFlags.html#/s:4LLVM7DIFlagsV10artificialACvpZ":{"name":"artificial","abstract":"<p>Denotes a compiler-generated declaration that may not appear in source.</p>","parent_name":"DIFlags"},"Structs/DIFlags.html#/s:4LLVM7DIFlagsV8explicitACvpZ":{"name":"explicit","abstract":"<p>Denotes an <code>explicit</code>-annotated declaration.</p>","parent_name":"DIFlags"},"Structs/DIFlags.html#/s:4LLVM7DIFlagsV10prototypedACvpZ":{"name":"prototyped","abstract":"<p>Denotes a prototype declaration.</p>","parent_name":"DIFlags"},"Structs/DIFlags.html#/s:4LLVM7DIFlagsV23objectiveCClassCompleteACvpZ":{"name":"objectiveCClassComplete","abstract":"<p>Denotes an Objective-C class whose definition is visible to the compiler.</p>","parent_name":"DIFlags"},"Structs/DIFlags.html#/s:4LLVM7DIFlagsV13objectPointerACvpZ":{"name":"objectPointer","abstract":"<p>Denotes a pointer value that is known to point to a C++ or Objective-C","parent_name":"DIFlags"},"Structs/DIFlags.html#/s:4LLVM7DIFlagsV6vectorACvpZ":{"name":"vector","abstract":"<p>Denotes a vector type.</p>","parent_name":"DIFlags"},"Structs/DIFlags.html#/s:4LLVM7DIFlagsV12staticMemberACvpZ":{"name":"staticMember","abstract":"<p>Denotes a static member.</p>","parent_name":"DIFlags"},"Structs/DIFlags.html#/s:4LLVM7DIFlagsV15lValueReferenceACvpZ":{"name":"lValueReference","abstract":"<p>Denotes an lvalue reference.</p>","parent_name":"DIFlags"},"Structs/DIFlags.html#/s:4LLVM7DIFlagsV15rValueReferenceACvpZ":{"name":"rValueReference","abstract":"<p>Denotes an rvalue reference.</p>","parent_name":"DIFlags"},"Structs/DIFlags.html#/s:4LLVM7DIFlagsV17singleInheritanceACvpZ":{"name":"singleInheritance","abstract":"<p>Denotes a class type that is part of a single inheritance class hierarchy.","parent_name":"DIFlags"},"Structs/DIFlags.html#/s:4LLVM7DIFlagsV19multipleInheritanceACvpZ":{"name":"multipleInheritance","abstract":"<p>Denotes a class type that is part of a multiple inheritance class","parent_name":"DIFlags"},"Structs/DIFlags.html#/s:4LLVM7DIFlagsV18virtualInheritanceACvpZ":{"name":"virtualInheritance","abstract":"<p>Denotes a class type whose inheritance involves virtual members.  This","parent_name":"DIFlags"},"Structs/DIFlags.html#/s:4LLVM7DIFlagsV17introducedVirtualACvpZ":{"name":"introducedVirtual","abstract":"<p>Denotes a class type that introduces virtual members.  This is needed for","parent_name":"DIFlags"},"Structs/DIFlags.html#/s:4LLVM7DIFlagsV8bitFieldACvpZ":{"name":"bitField","abstract":"<p>Denotes a bitfield type.</p>","parent_name":"DIFlags"},"Structs/DIFlags.html#/s:4LLVM7DIFlagsV8noReturnACvpZ":{"name":"noReturn","abstract":"<p>Denotes a <code>noreturn</code> function.</p>","parent_name":"DIFlags"},"Structs/DIFlags.html#/s:4LLVM7DIFlagsV14mainSubprogramACvpZ":{"name":"mainSubprogram","abstract":"<p>Denotes the subprogram for main.</p>","parent_name":"DIFlags"},"Structs/DIFlags.html#/s:4LLVM7DIFlagsV11passByValueACvpZ":{"name":"passByValue","abstract":"<p>Denotes a parameter that is passed by value according to the target&rsquo;s","parent_name":"DIFlags"},"Structs/DIFlags.html#/s:4LLVM7DIFlagsV15passByReferenceACvpZ":{"name":"passByReference","abstract":"<p>Denotes a parameter that is passed by indirect reference according to the","parent_name":"DIFlags"},"Structs/DIFlags.html#/s:4LLVM7DIFlagsV9enumClassACvpZ":{"name":"enumClass","abstract":"<p>Denotes a <q>fixed enum</q> type e.g. a C++ <code>enum class</code>.</p>","parent_name":"DIFlags"},"Structs/DIFlags.html#/s:4LLVM7DIFlagsV5thunkACvpZ":{"name":"thunk","abstract":"<p>Denotes a thunk function.</p>","parent_name":"DIFlags"},"Structs/DIFlags.html#/s:4LLVM7DIFlagsV7trivialACvpZ":{"name":"trivial","abstract":"<p>Denotes a class that has a trivial default constructor and is trivially","parent_name":"DIFlags"},"Structs/DIFlags.html#/s:4LLVM7DIFlagsV19indirectVirtualBaseACvpZ":{"name":"indirectVirtualBase","abstract":"<p>Denotes an indirect virtual base class.</p>","parent_name":"DIFlags"},"Structs/DIFlags.html#/s:4LLVM7DIFlagsV13accessibilityACvpZ":{"name":"accessibility","abstract":"<p>The mask for <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/DIFlags.html#/s:4LLVM7DIFlagsV6publicACvpZ\">public</a></code>, <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/DIFlags.html#/s:4LLVM7DIFlagsV7privateACvpZ\">private</a></code>, and <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/DIFlags.html#/s:4LLVM7DIFlagsV9protectedACvpZ\">protected</a></code> accessibility.</p>","parent_name":"DIFlags"},"Structs/DIFlags.html#/s:4LLVM7DIFlagsV18pointerToMemberRepACvpZ":{"name":"pointerToMemberRep","abstract":"<p>The mask for <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/DIFlags.html#/s:4LLVM7DIFlagsV17singleInheritanceACvpZ\">singleInheritance</a></code>, <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/DIFlags.html#/s:4LLVM7DIFlagsV19multipleInheritanceACvpZ\">multipleInheritance</a></code>,","parent_name":"DIFlags"},"Structs/ObjectiveCPropertyAttribute.html#/s:SY8rawValue03RawB0Qzvp":{"name":"rawValue","parent_name":"ObjectiveCPropertyAttribute"},"Structs/ObjectiveCPropertyAttribute.html#/s:s9OptionSetP8rawValuex03RawD0Qz_tcfc":{"name":"init(rawValue:)","parent_name":"ObjectiveCPropertyAttribute"},"Structs/ObjectiveCPropertyAttribute.html#/s:4LLVM27ObjectiveCPropertyAttributeV8readonlyACvpZ":{"name":"readonly","abstract":"<p>Indicates a property has <code>readonly</code> access.</p>","parent_name":"ObjectiveCPropertyAttribute"},"Structs/ObjectiveCPropertyAttribute.html#/s:4LLVM27ObjectiveCPropertyAttributeV6getterACvpZ":{"name":"getter","abstract":"<p>Indicates a property has a customized getter name.</p>","parent_name":"ObjectiveCPropertyAttribute"},"Structs/ObjectiveCPropertyAttribute.html#/s:4LLVM27ObjectiveCPropertyAttributeV6assignACvpZ":{"name":"assign","abstract":"<p>Indicates a property has <code>assign</code> ownership.</p>","parent_name":"ObjectiveCPropertyAttribute"},"Structs/ObjectiveCPropertyAttribute.html#/s:4LLVM27ObjectiveCPropertyAttributeV9readwriteACvpZ":{"name":"readwrite","abstract":"<p>Indicates a property has <code>readwrite</code> access.</p>","parent_name":"ObjectiveCPropertyAttribute"},"Structs/ObjectiveCPropertyAttribute.html#/s:4LLVM27ObjectiveCPropertyAttributeV6retainACvpZ":{"name":"retain","abstract":"<p>Indicates a property has <code>retain</code> ownership.</p>","parent_name":"ObjectiveCPropertyAttribute"},"Structs/ObjectiveCPropertyAttribute.html#/s:4LLVM27ObjectiveCPropertyAttributeV4copyACvpZ":{"name":"copy","abstract":"<p>Indicates a property has <code>copy</code> ownership.</p>","parent_name":"ObjectiveCPropertyAttribute"},"Structs/ObjectiveCPropertyAttribute.html#/s:4LLVM27ObjectiveCPropertyAttributeV9nonatomicACvpZ":{"name":"nonatomic","abstract":"<p>Indicates a property has <code>nonatomic</code> accessors.</p>","parent_name":"ObjectiveCPropertyAttribute"},"Structs/ObjectiveCPropertyAttribute.html#/s:4LLVM27ObjectiveCPropertyAttributeV6setterACvpZ":{"name":"setter","abstract":"<p>Indicates a property has a customized setter name.</p>","parent_name":"ObjectiveCPropertyAttribute"},"Structs/ObjectiveCPropertyAttribute.html#/s:4LLVM27ObjectiveCPropertyAttributeV6atomicACvpZ":{"name":"atomic","abstract":"<p>Indicates a property has <code>atomic</code> accessors.</p>","parent_name":"ObjectiveCPropertyAttribute"},"Structs/ObjectiveCPropertyAttribute.html#/s:4LLVM27ObjectiveCPropertyAttributeV4weakACvpZ":{"name":"weak","abstract":"<p>Indicates a property has <code>weak</code> ownership.</p>","parent_name":"ObjectiveCPropertyAttribute"},"Structs/ObjectiveCPropertyAttribute.html#/s:4LLVM27ObjectiveCPropertyAttributeV6strongACvpZ":{"name":"strong","abstract":"<p>Indicates a property has <code>strong</code> ownership.</p>","parent_name":"ObjectiveCPropertyAttribute"},"Structs/ObjectiveCPropertyAttribute.html#/s:4LLVM27ObjectiveCPropertyAttributeV16unsafeUnretainedACvpZ":{"name":"unsafeUnretained","abstract":"<p>Indicates a property has <code>unsafe_unretained</code> ownership.</p>","parent_name":"ObjectiveCPropertyAttribute"},"Structs/ObjectiveCPropertyAttribute.html#/s:4LLVM27ObjectiveCPropertyAttributeV11nullabilityACvpZ":{"name":"nullability","abstract":"<p>Indicates a property has an explicit nullability annotation.</p>","parent_name":"ObjectiveCPropertyAttribute"},"Structs/ObjectiveCPropertyAttribute.html#/s:4LLVM27ObjectiveCPropertyAttributeV14nullResettableACvpZ":{"name":"nullResettable","abstract":"<p>Indicates a property is null_resettable.</p>","parent_name":"ObjectiveCPropertyAttribute"},"Structs/ObjectiveCPropertyAttribute.html#/s:4LLVM27ObjectiveCPropertyAttributeV5classACvpZ":{"name":"class","abstract":"<p>Indicates a property is a <code>class</code> property.</p>","parent_name":"ObjectiveCPropertyAttribute"},"Structs/LabelType.html#/s:4LLVM9LabelTypeV7contextAA7ContextCvp":{"name":"context","abstract":"<p>Returns the context associated with this type.</p>","parent_name":"LabelType"},"Structs/LabelType.html#/s:4LLVM9LabelTypeV2inAcA7ContextC_tcfc":{"name":"init(in:)","abstract":"<p>Creates a code label.</p>","parent_name":"LabelType"},"Structs/LabelType.html#/s:4LLVM9LabelTypeV02asA0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM type object.</p>","parent_name":"LabelType"},"Structs/LabelType.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"LabelType"},"Structs/IntType.html#/s:4LLVM7IntTypeV5widthSivp":{"name":"width","abstract":"<p>Retrieves the bit width of this integer type.</p>","parent_name":"IntType"},"Structs/IntType.html#/s:4LLVM7IntTypeV7contextAA7ContextCvp":{"name":"context","abstract":"<p>Returns the context associated with this type.</p>","parent_name":"IntType"},"Structs/IntType.html#/s:4LLVM7IntTypeV5width2inACSi_AA7ContextCtcfc":{"name":"init(width:in:)","abstract":"<p>Creates an integer type with the specified bit width.</p>","parent_name":"IntType"},"Structs/IntType.html#/s:4LLVM7IntTypeV4int1ACvpZ":{"name":"int1","abstract":"<p>Retrieves the <code>i1</code> type.</p>","parent_name":"IntType"},"Structs/IntType.html#/s:4LLVM7IntTypeV4int8ACvpZ":{"name":"int8","abstract":"<p>Retrieves the <code>i8</code> type.</p>","parent_name":"IntType"},"Structs/IntType.html#/s:4LLVM7IntTypeV5int16ACvpZ":{"name":"int16","abstract":"<p>Retrieves the <code>i16</code> type.</p>","parent_name":"IntType"},"Structs/IntType.html#/s:4LLVM7IntTypeV5int32ACvpZ":{"name":"int32","abstract":"<p>Retrieves the <code>i32</code> type.</p>","parent_name":"IntType"},"Structs/IntType.html#/s:4LLVM7IntTypeV5int64ACvpZ":{"name":"int64","abstract":"<p>Retrieves the <code>i64</code> type.</p>","parent_name":"IntType"},"Structs/IntType.html#/s:4LLVM7IntTypeV6int128ACvpZ":{"name":"int128","abstract":"<p>Retrieves the <code>i128</code> type.</p>","parent_name":"IntType"},"Structs/IntType.html#/s:4LLVM7IntTypeV4zeroAA10IRConstant_pyF":{"name":"zero()","abstract":"<p>Retrieves an integer value of this type&rsquo;s bit width consisting of all","parent_name":"IntType"},"Structs/IntType.html#/s:4LLVM7IntTypeV8constant_10signExtendAA8ConstantVyAA8UnsignedOGx_SbtSURzlF":{"name":"constant(_:signExtend:)","abstract":"<p>Creates an unsigned integer constant value with the given Swift integer value.</p>","parent_name":"IntType"},"Structs/IntType.html#/s:4LLVM7IntTypeV8constant_10signExtendAA8ConstantVyAA6SignedOGx_SbtSZRzlF":{"name":"constant(_:signExtend:)","abstract":"<p>Creates a signed integer constant value with the given Swift integer value.</p>","parent_name":"IntType"},"Structs/IntType.html#/s:4LLVM7IntTypeV8constant_5radixAA8ConstantVyAA6SignedOGSS_SitF":{"name":"constant(_:radix:)","abstract":"<p>Creates a constant integer value of this type parsed from a string.</p>","parent_name":"IntType"},"Structs/IntType.html#/s:4LLVM7IntTypeV7allOnesAA10IRConstant_pyF":{"name":"allOnes()","abstract":"<p>Retrieves an integer value of this type&rsquo;s bit width consisting of all","parent_name":"IntType"},"Structs/IntType.html#/s:4LLVM7IntTypeV02asA0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM type object.</p>","parent_name":"IntType"},"Structs/IntType.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"IntType"},"Structs/TerminatorInstruction.html#/s:4LLVM21TerminatorInstructionV4llvmACs13OpaquePointerV_tcfc":{"name":"init(llvm:)","abstract":"<p>Creates a <code>TerminatorInstruction</code> from an <code>LLVMValueRef</code> object.</p>","parent_name":"TerminatorInstruction"},"Structs/TerminatorInstruction.html#/s:4LLVM21TerminatorInstructionV14successorCountSivp":{"name":"successorCount","abstract":"<p>Retrieves the number of successors of this terminator instruction.</p>","parent_name":"TerminatorInstruction"},"Structs/TerminatorInstruction.html#/s:4LLVM21TerminatorInstructionV12getSuccessor2atAA10BasicBlockVSgSi_tF":{"name":"getSuccessor(at:)","abstract":"<p>Returns the successor block at the specified index, if it exists.</p>","parent_name":"TerminatorInstruction"},"Structs/TerminatorInstruction.html#/s:4LLVM21TerminatorInstructionV12setSuccessor2at2toySi_AA10BasicBlockVtF":{"name":"setSuccessor(at:to:)","abstract":"<p>Updates the successor block at the specified index.</p>","parent_name":"TerminatorInstruction"},"Structs/ExpressionMetadata.html#/s:4LLVM10IRMetadataP10asMetadatas13OpaquePointerVyF":{"name":"asMetadata()","parent_name":"ExpressionMetadata"},"Structs/ExpressionMetadata.html#/s:4LLVM26_IRMetadataInitializerHackP4llvmxs13OpaquePointerV_tcfc":{"name":"init(llvm:)","parent_name":"ExpressionMetadata"},"Structs/NameSpaceMetadata.html#/s:4LLVM10IRMetadataP10asMetadatas13OpaquePointerVyF":{"name":"asMetadata()","parent_name":"NameSpaceMetadata"},"Structs/NameSpaceMetadata.html#/s:4LLVM26_IRMetadataInitializerHackP4llvmxs13OpaquePointerV_tcfc":{"name":"init(llvm:)","parent_name":"NameSpaceMetadata"},"Structs/ModuleMetadata.html#/s:4LLVM10IRMetadataP10asMetadatas13OpaquePointerVyF":{"name":"asMetadata()","parent_name":"ModuleMetadata"},"Structs/ModuleMetadata.html#/s:4LLVM26_IRMetadataInitializerHackP4llvmxs13OpaquePointerV_tcfc":{"name":"init(llvm:)","parent_name":"ModuleMetadata"},"Structs/FunctionMetadata.html#/s:4LLVM10IRMetadataP10asMetadatas13OpaquePointerVyF":{"name":"asMetadata()","parent_name":"FunctionMetadata"},"Structs/FunctionMetadata.html#/s:4LLVM26_IRMetadataInitializerHackP4llvmxs13OpaquePointerV_tcfc":{"name":"init(llvm:)","parent_name":"FunctionMetadata"},"Structs/ImportedEntityMetadata.html#/s:4LLVM10IRMetadataP10asMetadatas13OpaquePointerVyF":{"name":"asMetadata()","parent_name":"ImportedEntityMetadata"},"Structs/ImportedEntityMetadata.html#/s:4LLVM26_IRMetadataInitializerHackP4llvmxs13OpaquePointerV_tcfc":{"name":"init(llvm:)","parent_name":"ImportedEntityMetadata"},"Structs/ObjectiveCPropertyMetadata.html#/s:4LLVM10IRMetadataP10asMetadatas13OpaquePointerVyF":{"name":"asMetadata()","parent_name":"ObjectiveCPropertyMetadata"},"Structs/ObjectiveCPropertyMetadata.html#/s:4LLVM26_IRMetadataInitializerHackP4llvmxs13OpaquePointerV_tcfc":{"name":"init(llvm:)","parent_name":"ObjectiveCPropertyMetadata"},"Structs/LocalVariableMetadata.html#/s:4LLVM10IRMetadataP10asMetadatas13OpaquePointerVyF":{"name":"asMetadata()","parent_name":"LocalVariableMetadata"},"Structs/LocalVariableMetadata.html#/s:4LLVM26_IRMetadataInitializerHackP4llvmxs13OpaquePointerV_tcfc":{"name":"init(llvm:)","parent_name":"LocalVariableMetadata"},"Structs/LexicalBlockFileMetadata.html#/s:4LLVM10IRMetadataP10asMetadatas13OpaquePointerVyF":{"name":"asMetadata()","parent_name":"LexicalBlockFileMetadata"},"Structs/LexicalBlockFileMetadata.html#/s:4LLVM26_IRMetadataInitializerHackP4llvmxs13OpaquePointerV_tcfc":{"name":"init(llvm:)","parent_name":"LexicalBlockFileMetadata"},"Structs/LexicalBlockMetadata.html#/s:4LLVM10IRMetadataP10asMetadatas13OpaquePointerVyF":{"name":"asMetadata()","parent_name":"LexicalBlockMetadata"},"Structs/LexicalBlockMetadata.html#/s:4LLVM26_IRMetadataInitializerHackP4llvmxs13OpaquePointerV_tcfc":{"name":"init(llvm:)","parent_name":"LexicalBlockMetadata"},"Structs/DISubroutineType.html#/s:4LLVM10IRMetadataP10asMetadatas13OpaquePointerVyF":{"name":"asMetadata()","parent_name":"DISubroutineType"},"Structs/DISubroutineType.html#/s:4LLVM26_IRMetadataInitializerHackP4llvmxs13OpaquePointerV_tcfc":{"name":"init(llvm:)","parent_name":"DISubroutineType"},"Structs/DIBasicType.html#/s:4LLVM10IRMetadataP10asMetadatas13OpaquePointerVyF":{"name":"asMetadata()","parent_name":"DIBasicType"},"Structs/DIBasicType.html#/s:4LLVM26_IRMetadataInitializerHackP4llvmxs13OpaquePointerV_tcfc":{"name":"init(llvm:)","parent_name":"DIBasicType"},"Structs/FileMetadata.html#/s:4LLVM10IRMetadataP10asMetadatas13OpaquePointerVyF":{"name":"asMetadata()","parent_name":"FileMetadata"},"Structs/FileMetadata.html#/s:4LLVM26_IRMetadataInitializerHackP4llvmxs13OpaquePointerV_tcfc":{"name":"init(llvm:)","parent_name":"FileMetadata"},"Structs/CompileUnitMetadata.html#/s:4LLVM10IRMetadataP10asMetadatas13OpaquePointerVyF":{"name":"asMetadata()","parent_name":"CompileUnitMetadata"},"Structs/CompileUnitMetadata.html#/s:4LLVM26_IRMetadataInitializerHackP4llvmxs13OpaquePointerV_tcfc":{"name":"init(llvm:)","parent_name":"CompileUnitMetadata"},"Structs/DebugLocation.html#/s:4LLVM10IRMetadataP10asMetadatas13OpaquePointerVyF":{"name":"asMetadata()","parent_name":"DebugLocation"},"Structs/DebugLocation.html#/s:4LLVM13DebugLocationV4lineSivp":{"name":"line","abstract":"<p>Retrieves the line described by this location.</p>","parent_name":"DebugLocation"},"Structs/DebugLocation.html#/s:4LLVM13DebugLocationV6columnSivp":{"name":"column","abstract":"<p>Retrieves the column described by this location.</p>","parent_name":"DebugLocation"},"Structs/DebugLocation.html#/s:4LLVM13DebugLocationV5scopeAA7DIScope_pvp":{"name":"scope","abstract":"<p>Retrieves the enclosing scope containing this location.</p>","parent_name":"DebugLocation"},"Structs/DebugLocation.html#/s:4LLVM26_IRMetadataInitializerHackP4llvmxs13OpaquePointerV_tcfc":{"name":"init(llvm:)","parent_name":"DebugLocation"},"Structs/FunctionType.html#/s:4LLVM12FunctionTypeV8argTypesSayAA6IRType_pGvp":{"name":"argTypes","abstract":"<p>The list of argument types.</p>","parent_name":"FunctionType"},"Structs/FunctionType.html#/s:4LLVM12FunctionTypeV06returnC0AA6IRType_pvp":{"name":"returnType","abstract":"<p>The return type of this function type.</p>","parent_name":"FunctionType"},"Structs/FunctionType.html#/s:4LLVM12FunctionTypeV8isVarArgSbvp":{"name":"isVarArg","abstract":"<p>Returns whether this function is variadic.</p>","parent_name":"FunctionType"},"Structs/FunctionType.html#/s:4LLVM12FunctionTypeV8argTypes06returnC08isVarArgACSayAA6IRType_pG_AaG_pSbtcfc":{"name":"init(argTypes:returnType:isVarArg:)","abstract":"<p>Creates a function type with the given argument types and return type.</p>","parent_name":"FunctionType"},"Structs/FunctionType.html#/s:4LLVM12FunctionTypeV02asA0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM type object.</p>","parent_name":"FunctionType"},"Structs/FunctionType.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"FunctionType"},"Structs/Parameter.html#/s:4LLVM9ParameterV4nextACSgyF":{"name":"next()","abstract":"<p>Retrieves the next parameter, if it exists.</p>","parent_name":"Parameter"},"Structs/Parameter.html#/s:4LLVM9ParameterV8previousACSgyF":{"name":"previous()","abstract":"<p>Retrieves the previous parameter, if it exists.</p>","parent_name":"Parameter"},"Structs/Parameter.html#/s:4LLVM9ParameterV02asA0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM value object.</p>","parent_name":"Parameter"},"Structs/StringAttribute.html#/s:4LLVM15StringAttributeV4nameSSvp":{"name":"name","abstract":"<p>The name of the attribute.</p>","parent_name":"StringAttribute"},"Structs/StringAttribute.html#/s:4LLVM15StringAttributeV5valueSSvp":{"name":"value","abstract":"<p>The value of the attribute.</p>","parent_name":"StringAttribute"},"Structs/StringAttribute.html#/s:4LLVM15StringAttributeV02asA0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM attribute object.</p>","parent_name":"StringAttribute"},"Structs/EnumAttribute.html#/s:4LLVM13EnumAttributeV5values6UInt64Vvp":{"name":"value","abstract":"<p>The value of the attribute.</p>","parent_name":"EnumAttribute"},"Structs/EnumAttribute.html#/s:4LLVM13EnumAttributeV02asA0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM attribute object.</p>","parent_name":"EnumAttribute"},"Structs/FloatType/Kind.html#/s:4LLVM9FloatTypeV4KindO4halfyA2EmF":{"name":"half","abstract":"<p>16-bit floating point value</p>","parent_name":"Kind"},"Structs/FloatType/Kind.html#/s:4LLVM9FloatTypeV4KindO5floatyA2EmF":{"name":"float","abstract":"<p>32-bit floating point value</p>","parent_name":"Kind"},"Structs/FloatType/Kind.html#/s:4LLVM9FloatTypeV4KindO6doubleyA2EmF":{"name":"double","abstract":"<p>64-bit floating point value</p>","parent_name":"Kind"},"Structs/FloatType/Kind.html#/s:4LLVM9FloatTypeV4KindO7x86FP80yA2EmF":{"name":"x86FP80","abstract":"<p>80-bit floating point value (X87)</p>","parent_name":"Kind"},"Structs/FloatType/Kind.html#/s:4LLVM9FloatTypeV4KindO5fp128yA2EmF":{"name":"fp128","abstract":"<p>128-bit floating point value (112-bit mantissa)</p>","parent_name":"Kind"},"Structs/FloatType/Kind.html#/s:4LLVM9FloatTypeV4KindO8ppcFP128yA2EmF":{"name":"ppcFP128","abstract":"<p>128-bit floating point value (two 64-bits)</p>","parent_name":"Kind"},"Structs/FloatType.html#/s:4LLVM9FloatTypeV4kindAC4KindOvp":{"name":"kind","abstract":"<p>The kind of floating point type this is</p>","parent_name":"FloatType"},"Structs/FloatType.html#/s:4LLVM9FloatTypeV7contextAA7ContextCvp":{"name":"context","abstract":"<p>Returns the context associated with this type.</p>","parent_name":"FloatType"},"Structs/FloatType.html#/s:4LLVM9FloatTypeV4kind2inA2C4KindO_AA7ContextCtcfc":{"name":"init(kind:in:)","abstract":"<p>Creates a float type of a particular kind</p>","parent_name":"FloatType"},"Structs/FloatType/Kind.html":{"name":"Kind","abstract":"<p>Enumerates the bitwidth and kind of supported floating point types.</p>","parent_name":"FloatType"},"Structs/FloatType.html#/s:4LLVM9FloatTypeV4halfACvpZ":{"name":"half","abstract":"<p>16-bit floating point value in the global context</p>","parent_name":"FloatType"},"Structs/FloatType.html#/s:4LLVM9FloatTypeV5floatACvpZ":{"name":"float","abstract":"<p>32-bit floating point value in the global context</p>","parent_name":"FloatType"},"Structs/FloatType.html#/s:4LLVM9FloatTypeV6doubleACvpZ":{"name":"double","abstract":"<p>64-bit floating point value in the global context</p>","parent_name":"FloatType"},"Structs/FloatType.html#/s:4LLVM9FloatTypeV7x86FP80ACvpZ":{"name":"x86FP80","abstract":"<p>80-bit floating point value (X87) in the global context</p>","parent_name":"FloatType"},"Structs/FloatType.html#/s:4LLVM9FloatTypeV5fp128ACvpZ":{"name":"fp128","abstract":"<p>128-bit floating point value (112-bit mantissa) in the global context</p>","parent_name":"FloatType"},"Structs/FloatType.html#/s:4LLVM9FloatTypeV8ppcFP128ACvpZ":{"name":"ppcFP128","abstract":"<p>128-bit floating point value (two 64-bits) in the global context</p>","parent_name":"FloatType"},"Structs/FloatType.html#/s:4LLVM9FloatTypeV8constantyAA8ConstantVyAA8FloatingOGSdF":{"name":"constant(_:)","abstract":"<p>Creates a constant floating value of this type from a Swift <code>Double</code> value.</p>","parent_name":"FloatType"},"Structs/FloatType.html#/s:4LLVM9FloatTypeV8constantyAA8ConstantVyAA8FloatingOGSSF":{"name":"constant(_:)","abstract":"<p>Creates a constant floating value of this type parsed from a string.</p>","parent_name":"FloatType"},"Structs/FloatType.html#/s:4LLVM9FloatTypeV02asA0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM type object.</p>","parent_name":"FloatType"},"Structs/FloatType.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"FloatType"},"Structs/Constant.html#/s:4LLVM8ConstantV02asA0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM constant object.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A08IntegralB14RepresentationRzrlE4cast2toACyAA6SignedOGAA7IntTypeV_tF":{"name":"cast(to:)","abstract":"<p>Creates a constant cast to a given integral type.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A08IntegralB14RepresentationRzrlE4cast2toACyAA8UnsignedOGAA7IntTypeV_tF":{"name":"cast(to:)","abstract":"<p>Creates a constant cast to a given integral type.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8UnsignedORszrlE4cast2toACyAA8FloatingOGAA9FloatTypeV_tF":{"name":"cast(to:)","abstract":"<p>Creates a constant cast to a given floating type.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6SignedORszrlE4cast2toACyAEGAA7IntTypeV_tF":{"name":"cast(to:)","abstract":"<p>Creates a constant cast to a given integral type.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6SignedORszrlE4cast2toACyAA8UnsignedOGAA7IntTypeV_tF":{"name":"cast(to:)","abstract":"<p>Creates a constant cast to a given integral type.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6SignedORszrlE4cast2toACyAA8FloatingOGAA9FloatTypeV_tF":{"name":"cast(to:)","abstract":"<p>Creates a constant cast to a given floating type.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8FloatingORszrlE4cast2toACyAA6SignedOGAA7IntTypeV_tF":{"name":"cast(to:)","abstract":"<p>Creates a constant cast to a given integral type.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8FloatingORszrlE4cast2toACyAA8UnsignedOGAA7IntTypeV_tF":{"name":"cast(to:)","abstract":"<p>Creates a constant cast to a given integral type.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8FloatingORszrlE4cast2toACyAEGAA9FloatTypeV_tF":{"name":"cast(to:)","abstract":"<p>Creates a constant cast to a given floating type.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6SignedORszrlE8truncate2toACyAEGAA7IntTypeV_tF":{"name":"truncate(to:)","abstract":"<p>Creates a constant truncated to a given integral type.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8UnsignedORszrlE8truncate2toACyAEGAA7IntTypeV_tF":{"name":"truncate(to:)","abstract":"<p>Creates a constant truncated to a given integral type.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8FloatingORszrlE8truncate2toACyAEGAA9FloatTypeV_tF":{"name":"truncate(to:)","abstract":"<p>Creates a constant truncated to a given floating type.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8FloatingORszrlE6extend2toACyAEGAA9FloatTypeV_tF":{"name":"extend(to:)","abstract":"<p>Creates a constant extended to a given floating type.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantV6negate_16overflowBehaviorACyAA6SignedOGAH_AA08OverflowE0OtFZ":{"name":"negate(_:overflowBehavior:)","abstract":"<p>Creates a constant negate operation to negate a value.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantV6negateyACyAA8FloatingOGAGFZ":{"name":"negate(_:)","abstract":"<p>Creates a constant negate operation to negate a value.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6SignedORszrlE6negateACyAEGyF":{"name":"negate()","abstract":"<p>Creates a constant negate operation to negate a value.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8FloatingORszrlE6negateACyAEGyF":{"name":"negate()","abstract":"<p>Creates a constant negate operation to negate a value.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantV3add__16overflowBehaviorACyAA8UnsignedOGAH_AhA08OverflowE0OtFZ":{"name":"add(_:_:overflowBehavior:)","abstract":"<p>Creates a constant add operation to add two homogenous constants together.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantV3add__16overflowBehaviorACyAA6SignedOGAH_AhA08OverflowE0OtFZ":{"name":"add(_:_:overflowBehavior:)","abstract":"<p>Creates a constant add operation to add two homogenous constants together.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantV3addyACyAA8FloatingOGAG_AGtFZ":{"name":"add(_:_:)","abstract":"<p>Creates a constant add operation to add two homogenous constants together.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6SignedORszrlE6adding_16overflowBehaviorACyAEGAH_AA08OverflowF0OtF":{"name":"adding(_:overflowBehavior:)","abstract":"<p>Creates a constant add operation to add two homogenous constants together.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8UnsignedORszrlE6adding_16overflowBehaviorACyAEGAH_AA08OverflowF0OtF":{"name":"adding(_:overflowBehavior:)","abstract":"<p>Creates a constant add operation to add two homogenous constants together.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8FloatingORszrlE6addingyACyAEGAGF":{"name":"adding(_:)","abstract":"<p>Creates a constant add operation to add two homogenous constants together.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantV8subtract__16overflowBehaviorACyAA8UnsignedOGAH_AhA08OverflowE0OtFZ":{"name":"subtract(_:_:overflowBehavior:)","abstract":"<p>Creates a constant sub operation to subtract two homogenous constants.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantV8subtract__16overflowBehaviorACyAA6SignedOGAH_AhA08OverflowE0OtFZ":{"name":"subtract(_:_:overflowBehavior:)","abstract":"<p>Creates a constant sub operation to subtract two homogenous constants.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantV8subtractyACyAA8FloatingOGAG_AGtFZ":{"name":"subtract(_:_:)","abstract":"<p>Creates a constant sub operation to subtract two homogenous constants.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8UnsignedORszrlE11subtracting_16overflowBehaviorACyAEGAH_AA08OverflowF0OtF":{"name":"subtracting(_:overflowBehavior:)","abstract":"<p>Creates a constant sub operation to subtract two homogenous constants.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6SignedORszrlE11subtracting_16overflowBehaviorACyAEGAH_AA08OverflowF0OtF":{"name":"subtracting(_:overflowBehavior:)","abstract":"<p>Creates a constant sub operation to subtract two homogenous constants.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8FloatingORszrlE11subtractingyACyAEGAGF":{"name":"subtracting(_:)","abstract":"<p>Creates a constant sub operation to subtract two homogenous constants.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantV8multiply__16overflowBehaviorACyAA8UnsignedOGAH_AhA08OverflowE0OtFZ":{"name":"multiply(_:_:overflowBehavior:)","abstract":"<p>Creates a constant multiply operation with the given values as operands.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantV8multiply__16overflowBehaviorACyAA6SignedOGAH_AhA08OverflowE0OtFZ":{"name":"multiply(_:_:overflowBehavior:)","abstract":"<p>Creates a constant multiply operation with the given values as operands.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantV8multiplyyACyAA8FloatingOGAG_AGtFZ":{"name":"multiply(_:_:)","abstract":"<p>Creates a constant multiply operation with the given values as operands.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8UnsignedORszrlE11multiplying_16overflowBehaviorACyAEGAH_AA08OverflowF0OtF":{"name":"multiplying(_:overflowBehavior:)","abstract":"<p>Creates a constant multiply operation with the given values as operands.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6SignedORszrlE11multiplying_16overflowBehaviorACyAEGAH_AA08OverflowF0OtF":{"name":"multiplying(_:overflowBehavior:)","abstract":"<p>Creates a constant multiply operation with the given values as operands.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8FloatingORszrlE11multiplyingyACyAEGAGF":{"name":"multiplying(_:)","abstract":"<p>Creates a constant multiply operation with the given values as operands.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantV6divideyACyAA8UnsignedOGAG_AGtFZ":{"name":"divide(_:_:)","abstract":"<p>A constant divide operation that provides the remainder after divison of","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantV6divideyACyAA6SignedOGAG_AGtFZ":{"name":"divide(_:_:)","abstract":"<p>A constant divide operation that provides the remainder after divison of","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantV6divideyACyAA8FloatingOGAG_AGtFZ":{"name":"divide(_:_:)","abstract":"<p>A constant divide operation that provides the remainder after divison of","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8UnsignedORszrlE8dividing2byACyAEGAH_tF":{"name":"dividing(by:)","abstract":"<p>A constant divide operation that provides the remainder after divison of","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6SignedORszrlE8dividing2byACyAEGAH_tF":{"name":"dividing(by:)","abstract":"<p>A constant divide operation that provides the remainder after divison of","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8FloatingORszrlE8dividing2byACyAEGAH_tF":{"name":"dividing(by:)","abstract":"<p>A constant divide operation that provides the remainder after divison of","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantV9remainderyACyAA8UnsignedOGAG_AGtFZ":{"name":"remainder(_:_:)","abstract":"<p>A constant remainder operation that provides the remainder after divison","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantV9remainderyACyAA6SignedOGAG_AGtFZ":{"name":"remainder(_:_:)","abstract":"<p>A constant remainder operation that provides the remainder after divison","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantV9remainderyACyAA8FloatingOGAG_AGtFZ":{"name":"remainder(_:_:)","abstract":"<p>A constant remainder operation that provides the remainder after divison","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8UnsignedORszrlE9remainderyACyAEGAGF":{"name":"remainder(_:)","abstract":"<p>A constant remainder operation that provides the remainder after divison","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6SignedORszrlE9remainderyACyAEGAGF":{"name":"remainder(_:)","abstract":"<p>A constant remainder operation that provides the remainder after divison","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8FloatingORszrlE9remainderyACyAEGAGF":{"name":"remainder(_:)","abstract":"<p>A constant remainder operation that provides the remainder after divison","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A08IntegralB14RepresentationRzrlE6equalsyACyAA6SignedOGACyxG_AItFZ":{"name":"equals(_:_:)","abstract":"<p>A constant equality comparison between two values.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6SignedORszrlE8lessThanyACyAEGAG_AGtFZ":{"name":"lessThan(_:_:)","abstract":"<p>A constant less-than comparison between two values.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6SignedORszrlE11greaterThanyACyAEGAG_AGtFZ":{"name":"greaterThan(_:_:)","abstract":"<p>A constant greater-than comparison between two values.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6SignedORszrlE15lessThanOrEqualyACyAEGAG_AGtFZ":{"name":"lessThanOrEqual(_:_:)","abstract":"<p>A constant less-than-or-equal comparison between two values.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6SignedORszrlE18greaterThanOrEqualyACyAEGAG_AGtFZ":{"name":"greaterThanOrEqual(_:_:)","abstract":"<p>A constant greater-than-or-equal comparison between two values.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8UnsignedORszrlE8lessThanyACyAA6SignedOGACyAEG_AJtFZ":{"name":"lessThan(_:_:)","abstract":"<p>A constant less-than comparison between two values.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8UnsignedORszrlE11greaterThanyACyAA6SignedOGACyAEG_AJtFZ":{"name":"greaterThan(_:_:)","abstract":"<p>A constant greater-than comparison between two values.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8UnsignedORszrlE15lessThanOrEqualyACyAA6SignedOGACyAEG_AJtFZ":{"name":"lessThanOrEqual(_:_:)","abstract":"<p>A constant less-than-or-equal comparison between two values.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8UnsignedORszrlE18greaterThanOrEqualyACyAA6SignedOGACyAEG_AJtFZ":{"name":"greaterThanOrEqual(_:_:)","abstract":"<p>A constant greater-than-or-equal comparison between two values.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8FloatingORszrlE6equalsyACyAA6SignedOGACyAEG_AJtFZ":{"name":"equals(_:_:)","abstract":"<p>A constant equality comparison between two values.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8FloatingORszrlE8lessThanyACyAA6SignedOGACyAEG_AJtFZ":{"name":"lessThan(_:_:)","abstract":"<p>A constant less-than comparison between two values.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8FloatingORszrlE11greaterThanyACyAA6SignedOGACyAEG_AJtFZ":{"name":"greaterThan(_:_:)","abstract":"<p>A constant greater-than comparison between two values.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8FloatingORszrlE15lessThanOrEqualyACyAA6SignedOGACyAEG_AJtFZ":{"name":"lessThanOrEqual(_:_:)","abstract":"<p>A constant less-than-or-equal comparison between two values.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8FloatingORszrlE18greaterThanOrEqualyACyAA6SignedOGACyAEG_AJtFZ":{"name":"greaterThanOrEqual(_:_:)","abstract":"<p>A constant greater-than-or-equal comparison between two values.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantV3notyACyqd__GAeA08IntegralB14RepresentationRd__lFZ":{"name":"not(_:)","abstract":"<p>A constant bitwise logical not with the given integral value as an operand.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantV3andyACyqd__GAE_AEtAA08IntegralB14RepresentationRd__lFZ":{"name":"and(_:_:)","abstract":"<p>A constant bitwise logical AND with the given values as operands.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantV2oryACyqd__GAE_AEtAA08IntegralB14RepresentationRd__lFZ":{"name":"or(_:_:)","abstract":"<p>A constant bitwise logical OR with the given values as operands.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantV3xoryACyqd__GAE_AEtAA08IntegralB14RepresentationRd__lFZ":{"name":"xor(_:_:)","abstract":"<p>A constant bitwise logical exclusive OR with the given values as operands.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantV9leftShiftyACyqd__GAE_AEtAA08IntegralB14RepresentationRd__lFZ":{"name":"leftShift(_:_:)","abstract":"<p>A constant left-shift of the first value by the second amount.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantV10rightShift__10arithmeticACyqd__GAF_AFSbtAA08IntegralB14RepresentationRd__lFZ":{"name":"rightShift(_:_:arithmetic:)","abstract":"<p>A constant right-shift of the first value by the second amount.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantV6select_4then4elseACyqd_0_GACyqd__G_A2GtAA08IntegralB14RepresentationRd__AA0bG0Rd_0_r0_lFZ":{"name":"select(_:then:else:)","abstract":"<p>A constant select using the given condition to select among two values.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A08IntegralB14RepresentationRzrlE12pointerToIntyACyxGAA10IRConstant_p_AA0G4TypeVtFZ":{"name":"pointerToInt(_:_:)","abstract":"<p>Creates a constant pointer-to-integer operation to convert the given constant","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6StructORszrlE10getElement7indicesAA10IRConstant_pSaySiG_tF":{"name":"getElement(indices:)","abstract":"<p>Creates a constant operation retrieving the element at the index.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6StructORszrlE17getElementPointer7indicesAA10IRConstant_pSayAaH_pG_tF":{"name":"getElementPointer(indices:)","abstract":"<p>Build a constant <code>GEP</code> (Get Element Pointer) instruction with a resultant","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6StructORszrlE25inBoundsGetElementPointer7indicesAA10IRConstant_pSayAaH_pG_tF":{"name":"inBoundsGetElementPointer(indices:)","abstract":"<p>Build a GEP (Get Element Pointer) instruction.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6VectorORszrlE012buildShuffleC0_3and4maskACyAEGAI_A2ItFZ":{"name":"buildShuffleVector(_:and:mask:)","abstract":"<p>Builds a constant operation to construct a permutation of elements","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8FloatingORszrlE1poiyACyAEGAG_AGtFZ":{"name":"+(_:_:)","abstract":"<p>Creates a constant add operation to add two homogenous constants together.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8FloatingORszrlE1soiyACyAEGAG_AGtFZ":{"name":"-(_:_:)","abstract":"<p>Creates a constant sub operation to subtract two homogenous constants.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8FloatingORszrlE1moiyACyAEGAG_AGtFZ":{"name":"*(_:_:)","abstract":"<p>Creates a constant multiply operation with the given values as operands.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8FloatingORszrlE1doiyACyAEGAG_AGtFZ":{"name":"/(_:_:)","abstract":"<p>A constant divide operation that provides the remainder after divison of","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8FloatingORszrlE1roiyACyAEGAG_AGtFZ":{"name":"%(_:_:)","abstract":"<p>A constant remainder operation that provides the remainder after divison","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8FloatingORszrlE2eeoiyACyAA6SignedOGACyAEG_AJtFZ":{"name":"==(_:_:)","abstract":"<p>A constant equality comparison between two values.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8FloatingORszrlE1loiyACyAA6SignedOGACyAEG_AJtFZ":{"name":"<(_:_:)","abstract":"<p>A constant less-than comparison between two values.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8FloatingORszrlE1goiyACyAA6SignedOGACyAEG_AJtFZ":{"name":">(_:_:)","abstract":"<p>A constant greater-than comparison between two values.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8FloatingORszrlE2leoiyACyAA6SignedOGACyAEG_AJtFZ":{"name":"<=(_:_:)","abstract":"<p>A constant less-than-or-equal comparison between two values.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8FloatingORszrlE2geoiyACyAA6SignedOGACyAEG_AJtFZ":{"name":">=(_:_:)","abstract":"<p>A constant greater-than-or-equal comparison between two values.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6SignedORszrlE1poiyACyAEGAG_AGtFZ":{"name":"+(_:_:)","abstract":"<p>Creates a constant add operation to add two homogenous constants together.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6SignedORszrlE1soiyACyAEGAG_AGtFZ":{"name":"-(_:_:)","abstract":"<p>Creates a constant sub operation to subtract two homogenous constants.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6SignedORszrlE1moiyACyAEGAG_AGtFZ":{"name":"*(_:_:)","abstract":"<p>Creates a constant multiply operation with the given values as operands.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6SignedORszrlE1doiyACyAEGAG_AGtFZ":{"name":"/(_:_:)","abstract":"<p>A constant divide operation that provides the remainder after divison of","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6SignedORszrlE1roiyACyAEGAG_AGtFZ":{"name":"%(_:_:)","abstract":"<p>A constant remainder operation that provides the remainder after divison","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6SignedORszrlE2eeoiyACyAEGAG_AGtFZ":{"name":"==(_:_:)","abstract":"<p>A constant equality comparison between two values.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6SignedORszrlE1loiyACyAEGAG_AGtFZ":{"name":"<(_:_:)","abstract":"<p>A constant less-than comparison between two values.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6SignedORszrlE1goiyACyAEGAG_AGtFZ":{"name":">(_:_:)","abstract":"<p>A constant greater-than comparison between two values.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6SignedORszrlE2leoiyACyAEGAG_AGtFZ":{"name":"<=(_:_:)","abstract":"<p>A constant less-than-or-equal comparison between two values.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6SignedORszrlE2geoiyACyAEGAG_AGtFZ":{"name":">=(_:_:)","abstract":"<p>A constant greater-than-or-equal comparison between two values.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6SignedORszrlE1ooiyACyAEGAG_AGtFZ":{"name":"|(_:_:)","abstract":"<p>A constant bitwise logical OR with the given values as operands.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6SignedORszrlE1aoiyACyAEGAG_AGtFZ":{"name":"&(_:_:)","abstract":"<p>A constant bitwise logical AND with the given values as operands.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6SignedORszrlE2lloiyACyAEGAG_AGtFZ":{"name":"<<(_:_:)","abstract":"<p>A constant left-shift of the first value by the second amount.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6SignedORszrlE2ggoiyACyAEGAG_AGtFZ":{"name":">>(_:_:)","abstract":"<p>A constant right-shift of the first value by the second amount.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8UnsignedORszrlE1poiyACyAEGAG_AGtFZ":{"name":"+(_:_:)","abstract":"<p>Creates a constant add operation to add two homogenous constants together.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8UnsignedORszrlE1soiyACyAEGAG_AGtFZ":{"name":"-(_:_:)","abstract":"<p>Creates a constant sub operation to subtract two homogenous constants.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8UnsignedORszrlE1moiyACyAEGAG_AGtFZ":{"name":"*(_:_:)","abstract":"<p>Creates a constant multiply operation with the given values as operands.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8UnsignedORszrlE1doiyACyAEGAG_AGtFZ":{"name":"/(_:_:)","abstract":"<p>A constant divide operation that provides the remainder after divison of","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8UnsignedORszrlE1roiyACyAEGAG_AGtFZ":{"name":"%(_:_:)","abstract":"<p>A constant remainder operation that provides the remainder after divison","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8UnsignedORszrlE2eeoiyACyAA6SignedOGACyAEG_AJtFZ":{"name":"==(_:_:)","abstract":"<p>A constant equality comparison between two values.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8UnsignedORszrlE1loiyACyAA6SignedOGACyAEG_AJtFZ":{"name":"<(_:_:)","abstract":"<p>A constant less-than comparison between two values.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8UnsignedORszrlE1goiyACyAA6SignedOGACyAEG_AJtFZ":{"name":">(_:_:)","abstract":"<p>A constant greater-than comparison between two values.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8UnsignedORszrlE2leoiyACyAA6SignedOGACyAEG_AJtFZ":{"name":"<=(_:_:)","abstract":"<p>A constant less-than-or-equal comparison between two values.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8UnsignedORszrlE2geoiyACyAA6SignedOGACyAEG_AJtFZ":{"name":">=(_:_:)","abstract":"<p>A constant greater-than-or-equal comparison between two values.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8UnsignedORszrlE1ooiyACyAEGAG_AGtFZ":{"name":"|(_:_:)","abstract":"<p>A constant bitwise logical OR with the given values as operands.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8UnsignedORszrlE1aoiyACyAEGAG_AGtFZ":{"name":"&(_:_:)","abstract":"<p>A constant bitwise logical AND with the given values as operands.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8UnsignedORszrlE2lloiyACyAEGAG_AGtFZ":{"name":"<<(_:_:)","abstract":"<p>A constant left-shift of the first value by the second amount.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8UnsignedORszrlE2ggoiyACyAEGAG_AGtFZ":{"name":">>(_:_:)","abstract":"<p>A constant right-shift of the first value by the second amount.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A08IntegralB14RepresentationRzrlE1nopyACyxGAFFZ":{"name":"!(_:)","abstract":"<p>A constant bitwise logical not with the given integral value as an operand.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A08IntegralB14RepresentationRzrlE5undefyACyxGAA7IntTypeVFZ":{"name":"undef(_:)","abstract":"<p>Returns the special LLVM <code>undef</code> value for this type.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A8FloatingORszrlE5undefyACyAEGAA9FloatTypeVFZ":{"name":"undef(_:)","abstract":"<p>Returns the special LLVM <code>undef</code> value for this type.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6StructORszrlE5undefyACyAEGAA0C4TypeVFZ":{"name":"undef(_:)","abstract":"<p>Returns the special LLVM <code>undef</code> value for this type.</p>","parent_name":"Constant"},"Structs/Constant.html#/s:4LLVM8ConstantVA2A6VectorORszrlE5undefyACyAEGAA0C4TypeVFZ":{"name":"undef(_:)","abstract":"<p>Returns the special LLVM <code>undef</code> value for this type.</p>","parent_name":"Constant"},"Structs/Invoke.html#/s:4LLVM6InvokeV02asA0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM value object.</p>","parent_name":"Invoke"},"Structs/Invoke.html#/s:4LLVM6InvokeV17normalDestinationAA10BasicBlockVvp":{"name":"normalDestination","abstract":"<p>Accesses the destination block the flow of control will transfer to if an","parent_name":"Invoke"},"Structs/Invoke.html#/s:4LLVM6InvokeV17unwindDestinationAA10BasicBlockVvp":{"name":"unwindDestination","abstract":"<p>Accesses the destination block that exception unwinding will jump to.</p>","parent_name":"Invoke"},"Structs/Call.html#/s:4LLVM4CallV02asA0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM value object.</p>","parent_name":"Call"},"Structs/Call.html#/s:4LLVM4CallV13argumentCountSivp":{"name":"argumentCount","abstract":"<p>Retrieves the number of argument operands passed by this call.</p>","parent_name":"Call"},"Structs/Call.html#/s:4LLVM4CallV17callingConventionAA07CallingD0Ovp":{"name":"callingConvention","abstract":"<p>Accesses the calling convention for this function call.</p>","parent_name":"Call"},"Structs/Call.html#/s:4LLVM4CallV06isTailB0Sbvp":{"name":"isTailCall","abstract":"<p>Returns whether this function call is a tail call.  That is, if the callee","parent_name":"Call"},"Structs/Call.html#/s:4LLVM4CallV21setParameterAlignment2at2toySi_AA0E0VtF":{"name":"setParameterAlignment(at:to:)","abstract":"<p>Retrieves the alignment of the parameter at the given index.</p>","parent_name":"Call"},"Structs/BasicBlock/Address.html#/s:4LLVM10BasicBlockV7AddressV02asA0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM value object.</p>","parent_name":"Address"},"Structs/BasicBlock.html#/s:4LLVM10BasicBlockV4llvmACs13OpaquePointerV_tcfc":{"name":"init(llvm:)","abstract":"<p>Creates a <code>BasicBlock</code> from an <code>LLVMBasicBlockRef</code> object.</p>","parent_name":"BasicBlock"},"Structs/BasicBlock.html#/s:4LLVM10BasicBlockV7context4nameAcA7ContextC_SStcfc":{"name":"init(context:name:)","abstract":"<p>Creates a new basic block without a parent function.</p>","parent_name":"BasicBlock"},"Structs/BasicBlock.html#/s:4LLVM10BasicBlockV4move6beforeyAC_tF":{"name":"move(before:)","abstract":"<p>Given that this block and a given block share a parent function, move this","parent_name":"BasicBlock"},"Structs/BasicBlock.html#/s:4LLVM10BasicBlockV4move5afteryAC_tF":{"name":"move(after:)","abstract":"<p>Given that this block and a given block share a parent function, move this","parent_name":"BasicBlock"},"Structs/BasicBlock.html#/s:4LLVM10BasicBlockV02asA0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM value object.</p>","parent_name":"BasicBlock"},"Structs/BasicBlock.html#/s:4LLVM10BasicBlockV4nameSSvp":{"name":"name","abstract":"<p>Retrieves the name of this basic block.</p>","parent_name":"BasicBlock"},"Structs/BasicBlock.html#/s:4LLVM10BasicBlockV16firstInstructionAA0E0VSgvp":{"name":"firstInstruction","abstract":"<p>Returns the first instruction in the basic block, if it exists.</p>","parent_name":"BasicBlock"},"Structs/BasicBlock.html#/s:4LLVM10BasicBlockV15lastInstructionAA0E0VSgvp":{"name":"lastInstruction","abstract":"<p>Returns the first instruction in the basic block, if it exists.</p>","parent_name":"BasicBlock"},"Structs/BasicBlock.html#/s:4LLVM10BasicBlockV10terminatorAA21TerminatorInstructionVSgvp":{"name":"terminator","abstract":"<p>Returns the terminator instruction if this basic block is well formed or","parent_name":"BasicBlock"},"Structs/BasicBlock.html#/s:4LLVM10BasicBlockV6parentAA8FunctionCSgvp":{"name":"parent","abstract":"<p>Returns the parent function of this basic block, if it exists.</p>","parent_name":"BasicBlock"},"Structs/BasicBlock.html#/s:4LLVM10BasicBlockV4nextACSgyF":{"name":"next()","abstract":"<p>Returns the basic block following this basic block, if it exists.</p>","parent_name":"BasicBlock"},"Structs/BasicBlock.html#/s:4LLVM10BasicBlockV8previousACSgyF":{"name":"previous()","abstract":"<p>Returns the basic block before this basic block, if it exists.</p>","parent_name":"BasicBlock"},"Structs/BasicBlock.html#/s:4LLVM10BasicBlockV12instructionss11AnySequenceVyAA11InstructionVGvp":{"name":"instructions","abstract":"<p>Returns a sequence of the Instructions that make up this basic block.</p>","parent_name":"BasicBlock"},"Structs/BasicBlock.html#/s:4LLVM10BasicBlockV16removeFromParentyyF":{"name":"removeFromParent()","abstract":"<p>Removes this basic block from a function but keeps it alive.</p>","parent_name":"BasicBlock"},"Structs/BasicBlock.html#/s:4LLVM10BasicBlockV10moveBeforeyyACF":{"name":"moveBefore(_:)","abstract":"<p>Moves this basic block before the given basic block.</p>","parent_name":"BasicBlock"},"Structs/BasicBlock.html#/s:4LLVM10BasicBlockV9moveAfteryyACF":{"name":"moveAfter(_:)","abstract":"<p>Moves this basic block after the given basic block.</p>","parent_name":"BasicBlock"},"Structs/BasicBlock/Address.html":{"name":"Address","abstract":"<p>An <code>Address</code> represents a function-relative address of a basic block for","parent_name":"BasicBlock"},"Structs/BasicBlock.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"BasicBlock"},"Structs/Instruction.html#/s:4LLVM11InstructionV4llvmACs13OpaquePointerV_tcfc":{"name":"init(llvm:)","abstract":"<p>Creates an <code>Intruction</code> from an <code>LLVMValueRef</code> object.</p>","parent_name":"Instruction"},"Structs/Instruction.html#/s:4LLVM11InstructionV02asA0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM value object.</p>","parent_name":"Instruction"},"Structs/Instruction.html#/s:4LLVM11InstructionV6opCodeAA02OpD0Ovp":{"name":"opCode","abstract":"<p>Retrieves the opcode associated with this <code>Instruction</code>.</p>","parent_name":"Instruction"},"Structs/Instruction.html#/s:4LLVM11InstructionV8previousACSgyF":{"name":"previous()","abstract":"<p>Obtain the instruction that occurs before this one, if it exists.</p>","parent_name":"Instruction"},"Structs/Instruction.html#/s:4LLVM11InstructionV4nextACSgyF":{"name":"next()","abstract":"<p>Obtain the instruction that occurs after this one, if it exists.</p>","parent_name":"Instruction"},"Structs/Instruction.html#/s:4LLVM11InstructionV11parentBlockAA05BasicD0VSgvp":{"name":"parentBlock","abstract":"<p>Retrieves the parent basic block that contains this instruction, if it","parent_name":"Instruction"},"Structs/Instruction.html#/s:4LLVM11InstructionV8firstUseAA0D0VSgvp":{"name":"firstUse","abstract":"<p>Retrieves the first use of this instruction.</p>","parent_name":"Instruction"},"Structs/Instruction.html#/s:4LLVM11InstructionV4usess11AnySequenceVyAA3UseVGvp":{"name":"uses","abstract":"<p>Retrieves the sequence of instructions that use the value from this","parent_name":"Instruction"},"Structs/Instruction.html#/s:4LLVM11InstructionV16removeFromParentyyF":{"name":"removeFromParent()","abstract":"<p>Removes this instruction from a basic block but keeps it alive.</p>","parent_name":"Instruction"},"Structs/Instruction.html#/s:4LLVM11InstructionV5cloneACyF":{"name":"clone()","abstract":"<p>Create a copy of &lsquo;this&rsquo; instruction that is identical in all ways except","parent_name":"Instruction"},"Structs/Instruction.html#/s:4LLVM11InstructionV8metadataAA16AttachedMetadataCvp":{"name":"metadata","abstract":"<p>Retrieves all metadata entries attached to this instruction.</p>","parent_name":"Instruction"},"Structs/Instruction.html#/s:4LLVM11InstructionV11addMetadata_4kindyAA10IRMetadata_p_AA08AttachedD0C10PinnedKindOtF":{"name":"addMetadata(_:kind:)","abstract":"<p>Sets a metadata attachment, erasing the existing metadata attachment if","parent_name":"Instruction"},"Structs/Instruction.html#/s:4LLVM11InstructionV11addMetadata_4kindyAA10IRMetadata_p_s6UInt32VtF":{"name":"addMetadata(_:kind:)","abstract":"<p>Sets a metadata attachment, erasing the existing metadata attachment if","parent_name":"Instruction"},"Structs/ArrayType.html#/s:4LLVM9ArrayTypeV07elementC0AA6IRType_pvp":{"name":"elementType","abstract":"<p>The type of elements in this array.</p>","parent_name":"ArrayType"},"Structs/ArrayType.html#/s:4LLVM9ArrayTypeV5countSivp":{"name":"count","abstract":"<p>The number of elements in this array.</p>","parent_name":"ArrayType"},"Structs/ArrayType.html#/s:4LLVM9ArrayTypeV07elementC05countAcA6IRType_p_Sitcfc":{"name":"init(elementType:count:)","abstract":"<p>Creates an array type from an underlying element type and count.</p>","parent_name":"ArrayType"},"Structs/ArrayType.html#/s:4LLVM9ArrayTypeV8constant_4typeAA10IRConstant_pSayAA7IRValue_pG_AA6IRType_ptFZ":{"name":"constant(_:type:)","abstract":"<p>Creates a constant array value from a list of IR values of a common type.</p>","parent_name":"ArrayType"},"Structs/ArrayType.html#/s:4LLVM9ArrayTypeV8constant6string2inAA10IRConstant_pSS_AA7ContextCtFZ":{"name":"constant(string:in:)","abstract":"<p>Creates a constant, null terminated array value of UTF-8 bytes from","parent_name":"ArrayType"},"Structs/ArrayType.html#/s:4LLVM9ArrayTypeV02asA0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM type object.</p>","parent_name":"ArrayType"},"Structs/ArrayType.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"ArrayType"},"Structs/APInt.html#/s:4LLVM5APIntV4Worda":{"name":"Word","abstract":"<p>The underlying word size.</p>","parent_name":"APInt"},"Structs/APInt.html#/s:4LLVM5APIntV8bitWidthSivp":{"name":"bitWidth","abstract":"<p>The bitwidth of this integer.</p>","parent_name":"APInt"},"Structs/APInt.html#/s:4LLVM7IRValueP02asA0s13OpaquePointerVyF":{"name":"asLLVM()","parent_name":"APInt"},"Structs/APInt.html#/s:4LLVM5APIntVACycfc":{"name":"init()","abstract":"<p>Creates and initializes a new <code>APInt</code> with a bitwidth of one and a value","parent_name":"APInt"},"Structs/APInt.html#/s:4LLVM5APIntV5width5value6signedACSi_s6UInt64VSbtcfc":{"name":"init(width:value:signed:)","abstract":"<p>Creates and initializes a new <code>APInt</code> with a given bit width, value, and","parent_name":"APInt"},"Structs/APInt.html#/s:4LLVM5APIntV5width6valuesACSi_Says6UInt64VGtcfc":{"name":"init(width:values:)","abstract":"<p>Creates and initializes a new <code>APInt</code> with a given bit width and an","parent_name":"APInt"},"Structs/APInt.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"APInt"},"Structs/APInt.html#/s:SL1loiySbx_xtFZ":{"name":"<(_:_:)","parent_name":"APInt"},"Structs/APInt.html#/s:Sj9MagnitudeQa":{"name":"Magnitude","parent_name":"APInt"},"Structs/APInt.html#/s:s27ExpressibleByIntegerLiteralP0cD4TypeQa":{"name":"IntegerLiteralType","parent_name":"APInt"},"Structs/APInt.html#/s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc":{"name":"init(integerLiteral:)","parent_name":"APInt"},"Structs/APInt.html#/s:Sj7exactlyxSgqd___tcSzRd__lufc":{"name":"init(exactly:)","parent_name":"APInt"},"Structs/APInt.html#/s:4LLVM5APIntV1aoiyA2C_ACtFZ":{"name":"&(_:_:)","abstract":"<p>Returns the result of performing a bitwise AND operation on the two","parent_name":"APInt"},"Structs/APInt.html#/s:4LLVM5APIntV2aeoiyyACz_ACtFZ":{"name":"&=(_:_:)","abstract":"<p>Stores the result of performing a bitwise AND operation on the two given","parent_name":"APInt"},"Structs/APInt.html#/s:4LLVM5APIntV1ooiyA2C_ACtFZ":{"name":"|(_:_:)","abstract":"<p>Returns the result of performing a bitwise OR operation on the two","parent_name":"APInt"},"Structs/APInt.html#/s:4LLVM5APIntV2oeoiyyACz_ACtFZ":{"name":"|=(_:_:)","abstract":"<p>Stores the result of performing a bitwise OR operation on the two given","parent_name":"APInt"},"Structs/APInt.html#/s:4LLVM5APIntV1xoiyA2C_ACtFZ":{"name":"^(_:_:)","abstract":"<p>Returns the result of performing a bitwise XOR operation on the two","parent_name":"APInt"},"Structs/APInt.html#/s:4LLVM5APIntV2xeoiyyACz_ACtFZ":{"name":"^=(_:_:)","abstract":"<p>Stores the result of performing a bitwise XOR operation on the two given","parent_name":"APInt"},"Structs/APInt.html#/s:s18AdditiveArithmeticP1poiyxx_xtFZ":{"name":"+(_:_:)","parent_name":"APInt"},"Structs/APInt.html#/s:s18AdditiveArithmeticP2peoiyyxz_xtFZ":{"name":"+=(_:_:)","parent_name":"APInt"},"Structs/APInt.html#/s:s18AdditiveArithmeticP1soiyxx_xtFZ":{"name":"-(_:_:)","parent_name":"APInt"},"Structs/APInt.html#/s:s18AdditiveArithmeticP2seoiyyxz_xtFZ":{"name":"-=(_:_:)","parent_name":"APInt"},"Structs/APInt.html#/s:Sj9magnitude9MagnitudeQzvp":{"name":"magnitude","parent_name":"APInt"},"Structs/APInt.html#/s:Sj1moiyxx_xtFZ":{"name":"*(_:_:)","parent_name":"APInt"},"Structs/APInt.html#/s:Sj2meoiyyxz_xtFZ":{"name":"*=(_:_:)","parent_name":"APInt"},"Structs/APInt.html#/s:4LLVM5APIntV2lloiyA2C_s6UInt64VtFZ":{"name":"<<(_:_:)","abstract":"<p>Returns the result of shifting a value’s binary representation the","parent_name":"APInt"},"Structs/APInt.html#/s:4LLVM5APIntV3lleoiyyACz_s6UInt64VtFZ":{"name":"<<=(_:_:)","abstract":"<p>Stores the result of shifting a value’s binary representation the","parent_name":"APInt"},"Structs/APInt.html#/s:4LLVM5APIntV21logicallyShiftedRight2byACs6UInt64V_tF":{"name":"logicallyShiftedRight(by:)","abstract":"<p>Logically shift the value right by the given amount.</p>","parent_name":"APInt"},"Structs/APInt.html#/s:4LLVM5APIntV19logicallyShiftRight2byys6UInt64V_tF":{"name":"logicallyShiftRight(by:)","abstract":"<p>Logically shift the value right by the given amount.</p>","parent_name":"APInt"},"Structs/APInt.html#/s:4LLVM5APIntV17zeroExtendedValues6UInt64VSgvp":{"name":"zeroExtendedValue","abstract":"<p>Attempts to return the value of this integer as a 64-bit unsigned integer","parent_name":"APInt"},"Structs/APInt.html#/s:4LLVM5APIntV17signExtendedValues5Int64VSgvp":{"name":"signExtendedValue","abstract":"<p>Attempts to return the value of this integer as a 64-bit signed integer","parent_name":"APInt"},"Structs/APInt.html#/s:4LLVM5APIntV10isNegativeSbvp":{"name":"isNegative","abstract":"<p>Returns <code>true</code> if the most significant bit of this value is set.</p>","parent_name":"APInt"},"Structs/APInt.html#/s:4LLVM5APIntV13areAllBitsSetSbvp":{"name":"areAllBitsSet","abstract":"<p>Returns <code>true</code> if all bits are ones.</p>","parent_name":"APInt"},"Structs/APInt.html#/s:4LLVM5APIntV19leadingZeroBitCountSivp":{"name":"leadingZeroBitCount","abstract":"<p>The number of leading zeros in this value’s binary representation.</p>","parent_name":"APInt"},"Structs/APInt.html#/s:4LLVM5APIntV20trailingZeroBitCountSivp":{"name":"trailingZeroBitCount","abstract":"<p>The number of trailing zeros in this value’s binary representation.</p>","parent_name":"APInt"},"Structs/APInt.html#/s:4LLVM5APIntV15nonzeroBitCountSivp":{"name":"nonzeroBitCount","abstract":"<p>The number of bits equal to 1 in this value’s binary representation.</p>","parent_name":"APInt"},"Structs/APInt.html#/s:4LLVM5APIntV8truncate2toACSi_tF":{"name":"truncate(to:)","abstract":"<p>Truncates the integer to a given bit width.</p>","parent_name":"APInt"},"Structs/APInt.html#/s:4LLVM5APIntV10zeroExtend2toACSi_tF":{"name":"zeroExtend(to:)","abstract":"<p>Zero extends the integer to a given bit width.</p>","parent_name":"APInt"},"Structs/APInt.html#/s:4LLVM5APIntV10signExtend2toACSi_tF":{"name":"signExtend(to:)","abstract":"<p>Sign extends the integer to a given bit width.</p>","parent_name":"APInt"},"Structs/APInt.html#/s:4LLVM5APIntV20zeroExtendOrTruncate2toACSi_tF":{"name":"zeroExtendOrTruncate(to:)","abstract":"<p>Zero extends or truncates the integer to the given width.</p>","parent_name":"APInt"},"Structs/APInt.html#/s:4LLVM5APIntV20signExtendOrTruncate2toACSi_tF":{"name":"signExtendOrTruncate(to:)","abstract":"<p>Sign extends or truncates the integer to the given width.</p>","parent_name":"APInt"},"Structs/APInt.html#/s:4LLVM5APIntV7flipAllyyF":{"name":"flipAll()","abstract":"<p>Toggle every bit in this integer to its opposite value.</p>","parent_name":"APInt"},"Structs/APInt.html#/s:4LLVM5APIntV1topyA2CFZ":{"name":"~(_:)","abstract":"<p>Computes the complement integer value.</p>","parent_name":"APInt"},"Structs/Alias.html#/s:4LLVM5AliasV02asA0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM value object.</p>","parent_name":"Alias"},"Structs/Alias.html#/s:4LLVM5AliasV7aliaseeAA7IRValue_pvp":{"name":"aliasee","abstract":"<p>Access the target value of this alias.</p>","parent_name":"Alias"},"Structs/Alias.html#/s:4LLVM5AliasV8previousACSgyF":{"name":"previous()","abstract":"<p>Retrieves the previous alias in the module, if there is one.</p>","parent_name":"Alias"},"Structs/Alias.html#/s:4LLVM5AliasV4nextACSgyF":{"name":"next()","abstract":"<p>Retrieves the next alias in the module, if there is one.</p>","parent_name":"Alias"},"Structs/Alias.html":{"name":"Alias","abstract":"<p>An <code>Alias</code> represents a global alias in an LLVM module - a new symbol and"},"Structs/APInt.html":{"name":"APInt","abstract":"<p>A value implementing arbitrary precision integer arithmetic.</p>"},"Structs/ArrayType.html":{"name":"ArrayType","abstract":"<p><code>ArrayType</code> is a very simple derived type that arranges elements"},"Structs/Instruction.html":{"name":"Instruction","abstract":"<p>An <code>Instruction</code> represents an instruction residing in a basic block.</p>"},"Structs/BasicBlock.html":{"name":"BasicBlock","abstract":"<p>A <code>BasicBlock</code> represents a basic block in an LLVM IR program.  A basic"},"Structs/Call.html":{"name":"Call","abstract":"<p>Represents a simple function call.</p>"},"Structs/Invoke.html":{"name":"Invoke","abstract":"<p>Represents a function call that may transfer control to an exception handler.</p>"},"Structs/Constant.html":{"name":"Constant","abstract":"<p>A <code>Constant</code> represents a value initialized to a constant.  Constant values"},"Structs/FloatType.html":{"name":"FloatType","abstract":"<p><code>FloatType</code> enumerates representations of a floating value of a particular"},"Structs/EnumAttribute.html":{"name":"EnumAttribute","abstract":"<p>An <q>enum</q> (a.k.a. target-independent) attribute.</p>"},"Structs/StringAttribute.html":{"name":"StringAttribute","abstract":"<p>A <q>string</q> (a.k.a. target-dependent) attribute.</p>"},"Structs/Parameter.html":{"name":"Parameter","abstract":"<p>A <code>Parameter</code> represents an index into the parameters of a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Function.html\">Function</a></code>.</p>"},"Structs/FunctionType.html":{"name":"FunctionType","abstract":"<p><code>FunctionType</code> represents a function&rsquo;s type signature.  It consists of a"},"Structs/DebugLocation.html":{"name":"DebugLocation","abstract":"<p>A <code>DebugLocation</code> represents a location in source.</p>"},"Structs/CompileUnitMetadata.html":{"name":"CompileUnitMetadata","abstract":"<p><code>CompileUnitMetadata</code> nodes represent a compile unit, the root of a metadata"},"Structs/FileMetadata.html":{"name":"FileMetadata","abstract":"<p><code>FileMetadata</code> nodes represent files.</p>"},"Structs/DIBasicType.html":{"name":"DIBasicType","abstract":"<p><code>DIBasicType</code> nodes represent primitive types, such as <code>int</code>, <code>bool</code> and"},"Structs/DISubroutineType.html":{"name":"DISubroutineType","abstract":"<p><code>DISubroutineType</code> nodes represent subroutine types.</p>"},"Structs/LexicalBlockMetadata.html":{"name":"LexicalBlockMetadata","abstract":"<p><code>LexicalBlockMetadata</code> nodes describe nested blocks within a subprogram. The"},"Structs/LexicalBlockFileMetadata.html":{"name":"LexicalBlockFileMetadata","abstract":"<p><code>LexicalBlockFile</code> nodes are used to discriminate between sections of a"},"Structs/LocalVariableMetadata.html":{"name":"LocalVariableMetadata","abstract":"<p><code>LocalVariableMetadata</code> nodes represent local variables and function"},"Structs/ObjectiveCPropertyMetadata.html":{"name":"ObjectiveCPropertyMetadata","abstract":"<p><code>ObjectiveCPropertyMetadata</code> nodes represent Objective-C property nodes.</p>"},"Structs/ImportedEntityMetadata.html":{"name":"ImportedEntityMetadata","abstract":"<p><code>ImportedEntityMetadata</code> nodes represent entities (such as modules) imported"},"Structs/FunctionMetadata.html":{"name":"FunctionMetadata","abstract":"<p><code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/NameSpaceMetadata.html\">NameSpaceMetadata</a></code> nodes represent subroutines in the source program."},"Structs/ModuleMetadata.html":{"name":"ModuleMetadata","abstract":"<p><code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/NameSpaceMetadata.html\">NameSpaceMetadata</a></code> nodes represent entities like C++ modules.</p>"},"Structs/NameSpaceMetadata.html":{"name":"NameSpaceMetadata","abstract":"<p><code>NameSpaceMetadata</code> nodes represent entities like C++ namespaces.</p>"},"Structs/ExpressionMetadata.html":{"name":"ExpressionMetadata","abstract":"<p><code>ExpressionMetadata</code> nodes represent expressions that are inspired by the"},"Structs/TerminatorInstruction.html":{"name":"TerminatorInstruction","abstract":"<p>A <code>TerminatorInstruction</code> represents an instruction that terminates a"},"Structs/IntType.html":{"name":"IntType","abstract":"<p>The <code>IntType</code> represents an integral value of a specified bit width.</p>"},"Structs/LabelType.html":{"name":"LabelType","abstract":"<p><code>LabelType</code> represents code labels.</p>"},"Structs/ObjectiveCPropertyAttribute.html":{"name":"ObjectiveCPropertyAttribute","abstract":"<p>Enumerates the known attributes that can appear on an Objective-C property.</p>"},"Structs/DIFlags.html":{"name":"DIFlags","abstract":"<p>Enumerates a set of flags that can be applied to metadata nodes to change"},"Structs/MetadataType.html":{"name":"MetadataType","abstract":"<p>The <code>MetadataType</code> type represents embedded metadata. No derived types may"},"Structs/Section.html":{"name":"Section","abstract":"<p>A Section represents one of the binary sections in an object file.</p>"},"Structs/Symbol.html":{"name":"Symbol","abstract":"<p>A symbol is a top-level addressable entity in an object file.</p>"},"Structs/Relocation.html":{"name":"Relocation","abstract":"<p>A Relocation represents the contents of a relocated symbol in the dynamic"},"Structs/PhiNode.html":{"name":"PhiNode","abstract":"<p>A <code>PhiNode</code> object represents a PHI node.</p>"},"Structs/PointerType.html":{"name":"PointerType","abstract":"<p><code>PointerType</code> is used to specify memory locations. Pointers are commonly"},"Structs/StructType.html":{"name":"StructType","abstract":"<p><code>StructType</code> is used to represent a collection of data members together in"},"Structs/Switch.html":{"name":"Switch","abstract":"<p>A <code>Switch</code> represents a <code>switch</code> instruction.  A <code>switch</code> instruction"},"Structs/StructLayout.html":{"name":"StructLayout","abstract":"<p>A <code>StructLayout</code> encapsulates information about the layout of a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/StructType.html\">StructType</a></code>.</p>"},"Structs/TokenType.html":{"name":"TokenType","abstract":"<p><code>TokenType</code> is used when a value is associated with an instruction but all"},"Structs/Alignment.html":{"name":"Alignment","abstract":"<p>An alignment value, expressed in bytes.</p>"},"Structs/Size.html":{"name":"Size","abstract":"<p>This is an opaque type for sizes expressed in aggregate bit units, usually 8"},"Structs/Use.html":{"name":"Use","abstract":"<p><code>Use</code> represents an iterator over the uses and users of a particular value"},"Structs/VectorType.html":{"name":"VectorType","abstract":"<p>A <code>VectorType</code> is a simple derived type that represents a vector of"},"Structs/VoidType.html":{"name":"VoidType","abstract":"<p>The <code>Void</code> type represents any value and has no size.</p>"},"Structs/X86MMXType.html":{"name":"X86MMXType","abstract":"<p><code>X86MMXType</code> represents a value held in an MMX register on an x86 machine.</p>"},"Protocols/IRValue.html#/s:4LLVM7IRValueP02asA0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM value object.</p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE11isAArgumentSbvp":{"name":"isAArgument","abstract":"<p>Whether or not the underlying LLVM value is an <code>Argument</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE13isABasicBlockSbvp":{"name":"isABasicBlock","abstract":"<p>Whether or not the underlying LLVM value is a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/BasicBlock.html\">BasicBlock</a></code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE12isAInlineAsmSbvp":{"name":"isAInlineAsm","abstract":"<p>Whether or not the underlying LLVM value is <code>InlineAsm</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE7isAUserSbvp":{"name":"isAUser","abstract":"<p>Whether or not the underlying LLVM value is a <code>User</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE11isAConstantSbvp":{"name":"isAConstant","abstract":"<p>Whether or not the underlying LLVM value is a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Constant.html\">Constant</a></code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE15isABlockAddressSbvp":{"name":"isABlockAddress","abstract":"<p>Whether or not the underlying LLVM value is a <code>BlockAddress</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE24isAConstantAggregateZeroSbvp":{"name":"isAConstantAggregateZero","abstract":"<p>Whether or not the underlying LLVM value is a <code>ConstantAggregateZero</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE16isAConstantArraySbvp":{"name":"isAConstantArray","abstract":"<p>Whether or not the underlying LLVM value is a <code>ConstantArray</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE25isAConstantDataSequentialSbvp":{"name":"isAConstantDataSequential","abstract":"<p>Whether or not the underlying LLVM value is a <code>ConstantDataSequential</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE20isAConstantDataArraySbvp":{"name":"isAConstantDataArray","abstract":"<p>Whether or not the underlying LLVM value is a <code>ConstantDataArray</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE21isAConstantDataVectorSbvp":{"name":"isAConstantDataVector","abstract":"<p>Whether or not the underlying LLVM value is a <code>ConstantDataVector</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE15isAConstantExprSbvp":{"name":"isAConstantExpr","abstract":"<p>Whether or not the underlying LLVM value is a <code>ConstantExpr</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE13isAConstantFPSbvp":{"name":"isAConstantFP","abstract":"<p>Whether or not the underlying LLVM value is a <code>ConstantFP</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE14isAConstantIntSbvp":{"name":"isAConstantInt","abstract":"<p>Whether or not the underlying LLVM value is a <code>ConstantInt</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE22isAConstantPointerNullSbvp":{"name":"isAConstantPointerNull","abstract":"<p>Whether or not the underlying LLVM value is a <code>ConstantPointerNull</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE17isAConstantStructSbvp":{"name":"isAConstantStruct","abstract":"<p>Whether or not the underlying LLVM value is a <code>ConstantStruct</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE20isAConstantTokenNoneSbvp":{"name":"isAConstantTokenNone","abstract":"<p>Whether or not the underlying LLVM value is a <code>ConstantTokenNone</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE17isAConstantVectorSbvp":{"name":"isAConstantVector","abstract":"<p>Whether or not the underlying LLVM value is a <code>ConstantVector</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE14isAGlobalValueSbvp":{"name":"isAGlobalValue","abstract":"<p>Whether or not the underlying LLVM value is a <code>GlobalValue</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE14isAGlobalAliasSbvp":{"name":"isAGlobalAlias","abstract":"<p>Whether or not the underlying LLVM value is a <code>GlobalAlias</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE15isAGlobalObjectSbvp":{"name":"isAGlobalObject","abstract":"<p>Whether or not the underlying LLVM value is a <code>GlobalObject</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE11isAFunctionSbvp":{"name":"isAFunction","abstract":"<p>Whether or not the underlying LLVM value is a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Function.html\">Function</a></code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE17isAGlobalVariableSbvp":{"name":"isAGlobalVariable","abstract":"<p>Whether or not the underlying LLVM value is a <code>GlobalVariable</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE13isAUndefValueSbvp":{"name":"isAUndefValue","abstract":"<p>Whether or not the underlying LLVM value is an <code>UndefValue</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE14isAInstructionSbvp":{"name":"isAInstruction","abstract":"<p>Whether or not the underlying LLVM value is an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Instruction.html\">Instruction</a></code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE17isABinaryOperatorSbvp":{"name":"isABinaryOperator","abstract":"<p>Whether or not the underlying LLVM value is a <code>BinaryOperator</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE11isACallInstSbvp":{"name":"isACallInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>CallInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE16isAIntrinsicInstSbvp":{"name":"isAIntrinsicInst","abstract":"<p>Whether or not the underlying LLVM value is an <code>IntrinsicInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE19isADbgInfoIntrinsicSbvp":{"name":"isADbgInfoIntrinsic","abstract":"<p>Whether or not the underlying LLVM value is a <code>DbgInfoIntrinsic</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE17isADbgDeclareInstSbvp":{"name":"isADbgDeclareInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>DbgDeclareInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE15isAMemIntrinsicSbvp":{"name":"isAMemIntrinsic","abstract":"<p>Whether or not the underlying LLVM value is a <code>MemIntrinsic</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE13isAMemCpyInstSbvp":{"name":"isAMemCpyInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>MemCpyInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE14isAMemMoveInstSbvp":{"name":"isAMemMoveInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>MemMoveInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE13isAMemSetInstSbvp":{"name":"isAMemSetInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>MemSetInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE10isACmpInstSbvp":{"name":"isACmpInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>CmpInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE11isAFCmpInstSbvp":{"name":"isAFCmpInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>FCmpInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE11isAICmpInstSbvp":{"name":"isAICmpInst","abstract":"<p>Whether or not the underlying LLVM value is an <code>ICmpInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE21isAExtractElementInstSbvp":{"name":"isAExtractElementInst","abstract":"<p>Whether or not the underlying LLVM value is an <code>ExtractElementInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE20isAGetElementPtrInstSbvp":{"name":"isAGetElementPtrInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>GetElementPtrInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE20isAInsertElementInstSbvp":{"name":"isAInsertElementInst","abstract":"<p>Whether or not the underlying LLVM value is an <code>InsertElementInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE18isAInsertValueInstSbvp":{"name":"isAInsertValueInst","abstract":"<p>Whether or not the underlying LLVM value is an <code>InsertValueInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE17isALandingPadInstSbvp":{"name":"isALandingPadInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>LandingPadInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE10isAPHINodeSbvp":{"name":"isAPHINode","abstract":"<p>Whether or not the underlying LLVM value is a <code>PHINode</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE13isASelectInstSbvp":{"name":"isASelectInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>SelectInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE20isAShuffleVectorInstSbvp":{"name":"isAShuffleVectorInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>ShuffleVectorInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE12isAStoreInstSbvp":{"name":"isAStoreInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>StoreInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE17isATerminatorInstSbvp":{"name":"isATerminatorInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>TerminatorInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE13isABranchInstSbvp":{"name":"isABranchInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>BranchInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE17isAIndirectBrInstSbvp":{"name":"isAIndirectBrInst","abstract":"<p>Whether or not the underlying LLVM value is an <code>IndirectBrInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE13isAInvokeInstSbvp":{"name":"isAInvokeInst","abstract":"<p>Whether or not the underlying LLVM value is an <code>InvokeInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE13isAReturnInstSbvp":{"name":"isAReturnInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>ReturnInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE13isASwitchInstSbvp":{"name":"isASwitchInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>SwitchInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE18isAUnreachableInstSbvp":{"name":"isAUnreachableInst","abstract":"<p>Whether or not the underlying LLVM value is an <code>UnreachableInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE13isAResumeInstSbvp":{"name":"isAResumeInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>ResumeInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE20isACleanupReturnInstSbvp":{"name":"isACleanupReturnInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>CleanupReturnInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE18isACatchReturnInstSbvp":{"name":"isACatchReturnInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>CatchReturnInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE17isAFuncletPadInstSbvp":{"name":"isAFuncletPadInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>FuncletPadInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE15isACatchPadInstSbvp":{"name":"isACatchPadInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>CatchPadInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE17isACleanupPadInstSbvp":{"name":"isACleanupPadInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>CleanupPadInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE19isAUnaryInstructionSbvp":{"name":"isAUnaryInstruction","abstract":"<p>Whether or not the underlying LLVM value is a <code>UnaryInstruction</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE13isAAllocaInstSbvp":{"name":"isAAllocaInst","abstract":"<p>Whether or not the underlying LLVM value is an <code>AllocaInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE11isACastInstSbvp":{"name":"isACastInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>CastInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE20isAAddrSpaceCastInstSbvp":{"name":"isAAddrSpaceCastInst","abstract":"<p>Whether or not the underlying LLVM value is an <code>AddrSpaceCastInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE14isABitCastInstSbvp":{"name":"isABitCastInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>BitCastInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE12isAFPExtInstSbvp":{"name":"isAFPExtInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>FPExtInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE13isAFPToSIInstSbvp":{"name":"isAFPToSIInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>FPToSIInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE13isAFPToUIInstSbvp":{"name":"isAFPToUIInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>FPToUIInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE14isAFPTruncInstSbvp":{"name":"isAFPTruncInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>FPTruncInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE15isAIntToPtrInstSbvp":{"name":"isAIntToPtrInst","abstract":"<p>Whether or not the underlying LLVM value is an <code>IntToPtrInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE15isAPtrToIntInstSbvp":{"name":"isAPtrToIntInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>PtrToIntInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE11isASExtInstSbvp":{"name":"isASExtInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>SExtInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE13isASIToFPInstSbvp":{"name":"isASIToFPInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>SIToFPInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE12isATruncInstSbvp":{"name":"isATruncInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>TruncInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE13isAUIToFPInstSbvp":{"name":"isAUIToFPInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>UIToFPInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE11isAZExtInstSbvp":{"name":"isAZExtInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>ZExtInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE19isAExtractValueInstSbvp":{"name":"isAExtractValueInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>ExtractValueInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE11isALoadInstSbvp":{"name":"isALoadInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>LoadInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE12isAVAArgInstSbvp":{"name":"isAVAArgInst","abstract":"<p>Whether or not the underlying LLVM value is a <code>VAArgInst</code></p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE4typeAA6IRType_pvp":{"name":"type","abstract":"<p>Retrieves the type of this value.</p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE10isConstantSbvp":{"name":"isConstant","abstract":"<p>Returns whether this value is a constant.</p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE7isUndefSbvp":{"name":"isUndef","abstract":"<p>Returns whether this value has been initialized with the special <code>undef</code>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE4nameSSvp":{"name":"name","abstract":"<p>Gets and sets the name for this value.</p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE14replaceAllUses4withyAaB_p_tF":{"name":"replaceAllUses(with:)","abstract":"<p>Replaces all uses of this value with the specified value.</p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE4dumpyyF":{"name":"dump()","abstract":"<p>Dumps a representation of this value to stderr.</p>","parent_name":"IRValue"},"Protocols/IRValue.html#/s:4LLVM7IRValuePAAE4kindAA0B4KindOvp":{"name":"kind","abstract":"<p>The kind of this value.</p>","parent_name":"IRValue"},"Protocols/IRType.html#/s:4LLVM6IRTypeP02asA0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM type object.</p>","parent_name":"IRType"},"Protocols/IRType.html#/s:4LLVM6IRTypePAAE4nullAA10IRConstant_pyF":{"name":"null()","abstract":"<p>Returns the special <code>null</code> value for this type.</p>","parent_name":"IRType"},"Protocols/IRType.html#/s:4LLVM6IRTypePAAE5undefAA7IRValue_pyF":{"name":"undef()","abstract":"<p>Returns the special LLVM <code>undef</code> value for this type.</p>","parent_name":"IRType"},"Protocols/IRType.html#/s:4LLVM6IRTypePAAE16constPointerNullAA10IRConstant_pyF":{"name":"constPointerNull()","abstract":"<p>Returns the special LLVM constant <code>null</code> pointer value for this type","parent_name":"IRType"},"Protocols/IRType.html#/s:4LLVM6IRTypePAAE7contextAA7ContextCvp":{"name":"context","abstract":"<p>Returns the context associated with this type</p>","parent_name":"IRType"},"Protocols/IRType.html#/s:4LLVM6IRTypePAAE10scalarTypeAaB_pvp":{"name":"scalarType","abstract":"<p>If this is a vector type, return the element type, otherwise","parent_name":"IRType"},"Protocols/DIType.html#/s:4LLVM6DITypePAAE4nameSSvp":{"name":"name","abstract":"<p>Retrieves the name of this type.</p>","parent_name":"DIType"},"Protocols/DIType.html#/s:4LLVM6DITypePAAE10sizeInBitsAA4SizeVvp":{"name":"sizeInBits","abstract":"<p>Retrieves the size of the type represented by this metadata in bits.</p>","parent_name":"DIType"},"Protocols/DIType.html#/s:4LLVM6DITypePAAE12offsetInBitsAA4SizeVvp":{"name":"offsetInBits","abstract":"<p>Retrieves the offset of the type represented by this metadata in bits.</p>","parent_name":"DIType"},"Protocols/DIType.html#/s:4LLVM6DITypePAAE15alignmentInBitsAA9AlignmentVvp":{"name":"alignmentInBits","abstract":"<p>Retrieves the alignment of the type represented by this metadata in bits.</p>","parent_name":"DIType"},"Protocols/DIType.html#/s:4LLVM6DITypePAAE4lineSivp":{"name":"line","abstract":"<p>Retrieves the line the type represented by this metadata is declared on.</p>","parent_name":"DIType"},"Protocols/DIType.html#/s:4LLVM6DITypePAAE5flagsAA7DIFlagsVvp":{"name":"flags","abstract":"<p>Retrieves the flags the type represented by this metadata is declared","parent_name":"DIType"},"Protocols/IRMetadata.html#/s:4LLVM10IRMetadataP10asMetadatas13OpaquePointerVyF":{"name":"asMetadata()","abstract":"<p>Retrieves the underlying LLVM metadata object.</p>","parent_name":"IRMetadata"},"Protocols/IRMetadata.html#/s:4LLVM10IRMetadataPAAE14replaceAllUses4withyAaB_p_tF":{"name":"replaceAllUses(with:)","abstract":"<p>Replaces all uses of the this metadata with the given metadata.</p>","parent_name":"IRMetadata"},"Protocols/IRMetadata.html#/s:4LLVM10IRMetadataPAAE4dumpyyF":{"name":"dump()","abstract":"<p>Dumps a representation of this metadata to stderr.</p>","parent_name":"IRMetadata"},"Protocols/IRMetadata.html#/s:4LLVM10IRMetadataPAAE9forceCast2toqd__qd__m_tAaBRd__lF":{"name":"forceCast(to:)","abstract":"<p>Force-casts metadata to a destination type.</p>","parent_name":"IRMetadata"},"Protocols/IRMetadata.html#/s:4LLVM10IRMetadataPAAE4kindAA0B4KindOvp":{"name":"kind","abstract":"<p>Returns the kind of this metadata node.</p>","parent_name":"IRMetadata"},"Protocols/_IRMetadataInitializerHack.html#/s:4LLVM26_IRMetadataInitializerHackP4llvmxs13OpaquePointerV_tcfc":{"name":"init(llvm:)","abstract":"<p>Initialize a metadata node from a raw LLVM metadata ref.</p>","parent_name":"_IRMetadataInitializerHack"},"Protocols/Attribute.html#/s:4LLVM9AttributeP02asA0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM attribute reference object.</p>","parent_name":"Attribute"},"Protocols/IRConstant.html#/s:4LLVM10IRConstantPAAE8constGEP7indicesAaB_pSayAaB_pG_tF":{"name":"constGEP(indices:)","abstract":"<p>Perform a GEP (Get Element Pointer) with this value as the base.</p>","parent_name":"IRConstant"},"Protocols/IRConstant.html#/s:4LLVM10IRConstantPAAE7bitCast2toAaB_pAA6IRType_p_tF":{"name":"bitCast(to:)","abstract":"<p>Build a constant bitcast to convert the given value to a value of the","parent_name":"IRConstant"},"Protocols/IRGlobal.html#/s:4LLVM8IRGlobalPAAE8metadataAA16AttachedMetadataCvp":{"name":"metadata","abstract":"<p>Retrieves all metadata entries attached to this global value.</p>","parent_name":"IRGlobal"},"Protocols/IRGlobal.html#/s:4LLVM8IRGlobalPAAE11addMetadata_4kindyAA10IRMetadata_p_AA08AttachedD0C10PinnedKindOtF":{"name":"addMetadata(_:kind:)","abstract":"<p>Sets a metadata attachment, erasing the existing metadata attachment if","parent_name":"IRGlobal"},"Protocols/IRGlobal.html#/s:4LLVM8IRGlobalPAAE11addMetadata_4kindyAA10IRMetadata_p_s6UInt32VtF":{"name":"addMetadata(_:kind:)","abstract":"<p>Sets a metadata attachment, erasing the existing metadata attachment if","parent_name":"IRGlobal"},"Protocols/IRGlobal.html#/s:4LLVM8IRGlobalPAAE17removeAllMetadatayyF":{"name":"removeAllMetadata()","abstract":"<p>Removes all metadata attachments from this value.</p>","parent_name":"IRGlobal"},"Protocols/IRGlobal.html#/s:4LLVM8IRGlobalPAAE16eraseAllMetadata2ofys6UInt32V_tF":{"name":"eraseAllMetadata(of:)","abstract":"<p>Erases a metadata attachment of the given kind if it exists.</p>","parent_name":"IRGlobal"},"Protocols/IRGlobal.html#/s:4LLVM8IRGlobalPAAE9valueTypeAA6IRType_pvp":{"name":"valueType","abstract":"<p>Retrieves the <q>value type</q> of this global value.</p>","parent_name":"IRGlobal"},"Protocols/IRGlobal.html#/s:4LLVM8IRGlobalPAAE9alignmentAA9AlignmentVvp":{"name":"alignment","abstract":"<p>Retrieves the alignment of this value.</p>","parent_name":"IRGlobal"},"Protocols/IRGlobal.html#/s:4LLVM8IRGlobalPAAE7linkageAA7LinkageOvp":{"name":"linkage","abstract":"<p>Retrieves the linkage information for this global.</p>","parent_name":"IRGlobal"},"Protocols/IRGlobal.html#/s:4LLVM8IRGlobalPAAE10visibilityAA10VisibilityOvp":{"name":"visibility","abstract":"<p>Retrieves the visibility style for this global.</p>","parent_name":"IRGlobal"},"Protocols/IRGlobal.html#/s:4LLVM8IRGlobalPAAE12storageClassAA07StorageD0Ovp":{"name":"storageClass","abstract":"<p>Retrieves the storage class for this global declaration.  For use with","parent_name":"IRGlobal"},"Protocols/IRGlobal.html#/s:4LLVM8IRGlobalPAAE18unnamedAddressKindAA07UnnameddE0Ovp":{"name":"unnamedAddressKind","abstract":"<p>Retrieves an indicator for the significance of a global value&rsquo;s address.</p>","parent_name":"IRGlobal"},"Protocols/IRGlobal.html#/s:4LLVM8IRGlobalPAAE6comdatAA6ComdatCSgvp":{"name":"comdat","abstract":"<p>Retrieves the COMDAT section for this global, if it exists.</p>","parent_name":"IRGlobal"},"Protocols/IRGlobal.html#/s:4LLVM8IRGlobalPAAE7sectionSSvp":{"name":"section","abstract":"<p>Retrieves the section associated with the symbol that will eventually be","parent_name":"IRGlobal"},"Protocols/IRGlobal.html#/s:4LLVM8IRGlobalPAAE15eraseFromParentyyF":{"name":"eraseFromParent()","abstract":"<p>Removes this global value from the module and deallocates it.</p>","parent_name":"IRGlobal"},"Protocols/IRGlobal.html":{"name":"IRGlobal","abstract":"<p>An <code>IRGlobal</code> is a value, alias, or function that exists at the top level of"},"Protocols/IRConstant.html":{"name":"IRConstant","abstract":"<p>An <code>IRConstant</code> is an entity whose value doees not change during the"},"Protocols.html#/s:4LLVM22ConstantRepresentationP":{"name":"ConstantRepresentation","abstract":"<p>A protocol to which the phantom types for a constant&rsquo;s representation conform.</p>"},"Protocols.html#/s:4LLVM31NumericalConstantRepresentationP":{"name":"NumericalConstantRepresentation","abstract":"<p>A protocol to which the phantom types for all numerical constants conform.</p>"},"Protocols.html#/s:4LLVM30IntegralConstantRepresentationP":{"name":"IntegralConstantRepresentation","abstract":"<p>A protocol to which the phantom types for integral constants conform.</p>"},"Protocols/Attribute.html":{"name":"Attribute","abstract":"<p>An LLVM attribute.</p>"},"Protocols/_IRMetadataInitializerHack.html":{"name":"_IRMetadataInitializerHack","abstract":"<p>An unfortunate artifact of the design of the metadata class hierarchy is"},"Protocols/IRMetadata.html":{"name":"IRMetadata","abstract":"<p>The <code>Metadata</code> protocol captures those types that represent metadata nodes"},"Protocols.html#/s:4LLVM7DIScopeP":{"name":"DIScope","abstract":"<p>Denotes a scope in which child metadata nodes can be inserted.</p>"},"Protocols/DIType.html":{"name":"DIType","abstract":"<p>Denotes metadata for a type.</p>"},"Protocols/IRType.html":{"name":"IRType","abstract":"<p>An <code>IRType</code> is a type that is capable of lowering itself to an <code>LLVMTypeRef</code>"},"Protocols/IRValue.html":{"name":"IRValue","abstract":"<p>An <code>IRValue</code> is a type that is capable of lowering itself to an"},"Functions.html#/s:4LLVM010initializeA0yyF":{"name":"initializeLLVM()","abstract":"<p>initializer that calls LLVM initialization functions only once.</p>"},"Extensions/String.html#/s:SS4LLVME02asA0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM value object.</p>","parent_name":"String"},"Extensions/Bool.html#/s:Sb4LLVME02asA0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM value object.</p>","parent_name":"Bool"},"Extensions/UInt64.html#/s:s6UInt64V4LLVME02asB0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM value object.</p>","parent_name":"UInt64"},"Extensions/UInt32.html#/s:s6UInt32V4LLVME02asB0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM value object.</p>","parent_name":"UInt32"},"Extensions/UInt16.html#/s:s6UInt16V4LLVME02asB0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM value object.</p>","parent_name":"UInt16"},"Extensions/UInt8.html#/s:s5UInt8V4LLVME02asB0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM value object.</p>","parent_name":"UInt8"},"Extensions/UInt.html#/s:Su4LLVME02asA0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM value object.</p>","parent_name":"UInt"},"Extensions/Int64.html#/s:s5Int64V4LLVME02asB0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM value object.</p>","parent_name":"Int64"},"Extensions/Int32.html#/s:s5Int32V4LLVME02asB0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM value object.</p>","parent_name":"Int32"},"Extensions/Int16.html#/s:s5Int16V4LLVME02asB0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM value object.</p>","parent_name":"Int16"},"Extensions/Int8.html#/s:s4Int8V4LLVME02asB0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM value object.</p>","parent_name":"Int8"},"Extensions/Int.html#/s:Si4LLVME02asA0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM value object.</p>","parent_name":"Int"},"Extensions/LLVMValueRef.html#/s:s13OpaquePointerV4LLVME02asC0AByF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM value object.</p>","parent_name":"LLVMValueRef"},"Extensions/LLVMValueRef.html":{"name":"LLVMValueRef"},"Extensions/Int.html":{"name":"Int"},"Extensions/Int8.html":{"name":"Int8"},"Extensions/Int16.html":{"name":"Int16"},"Extensions/Int32.html":{"name":"Int32"},"Extensions/Int64.html":{"name":"Int64"},"Extensions/UInt.html":{"name":"UInt"},"Extensions/UInt8.html":{"name":"UInt8"},"Extensions/UInt16.html":{"name":"UInt16"},"Extensions/UInt32.html":{"name":"UInt32"},"Extensions/UInt64.html":{"name":"UInt64"},"Extensions/Bool.html":{"name":"Bool"},"Extensions/String.html":{"name":"String"},"Enums/TargetMachineError.html#/s:4LLVM18TargetMachineErrorO12couldNotEmityACSS_AA15CodegenFileTypeOtcACmF":{"name":"couldNotEmit(_:_:)","abstract":"<p>The target machine failed to emit the specified file type.","parent_name":"TargetMachineError"},"Enums/TargetMachineError.html#/s:4LLVM18TargetMachineErrorO19couldNotEmitBitCodeyA2CmF":{"name":"couldNotEmitBitCode","abstract":"<p>The target machine failed to emit the bitcode for this module.</p>","parent_name":"TargetMachineError"},"Enums/TargetMachineError.html#/s:4LLVM18TargetMachineErrorO13invalidTripleyACSScACmF":{"name":"invalidTriple(_:)","abstract":"<p>The specified target triple was invalid.</p>","parent_name":"TargetMachineError"},"Enums/TargetMachineError.html#/s:4LLVM18TargetMachineErrorO014couldNotCreateB0yACSS_SStcACmF":{"name":"couldNotCreateTarget(_:_:)","abstract":"<p>The Target is could not be created.","parent_name":"TargetMachineError"},"Enums/TargetMachineError.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"TargetMachineError"},"Enums/CodegenFileType.html#/s:4LLVM15CodegenFileTypeO6objectyA2CmF":{"name":"object","abstract":"<p>An object file (.o).</p>","parent_name":"CodegenFileType"},"Enums/CodegenFileType.html#/s:4LLVM15CodegenFileTypeO8assemblyyA2CmF":{"name":"assembly","abstract":"<p>An assembly file (.asm).</p>","parent_name":"CodegenFileType"},"Enums/CodegenFileType.html#/s:4LLVM15CodegenFileTypeO7bitCodeyA2CmF":{"name":"bitCode","abstract":"<p>An LLVM Bitcode file (.bc).</p>","parent_name":"CodegenFileType"},"Enums/CodegenFileType.html#/s:4LLVM15CodegenFileTypeO02asA0So011LLVMCodeGencD0ayF":{"name":"asLLVM()","abstract":"<p>Returns the underlying <code>LLVMCodeGenFileType</code> associated with this file","parent_name":"CodegenFileType"},"Enums/CodeModel.html#/s:4LLVM9CodeModelO7defaultyA2CmF":{"name":"default","abstract":"<p>Generated code will assume the default for a particular target architecture.</p>","parent_name":"CodeModel"},"Enums/CodeModel.html#/s:4LLVM9CodeModelO10jitDefaultyA2CmF":{"name":"jitDefault","abstract":"<p>Generated code will assume the default for JITed code on a particular","parent_name":"CodeModel"},"Enums/CodeModel.html#/s:4LLVM9CodeModelO5smallyA2CmF":{"name":"small","abstract":"<p>The virtual address of code executed is known at link time. Additionally","parent_name":"CodeModel"},"Enums/CodeModel.html#/s:4LLVM9CodeModelO6kernelyA2CmF":{"name":"kernel","abstract":"<p>The kernel of an operating system is usually rather small but runs in the","parent_name":"CodeModel"},"Enums/CodeModel.html#/s:4LLVM9CodeModelO6mediumyA2CmF":{"name":"medium","abstract":"<p>In the medium model, the data section is split into two parts — the data","parent_name":"CodeModel"},"Enums/CodeModel.html#/s:4LLVM9CodeModelO5largeyA2CmF":{"name":"large","abstract":"<p>The large code model makes no assumptions about addresses and sizes of","parent_name":"CodeModel"},"Enums/CodeModel.html#/s:4LLVM9CodeModelO02asA0So08LLVMCodeC0ayF":{"name":"asLLVM()","abstract":"<p>Returns the underlying <code>LLVMCodeModel</code> associated with this","parent_name":"CodeModel"},"Enums/RelocationModel.html#/s:4LLVM15RelocationModelO7defaultyA2CmF":{"name":"default","abstract":"<p>Generated code will assume the default for a particular target architecture.</p>","parent_name":"RelocationModel"},"Enums/RelocationModel.html#/s:4LLVM15RelocationModelO6staticyA2CmF":{"name":"static","abstract":"<p>Generated code will exist at static offsets.</p>","parent_name":"RelocationModel"},"Enums/RelocationModel.html#/s:4LLVM15RelocationModelO3picyA2CmF":{"name":"pic","abstract":"<p>Generated code will be position-independent.</p>","parent_name":"RelocationModel"},"Enums/RelocationModel.html#/s:4LLVM15RelocationModelO12dynamicNoPICyA2CmF":{"name":"dynamicNoPIC","abstract":"<p>Generated code will not be position-independent and may be used in static","parent_name":"RelocationModel"},"Enums/RelocationModel.html#/s:4LLVM15RelocationModelO4ropiyA2CmF":{"name":"ropi","abstract":"<p>Generated code will be compiled in read-only position independent mode.","parent_name":"RelocationModel"},"Enums/RelocationModel.html#/s:4LLVM15RelocationModelO4rwpiyA2CmF":{"name":"rwpi","abstract":"<p>Generated code will be compiled in read-write position independent mode.","parent_name":"RelocationModel"},"Enums/RelocationModel.html#/s:4LLVM15RelocationModelO8ropiRWPIyA2CmF":{"name":"ropiRWPI","abstract":"<p>Combines the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/RelocationModel.html#/s:4LLVM15RelocationModelO4ropiyA2CmF\">ropi</a></code> and <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/RelocationModel.html#/s:4LLVM15RelocationModelO4rwpiyA2CmF\">rwpi</a></code> modes.  Generated code will be compiled in","parent_name":"RelocationModel"},"Enums/RelocationModel.html#/s:4LLVM15RelocationModelO02asA0So13LLVMRelocModeayF":{"name":"asLLVM()","abstract":"<p>Returns the underlying <code>LLVMRelocMode</code> associated with this","parent_name":"RelocationModel"},"Enums/CodeGenOptLevel.html#/s:4LLVM15CodeGenOptLevelO4noneyA2CmF":{"name":"none","abstract":"<p>Disable as many optimizations as possible. This doesn&rsquo;t completely","parent_name":"CodeGenOptLevel"},"Enums/CodeGenOptLevel.html#/s:4LLVM15CodeGenOptLevelO4lessyA2CmF":{"name":"less","abstract":"<p>Optimize quickly without destroying debuggability.</p>","parent_name":"CodeGenOptLevel"},"Enums/CodeGenOptLevel.html#/s:4LLVM15CodeGenOptLevelO7defaultyA2CmF":{"name":"default","abstract":"<p>Optimize for fast execution as much as possible without triggering","parent_name":"CodeGenOptLevel"},"Enums/CodeGenOptLevel.html#/s:4LLVM15CodeGenOptLevelO10aggressiveyA2CmF":{"name":"aggressive","abstract":"<p>Optimize for fast execution as much as possible.</p>","parent_name":"CodeGenOptLevel"},"Enums/CodeGenOptLevel.html#/s:4LLVM15CodeGenOptLevelO02asA0So08LLVMCodecdE0ayF":{"name":"asLLVM()","abstract":"<p>Returns the underlying <code>LLVMCodeGenOptLevel</code> associated with this","parent_name":"CodeGenOptLevel"},"Enums/ByteOrder.html#/s:4LLVM9ByteOrderO12littleEndianyA2CmF":{"name":"littleEndian","abstract":"<p>Little-endian byte order. In a little-endian platform, the <em>least</em>","parent_name":"ByteOrder"},"Enums/ByteOrder.html#/s:4LLVM9ByteOrderO9bigEndianyA2CmF":{"name":"bigEndian","abstract":"<p>Big-endian byte order. In a big-endian platform, the <em>most</em>","parent_name":"ByteOrder"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO13aggressiveDCEyA2CmF":{"name":"aggressiveDCE","abstract":"<p>This pass uses the SSA based Aggressive DCE algorithm.  This algorithm","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO14bitTrackingDCEyA2CmF":{"name":"bitTrackingDCE","abstract":"<p>This pass uses a bit-tracking DCE algorithm in order to remove","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO24alignmentFromAssumptionsyA2CmF":{"name":"alignmentFromAssumptions","abstract":"<p>Use assume intrinsics to set load/store alignments.</p>","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO17cfgSimplificationyA2CmF":{"name":"cfgSimplification","abstract":"<p>Merge basic blocks, eliminate unreachable blocks, simplify terminator","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO20deadStoreEliminationyA2CmF":{"name":"deadStoreElimination","abstract":"<p>This pass deletes stores that are post-dominated by must-aliased stores","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO10scalarizeryA2CmF":{"name":"scalarizer","abstract":"<p>Converts vector operations into scalar operations.</p>","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO21mergedLoadStoreMotionyA2CmF":{"name":"mergedLoadStoreMotion","abstract":"<p>This pass merges loads and stores in diamonds. Loads are hoisted into the","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO3gvnyA2CmF":{"name":"gvn","abstract":"<p>This pass performs global value numbering and redundant load elimination","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO14indVarSimplifyyA2CmF":{"name":"indVarSimplify","abstract":"<p>Transform induction variables in a program to all use a single canonical","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO20instructionCombiningyA2CmF":{"name":"instructionCombining","abstract":"<p>Combine instructions to form fewer, simple instructions. This pass does","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO13jumpThreadingyA2CmF":{"name":"jumpThreading","abstract":"<p>Thread control through mult-pred/multi-succ blocks where some preds","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO4licmyA2CmF":{"name":"licm","abstract":"<p>This pass is a loop invariant code motion and memory promotion pass.</p>","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO12loopDeletionyA2CmF":{"name":"loopDeletion","abstract":"<p>This pass performs DCE of non-infinite loops that it can prove are dead.</p>","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO9loopIdiomyA2CmF":{"name":"loopIdiom","abstract":"<p>This pass recognizes and replaces idioms in loops.</p>","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO10loopRotateyA2CmF":{"name":"loopRotate","abstract":"<p>This pass is a simple loop rotating pass.</p>","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO10loopRerollyA2CmF":{"name":"loopReroll","abstract":"<p>This pass is a simple loop rerolling pass.</p>","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO10loopUnrollyA2CmF":{"name":"loopUnroll","abstract":"<p>This pass is a simple loop unrolling pass.</p>","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO16loopUnrollAndJamyA2CmF":{"name":"loopUnrollAndJam","abstract":"<p>This pass is a simple loop unroll-and-jam pass.</p>","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO12loopUnswitchyA2CmF":{"name":"loopUnswitch","abstract":"<p>This pass is a simple loop unswitching pass.</p>","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO11lowerAtomicyA2CmF":{"name":"lowerAtomic","abstract":"<p>This pass lowers atomic intrinsics to non-atomic form for use in a known","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO9memCpyOptyA2CmF":{"name":"memCpyOpt","abstract":"<p>This pass performs optimizations related to eliminating <code>memcpy</code> calls","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO23partiallyInlineLibCallsyA2CmF":{"name":"partiallyInlineLibCalls","abstract":"<p>Tries to inline the fast path of library calls such as sqrt.</p>","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO11lowerSwitchyA2CmF":{"name":"lowerSwitch","abstract":"<p>This pass converts SwitchInst instructions into a sequence of chained","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO23promoteMemoryToRegisteryA2CmF":{"name":"promoteMemoryToRegister","abstract":"<p>This pass is used to promote memory references to","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO11reassociateyA2CmF":{"name":"reassociate","abstract":"<p>This pass reassociates commutative expressions in an order that","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO4sccpyA2CmF":{"name":"sccp","abstract":"<p>Sparse conditional constant propagation.</p>","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO20scalarReplAggregatesyA2CmF":{"name":"scalarReplAggregates","abstract":"<p>Replace aggregates or pieces of aggregates with scalar SSA values.</p>","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO23scalarReplAggregatesSSAyA2CmF":{"name":"scalarReplAggregatesSSA","abstract":"<p>Replace aggregates or pieces of aggregates with scalar SSA values.</p>","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO16simplifyLibCallsyA2CmF":{"name":"simplifyLibCalls","abstract":"<p>Tries to inline the fast path of library calls such as sqrt.</p>","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO19tailCallEliminationyA2CmF":{"name":"tailCallElimination","abstract":"<p>This pass eliminates call instructions to the current function which occur","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO19constantPropagationyA2CmF":{"name":"constantPropagation","abstract":"<p>A worklist driven constant propagation pass.</p>","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO22demoteMemoryToRegisteryA2CmF":{"name":"demoteMemoryToRegister","abstract":"<p>This pass is used to demote registers to memory references. It basically","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO26correlatedValuePropagationyA2CmF":{"name":"correlatedValuePropagation","abstract":"<p>Propagate CFG-derived value information</p>","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO8earlyCSEyA2CmF":{"name":"earlyCSE","abstract":"<p>This pass performs a simple and fast CSE pass over the dominator tree.</p>","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO20lowerExpectIntrinsicyA2CmF":{"name":"lowerExpectIntrinsic","abstract":"<p>Removes <code>llvm.expect</code> intrinsics and creates <q>block_weights</q> metadata.</p>","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO22typeBasedAliasAnalysisyA2CmF":{"name":"typeBasedAliasAnalysis","abstract":"<p>Adds metadata to LLVM IR types and performs metadata-based TBAA.</p>","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO15scopedNoAliasAAyA2CmF":{"name":"scopedNoAliasAA","abstract":"<p>Adds metadata to LLVM IR types and performs metadata-based scoped no-alias","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO18basicAliasAnalysisyA2CmF":{"name":"basicAliasAnalysis","abstract":"<p>LLVM&rsquo;s primary stateless and local alias analysis.</p>","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO05unifyB9ExitNodesyA2CmF":{"name":"unifyFunctionExitNodes","abstract":"<p>This pass is used to ensure that functions have at most one return","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO8verifieryA2CmF":{"name":"verifier","abstract":"<p>Runs the LLVM IR Verifier to sanity check the results of passes.</p>","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO13alwaysInlineryA2CmF":{"name":"alwaysInliner","abstract":"<p>A pass to inline and remove functions marked as <q>always_inline</q>.</p>","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO17argumentPromotionyA2CmF":{"name":"argumentPromotion","abstract":"<p>This pass promotes <q>by reference</q> arguments to be passed by value if the","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO13constantMergeyA2CmF":{"name":"constantMerge","abstract":"<p>This function returns a new pass that merges duplicate global constants","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO18deadArgEliminationyA2CmF":{"name":"deadArgElimination","abstract":"<p>This pass removes arguments from functions which are not used by the body","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO13functionAttrsyA2CmF":{"name":"functionAttrs","abstract":"<p>This pass walks SCCs of the call graph in RPO to deduce and propagate","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO16functionInliningyA2CmF":{"name":"functionInlining","abstract":"<p>Uses a heuristic to inline direct function calls to small functions.</p>","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO9globalDCEyA2CmF":{"name":"globalDCE","abstract":"<p>This transform is designed to eliminate unreachable internal globals","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO15globalOptimizeryA2CmF":{"name":"globalOptimizer","abstract":"<p>This function returns a new pass that optimizes non-address taken internal","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO21ipConstantPropagationyA2CmF":{"name":"ipConstantPropagation","abstract":"<p>This pass propagates constants from call sites into the bodies of","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO5ipsccyA2CmF":{"name":"ipscc","abstract":"<p>This pass propagates constants from call sites into the bodies of","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO7pruneEHyA2CmF":{"name":"pruneEH","abstract":"<p>Return a new pass object which transforms invoke instructions into calls,","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO19stripDeadPrototypesyA2CmF":{"name":"stripDeadPrototypes","abstract":"<p>This pass removes any function declarations (prototypes) that are not used.</p>","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO12stripSymbolsyA2CmF":{"name":"stripSymbols","abstract":"<p>These functions removes symbols from functions and modules without","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO13loopVectorizeyA2CmF":{"name":"loopVectorize","abstract":"<p>Performs a loop vectorization pass to widen instructions in loops to","parent_name":"FunctionPass"},"Enums/FunctionPass.html#/s:4LLVM12FunctionPassO12slpVectorizeyA2CmF":{"name":"slpVectorize","abstract":"<p>This pass performs a superword-level parallelism pass to combine","parent_name":"FunctionPass"},"Enums/InlineAssemblyDialect.html#/s:4LLVM21InlineAssemblyDialectO3attyA2CmF":{"name":"att","abstract":"<p>The dialect of assembly created at Bell Labs by AT&amp;T.</p>","parent_name":"InlineAssemblyDialect"},"Enums/InlineAssemblyDialect.html#/s:4LLVM21InlineAssemblyDialectO5intelyA2CmF":{"name":"intel","abstract":"<p>The dialect of assembly created at Intel.</p>","parent_name":"InlineAssemblyDialect"},"Enums/AtomicReadModifyWriteOperation.html#/s:4LLVM30AtomicReadModifyWriteOperationO4xchgyA2CmF":{"name":"xchg","abstract":"<p>Set the new value and return the one old</p>","parent_name":"AtomicReadModifyWriteOperation"},"Enums/AtomicReadModifyWriteOperation.html#/s:4LLVM30AtomicReadModifyWriteOperationO3addyA2CmF":{"name":"add","abstract":"<p>Add a value and return the old one</p>","parent_name":"AtomicReadModifyWriteOperation"},"Enums/AtomicReadModifyWriteOperation.html#/s:4LLVM30AtomicReadModifyWriteOperationO3subyA2CmF":{"name":"sub","abstract":"<p>Subtract a value and return the old one</p>","parent_name":"AtomicReadModifyWriteOperation"},"Enums/AtomicReadModifyWriteOperation.html#/s:4LLVM30AtomicReadModifyWriteOperationO3andyA2CmF":{"name":"and","abstract":"<p>And a value and return the old one</p>","parent_name":"AtomicReadModifyWriteOperation"},"Enums/AtomicReadModifyWriteOperation.html#/s:4LLVM30AtomicReadModifyWriteOperationO4nandyA2CmF":{"name":"nand","abstract":"<p>Not-And a value and return the old one</p>","parent_name":"AtomicReadModifyWriteOperation"},"Enums/AtomicReadModifyWriteOperation.html#/s:4LLVM30AtomicReadModifyWriteOperationO2oryA2CmF":{"name":"or","abstract":"<p>OR a value and return the old one</p>","parent_name":"AtomicReadModifyWriteOperation"},"Enums/AtomicReadModifyWriteOperation.html#/s:4LLVM30AtomicReadModifyWriteOperationO3xoryA2CmF":{"name":"xor","abstract":"<p>Xor a value and return the old one</p>","parent_name":"AtomicReadModifyWriteOperation"},"Enums/AtomicReadModifyWriteOperation.html#/s:4LLVM30AtomicReadModifyWriteOperationO3maxyA2CmF":{"name":"max","abstract":"<p>Sets the value if it&rsquo;s greater than the original using a signed comparison","parent_name":"AtomicReadModifyWriteOperation"},"Enums/AtomicReadModifyWriteOperation.html#/s:4LLVM30AtomicReadModifyWriteOperationO3minyA2CmF":{"name":"min","abstract":"<p>Sets the value if it&rsquo;s Smaller than the original using a signed comparison","parent_name":"AtomicReadModifyWriteOperation"},"Enums/AtomicReadModifyWriteOperation.html#/s:4LLVM30AtomicReadModifyWriteOperationO4umaxyA2CmF":{"name":"umax","abstract":"<p>Sets the value if it&rsquo;s greater than the original using an unsigned","parent_name":"AtomicReadModifyWriteOperation"},"Enums/AtomicReadModifyWriteOperation.html#/s:4LLVM30AtomicReadModifyWriteOperationO4uminyA2CmF":{"name":"umin","abstract":"<p>Sets the value if it&rsquo;s greater than the original using an unsigned","parent_name":"AtomicReadModifyWriteOperation"},"Enums/AtomicOrdering.html#/s:4LLVM14AtomicOrderingO03notB0yA2CmF":{"name":"notAtomic","abstract":"<p>A load or store which is not atomic</p>","parent_name":"AtomicOrdering"},"Enums/AtomicOrdering.html#/s:4LLVM14AtomicOrderingO9unorderedyA2CmF":{"name":"unordered","abstract":"<p>Lowest level of atomicity, guarantees somewhat sane results, lock free.</p>","parent_name":"AtomicOrdering"},"Enums/AtomicOrdering.html#/s:4LLVM14AtomicOrderingO9monotonicyA2CmF":{"name":"monotonic","abstract":"<p>Guarantees that if you take all the operations affecting a specific","parent_name":"AtomicOrdering"},"Enums/AtomicOrdering.html#/s:4LLVM14AtomicOrderingO7acquireyA2CmF":{"name":"acquire","abstract":"<p>Acquire provides a barrier of the sort necessary to acquire a lock to","parent_name":"AtomicOrdering"},"Enums/AtomicOrdering.html#/s:4LLVM14AtomicOrderingO7releaseyA2CmF":{"name":"release","abstract":"<p>Release is similar to Acquire, but with a barrier of the sort necessary to","parent_name":"AtomicOrdering"},"Enums/AtomicOrdering.html#/s:4LLVM14AtomicOrderingO14acquireReleaseyA2CmF":{"name":"acquireRelease","abstract":"<p>provides both an Acquire and a Release barrier (for fences and operations","parent_name":"AtomicOrdering"},"Enums/AtomicOrdering.html#/s:4LLVM14AtomicOrderingO22sequentiallyConsistentyA2CmF":{"name":"sequentiallyConsistent","abstract":"<p>Provides Acquire semantics for loads and Release semantics for stores.</p>","parent_name":"AtomicOrdering"},"Enums/AtomicOrdering.html#/s:4LLVM14AtomicOrderingO1loiySbAC_ACtFZ":{"name":"<(_:_:)","abstract":"<p>Returns whether the left atomic ordering is strictly weaker than the","parent_name":"AtomicOrdering"},"Enums/RealPredicate.html#/s:4LLVM13RealPredicateO5falseyA2CmF":{"name":"false","abstract":"<p>No comparison, always returns <code>false</code>.</p>","parent_name":"RealPredicate"},"Enums/RealPredicate.html#/s:4LLVM13RealPredicateO12orderedEqualyA2CmF":{"name":"orderedEqual","abstract":"<p>Ordered and equal.</p>","parent_name":"RealPredicate"},"Enums/RealPredicate.html#/s:4LLVM13RealPredicateO18orderedGreaterThanyA2CmF":{"name":"orderedGreaterThan","abstract":"<p>Ordered greater than.</p>","parent_name":"RealPredicate"},"Enums/RealPredicate.html#/s:4LLVM13RealPredicateO25orderedGreaterThanOrEqualyA2CmF":{"name":"orderedGreaterThanOrEqual","abstract":"<p>Ordered greater than or equal.</p>","parent_name":"RealPredicate"},"Enums/RealPredicate.html#/s:4LLVM13RealPredicateO15orderedLessThanyA2CmF":{"name":"orderedLessThan","abstract":"<p>Ordered less than.</p>","parent_name":"RealPredicate"},"Enums/RealPredicate.html#/s:4LLVM13RealPredicateO22orderedLessThanOrEqualyA2CmF":{"name":"orderedLessThanOrEqual","abstract":"<p>Ordered less than or equal.</p>","parent_name":"RealPredicate"},"Enums/RealPredicate.html#/s:4LLVM13RealPredicateO15orderedNotEqualyA2CmF":{"name":"orderedNotEqual","abstract":"<p>Ordered and not equal.</p>","parent_name":"RealPredicate"},"Enums/RealPredicate.html#/s:4LLVM13RealPredicateO7orderedyA2CmF":{"name":"ordered","abstract":"<p>Ordered (no nans).</p>","parent_name":"RealPredicate"},"Enums/RealPredicate.html#/s:4LLVM13RealPredicateO9unorderedyA2CmF":{"name":"unordered","abstract":"<p>Unordered (either nans).</p>","parent_name":"RealPredicate"},"Enums/RealPredicate.html#/s:4LLVM13RealPredicateO14unorderedEqualyA2CmF":{"name":"unorderedEqual","abstract":"<p>Unordered or equal.</p>","parent_name":"RealPredicate"},"Enums/RealPredicate.html#/s:4LLVM13RealPredicateO20unorderedGreaterThanyA2CmF":{"name":"unorderedGreaterThan","abstract":"<p>Unordered or greater than.</p>","parent_name":"RealPredicate"},"Enums/RealPredicate.html#/s:4LLVM13RealPredicateO27unorderedGreaterThanOrEqualyA2CmF":{"name":"unorderedGreaterThanOrEqual","abstract":"<p>Unordered or greater than or equal.</p>","parent_name":"RealPredicate"},"Enums/RealPredicate.html#/s:4LLVM13RealPredicateO17unorderedLessThanyA2CmF":{"name":"unorderedLessThan","abstract":"<p>Unordered or less than.</p>","parent_name":"RealPredicate"},"Enums/RealPredicate.html#/s:4LLVM13RealPredicateO24unorderedLessThanOrEqualyA2CmF":{"name":"unorderedLessThanOrEqual","abstract":"<p>Unordered or less than or equal.</p>","parent_name":"RealPredicate"},"Enums/RealPredicate.html#/s:4LLVM13RealPredicateO17unorderedNotEqualyA2CmF":{"name":"unorderedNotEqual","abstract":"<p>Unordered or not equal.</p>","parent_name":"RealPredicate"},"Enums/RealPredicate.html#/s:4LLVM13RealPredicateO4trueyA2CmF":{"name":"true","abstract":"<p>No comparison, always returns <code>true</code>.</p>","parent_name":"RealPredicate"},"Enums/IntPredicate.html#/s:4LLVM12IntPredicateO5equalyA2CmF":{"name":"equal","abstract":"<p>Yields <code>true</code> if the operands are equal, false otherwise without sign","parent_name":"IntPredicate"},"Enums/IntPredicate.html#/s:4LLVM12IntPredicateO8notEqualyA2CmF":{"name":"notEqual","abstract":"<p>Yields <code>true</code> if the operands are unequal, false otherwise without sign","parent_name":"IntPredicate"},"Enums/IntPredicate.html#/s:4LLVM12IntPredicateO19unsignedGreaterThanyA2CmF":{"name":"unsignedGreaterThan","abstract":"<p>Interprets the operands as unsigned values and yields true if the first is","parent_name":"IntPredicate"},"Enums/IntPredicate.html#/s:4LLVM12IntPredicateO26unsignedGreaterThanOrEqualyA2CmF":{"name":"unsignedGreaterThanOrEqual","abstract":"<p>Interprets the operands as unsigned values and yields true if the first is","parent_name":"IntPredicate"},"Enums/IntPredicate.html#/s:4LLVM12IntPredicateO16unsignedLessThanyA2CmF":{"name":"unsignedLessThan","abstract":"<p>Interprets the operands as unsigned values and yields true if the first is","parent_name":"IntPredicate"},"Enums/IntPredicate.html#/s:4LLVM12IntPredicateO23unsignedLessThanOrEqualyA2CmF":{"name":"unsignedLessThanOrEqual","abstract":"<p>Interprets the operands as unsigned values and yields true if the first is","parent_name":"IntPredicate"},"Enums/IntPredicate.html#/s:4LLVM12IntPredicateO17signedGreaterThanyA2CmF":{"name":"signedGreaterThan","abstract":"<p>Interprets the operands as signed values and yields true if the first is","parent_name":"IntPredicate"},"Enums/IntPredicate.html#/s:4LLVM12IntPredicateO24signedGreaterThanOrEqualyA2CmF":{"name":"signedGreaterThanOrEqual","abstract":"<p>Interprets the operands as signed values and yields true if the first is","parent_name":"IntPredicate"},"Enums/IntPredicate.html#/s:4LLVM12IntPredicateO14signedLessThanyA2CmF":{"name":"signedLessThan","abstract":"<p>Interprets the operands as signed values and yields true if the first is","parent_name":"IntPredicate"},"Enums/IntPredicate.html#/s:4LLVM12IntPredicateO21signedLessThanOrEqualyA2CmF":{"name":"signedLessThanOrEqual","abstract":"<p>Interprets the operands as signed values and yields true if the first is","parent_name":"IntPredicate"},"Enums/OverflowBehavior.html#/s:4LLVM16OverflowBehaviorO7defaultyA2CmF":{"name":"default","abstract":"<p>The result value of the operator is the mathematical result modulo <code>2^n</code>,","parent_name":"OverflowBehavior"},"Enums/OverflowBehavior.html#/s:4LLVM16OverflowBehaviorO12noSignedWrapyA2CmF":{"name":"noSignedWrap","abstract":"<p>The result value of the operator is a poison value if signed overflow","parent_name":"OverflowBehavior"},"Enums/OverflowBehavior.html#/s:4LLVM16OverflowBehaviorO14noUnsignedWrapyA2CmF":{"name":"noUnsignedWrap","abstract":"<p>The result value of the operator is a poison value if unsigned overflow","parent_name":"OverflowBehavior"},"Enums/OpCode/Cast.html#/s:4LLVM6OpCodeO4CastO5truncyA2EmF":{"name":"trunc","abstract":"<p>The <code>trunc</code> instruction.</p>","parent_name":"Cast"},"Enums/OpCode/Cast.html#/s:4LLVM6OpCodeO4CastO4zextyA2EmF":{"name":"zext","abstract":"<p>The <code>zext</code> instruction.</p>","parent_name":"Cast"},"Enums/OpCode/Cast.html#/s:4LLVM6OpCodeO4CastO4sextyA2EmF":{"name":"sext","abstract":"<p>The <code>sext</code> instruction.</p>","parent_name":"Cast"},"Enums/OpCode/Cast.html#/s:4LLVM6OpCodeO4CastO6fpToUIyA2EmF":{"name":"fpToUI","abstract":"<p>The <code>fpToUI</code> instruction.</p>","parent_name":"Cast"},"Enums/OpCode/Cast.html#/s:4LLVM6OpCodeO4CastO6fpToSIyA2EmF":{"name":"fpToSI","abstract":"<p>The <code>fpToSI</code> instruction.</p>","parent_name":"Cast"},"Enums/OpCode/Cast.html#/s:4LLVM6OpCodeO4CastO6uiToFPyA2EmF":{"name":"uiToFP","abstract":"<p>The <code>uiToFP</code> instruction.</p>","parent_name":"Cast"},"Enums/OpCode/Cast.html#/s:4LLVM6OpCodeO4CastO6siToFPyA2EmF":{"name":"siToFP","abstract":"<p>The <code>siToFP</code> instruction.</p>","parent_name":"Cast"},"Enums/OpCode/Cast.html#/s:4LLVM6OpCodeO4CastO7fpTruncyA2EmF":{"name":"fpTrunc","abstract":"<p>The <code>fpTrunc</code> instruction.</p>","parent_name":"Cast"},"Enums/OpCode/Cast.html#/s:4LLVM6OpCodeO4CastO5fpextyA2EmF":{"name":"fpext","abstract":"<p>The <code>fpext</code> instruction.</p>","parent_name":"Cast"},"Enums/OpCode/Cast.html#/s:4LLVM6OpCodeO4CastO8ptrToIntyA2EmF":{"name":"ptrToInt","abstract":"<p>The <code>ptrToInt</code> instruction.</p>","parent_name":"Cast"},"Enums/OpCode/Cast.html#/s:4LLVM6OpCodeO4CastO8intToPtryA2EmF":{"name":"intToPtr","abstract":"<p>The <code>intToPtr</code> instruction.</p>","parent_name":"Cast"},"Enums/OpCode/Cast.html#/s:4LLVM6OpCodeO4CastO03bitD0yA2EmF":{"name":"bitCast","abstract":"<p>The <code>bitCast</code> instruction.</p>","parent_name":"Cast"},"Enums/OpCode/Cast.html#/s:4LLVM6OpCodeO4CastO09addrSpaceD0yA2EmF":{"name":"addrSpaceCast","abstract":"<p>The <code>addrSpaceCast</code> instruction.</p>","parent_name":"Cast"},"Enums/OpCode/Cast.html#/s:4LLVM6OpCodeO4CastO4llvmSo10LLVMOpcodeavp":{"name":"llvm","abstract":"<p>Retrieves the corresponding <code>LLVMOpcode</code>.</p>","parent_name":"Cast"},"Enums/OpCode/Binary.html#/s:4LLVM6OpCodeO6BinaryO3addyA2EmF":{"name":"add","abstract":"<p>The <code>add</code> instruction.</p>","parent_name":"Binary"},"Enums/OpCode/Binary.html#/s:4LLVM6OpCodeO6BinaryO4faddyA2EmF":{"name":"fadd","abstract":"<p>The <code>fadd</code> instruction.</p>","parent_name":"Binary"},"Enums/OpCode/Binary.html#/s:4LLVM6OpCodeO6BinaryO3subyA2EmF":{"name":"sub","abstract":"<p>The <code>sub</code> instruction.</p>","parent_name":"Binary"},"Enums/OpCode/Binary.html#/s:4LLVM6OpCodeO6BinaryO4fsubyA2EmF":{"name":"fsub","abstract":"<p>The <code>fsub</code> instruction.</p>","parent_name":"Binary"},"Enums/OpCode/Binary.html#/s:4LLVM6OpCodeO6BinaryO3mulyA2EmF":{"name":"mul","abstract":"<p>The <code>mul</code> instruction.</p>","parent_name":"Binary"},"Enums/OpCode/Binary.html#/s:4LLVM6OpCodeO6BinaryO4fmulyA2EmF":{"name":"fmul","abstract":"<p>The <code>fmul</code> instruction.</p>","parent_name":"Binary"},"Enums/OpCode/Binary.html#/s:4LLVM6OpCodeO6BinaryO4udivyA2EmF":{"name":"udiv","abstract":"<p>The <code>udiv</code> instruction.</p>","parent_name":"Binary"},"Enums/OpCode/Binary.html#/s:4LLVM6OpCodeO6BinaryO4sdivyA2EmF":{"name":"sdiv","abstract":"<p>The <code>sdiv</code> instruction.</p>","parent_name":"Binary"},"Enums/OpCode/Binary.html#/s:4LLVM6OpCodeO6BinaryO4fdivyA2EmF":{"name":"fdiv","abstract":"<p>The <code>fdiv</code> instruction.</p>","parent_name":"Binary"},"Enums/OpCode/Binary.html#/s:4LLVM6OpCodeO6BinaryO4uremyA2EmF":{"name":"urem","abstract":"<p>The <code>urem</code> instruction.</p>","parent_name":"Binary"},"Enums/OpCode/Binary.html#/s:4LLVM6OpCodeO6BinaryO4sremyA2EmF":{"name":"srem","abstract":"<p>The <code>srem</code> instruction.</p>","parent_name":"Binary"},"Enums/OpCode/Binary.html#/s:4LLVM6OpCodeO6BinaryO4fremyA2EmF":{"name":"frem","abstract":"<p>The <code>frem</code> instruction.</p>","parent_name":"Binary"},"Enums/OpCode/Binary.html#/s:4LLVM6OpCodeO6BinaryO3shlyA2EmF":{"name":"shl","abstract":"<p>The <code>shl</code> instruction.</p>","parent_name":"Binary"},"Enums/OpCode/Binary.html#/s:4LLVM6OpCodeO6BinaryO4lshryA2EmF":{"name":"lshr","abstract":"<p>The <code>lshr</code> instruction.</p>","parent_name":"Binary"},"Enums/OpCode/Binary.html#/s:4LLVM6OpCodeO6BinaryO4ashryA2EmF":{"name":"ashr","abstract":"<p>The <code>ashr</code> instruction.</p>","parent_name":"Binary"},"Enums/OpCode/Binary.html#/s:4LLVM6OpCodeO6BinaryO3andyA2EmF":{"name":"and","abstract":"<p>The <code>and</code> instruction.</p>","parent_name":"Binary"},"Enums/OpCode/Binary.html#/s:4LLVM6OpCodeO6BinaryO2oryA2EmF":{"name":"or","abstract":"<p>The <code>or</code> instruction.</p>","parent_name":"Binary"},"Enums/OpCode/Binary.html#/s:4LLVM6OpCodeO6BinaryO3xoryA2EmF":{"name":"xor","abstract":"<p>The <code>xor</code> instruction.</p>","parent_name":"Binary"},"Enums/OpCode/Binary.html#/s:4LLVM6OpCodeO6BinaryO4llvmSo10LLVMOpcodeavp":{"name":"llvm","abstract":"<p>Retrieves the corresponding <code>LLVMOpcode</code>.</p>","parent_name":"Binary"},"Enums/OpCode.html#/s:4LLVM6OpCodeO3retyA2CmF":{"name":"ret","abstract":"<p>The opcode for the <code>ret</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO2bryA2CmF":{"name":"br","abstract":"<p>The opcode for the <code>br</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO6switchyA2CmF":{"name":"switch","abstract":"<p>The opcode for the <code>switch</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO10indirectBryA2CmF":{"name":"indirectBr","abstract":"<p>The opcode for the <code>indirectBr</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO6invokeyA2CmF":{"name":"invoke","abstract":"<p>The opcode for the <code>invoke</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO11unreachableyA2CmF":{"name":"unreachable","abstract":"<p>The opcode for the <code>unreachable</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO3addyA2CmF":{"name":"add","abstract":"<p>The opcode for the <code>add</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO4faddyA2CmF":{"name":"fadd","abstract":"<p>The opcode for the <code>fadd</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO3subyA2CmF":{"name":"sub","abstract":"<p>The opcode for the <code>sub</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO4fsubyA2CmF":{"name":"fsub","abstract":"<p>The opcode for the <code>fsub</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO3mulyA2CmF":{"name":"mul","abstract":"<p>The opcode for the <code>mul</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO4fmulyA2CmF":{"name":"fmul","abstract":"<p>The opcode for the <code>fmul</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO4udivyA2CmF":{"name":"udiv","abstract":"<p>The opcode for the <code>udiv</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO4sdivyA2CmF":{"name":"sdiv","abstract":"<p>The opcode for the <code>sdiv</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO4fdivyA2CmF":{"name":"fdiv","abstract":"<p>The opcode for the <code>fdiv</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO4uremyA2CmF":{"name":"urem","abstract":"<p>The opcode for the <code>urem</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO4sremyA2CmF":{"name":"srem","abstract":"<p>The opcode for the <code>srem</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO4fremyA2CmF":{"name":"frem","abstract":"<p>The opcode for the <code>frem</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO3shlyA2CmF":{"name":"shl","abstract":"<p>The opcode for the <code>shl</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO4lshryA2CmF":{"name":"lshr","abstract":"<p>The opcode for the <code>lshr</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO4ashryA2CmF":{"name":"ashr","abstract":"<p>The opcode for the <code>ashr</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO3andyA2CmF":{"name":"and","abstract":"<p>The opcode for the <code>and</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO2oryA2CmF":{"name":"or","abstract":"<p>The opcode for the <code>or</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO3xoryA2CmF":{"name":"xor","abstract":"<p>The opcode for the <code>xor</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO6allocayA2CmF":{"name":"alloca","abstract":"<p>The opcode for the <code>alloca</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO4loadyA2CmF":{"name":"load","abstract":"<p>The opcode for the <code>load</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO5storeyA2CmF":{"name":"store","abstract":"<p>The opcode for the <code>store</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO13getElementPtryA2CmF":{"name":"getElementPtr","abstract":"<p>The opcode for the <code>getElementPtr</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO5truncyA2CmF":{"name":"trunc","abstract":"<p>The opcode for the <code>trunc</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO4zextyA2CmF":{"name":"zext","abstract":"<p>The opcode for the <code>zext</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO4sextyA2CmF":{"name":"sext","abstract":"<p>The opcode for the <code>sext</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO6fpToUIyA2CmF":{"name":"fpToUI","abstract":"<p>The opcode for the <code>fpToUI</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO6fpToSIyA2CmF":{"name":"fpToSI","abstract":"<p>The opcode for the <code>fpToSI</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO6uiToFPyA2CmF":{"name":"uiToFP","abstract":"<p>The opcode for the <code>uiToFP</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO6siToFPyA2CmF":{"name":"siToFP","abstract":"<p>The opcode for the <code>siToFP</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO7fpTruncyA2CmF":{"name":"fpTrunc","abstract":"<p>The opcode for the <code>fpTrunc</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO5fpExtyA2CmF":{"name":"fpExt","abstract":"<p>The opcode for the <code>fpExt</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO8ptrToIntyA2CmF":{"name":"ptrToInt","abstract":"<p>The opcode for the <code>ptrToInt</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO8intToPtryA2CmF":{"name":"intToPtr","abstract":"<p>The opcode for the <code>intToPtr</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO7bitCastyA2CmF":{"name":"bitCast","abstract":"<p>The opcode for the <code>bitCast</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO13addrSpaceCastyA2CmF":{"name":"addrSpaceCast","abstract":"<p>The opcode for the <code>addrSpaceCast</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO4icmpyA2CmF":{"name":"icmp","abstract":"<p>The opcode for the <code>icmp</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO4fcmpyA2CmF":{"name":"fcmp","abstract":"<p>The opcode for the <code>fcmp</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO3phiyA2CmF":{"name":"phi","abstract":"<p>The opcode for the <code>PHI</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO4callyA2CmF":{"name":"call","abstract":"<p>The opcode for the <code>call</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO6selectyA2CmF":{"name":"select","abstract":"<p>The opcode for the <code>select</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO7userOp1yA2CmF":{"name":"userOp1","abstract":"<p>The opcode for the <code>userOp1</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO7userOp2yA2CmF":{"name":"userOp2","abstract":"<p>The opcode for the <code>userOp2</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO5vaArgyA2CmF":{"name":"vaArg","abstract":"<p>The opcode for the <code>vaArg</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO14extractElementyA2CmF":{"name":"extractElement","abstract":"<p>The opcode for the <code>extractElement</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO13insertElementyA2CmF":{"name":"insertElement","abstract":"<p>The opcode for the <code>insertElement</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO13shuffleVectoryA2CmF":{"name":"shuffleVector","abstract":"<p>The opcode for the <code>shuffleVector</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO12extractValueyA2CmF":{"name":"extractValue","abstract":"<p>The opcode for the <code>extractValue</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO11insertValueyA2CmF":{"name":"insertValue","abstract":"<p>The opcode for the <code>insertValue</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO5fenceyA2CmF":{"name":"fence","abstract":"<p>The opcode for the <code>fence</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO13atomicCmpXchgyA2CmF":{"name":"atomicCmpXchg","abstract":"<p>The opcode for the <code>atomicCmpXchg</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO9atomicRMWyA2CmF":{"name":"atomicRMW","abstract":"<p>The opcode for the <code>atomicRMW</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO6resumeyA2CmF":{"name":"resume","abstract":"<p>The opcode for the <code>resume</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO10landingPadyA2CmF":{"name":"landingPad","abstract":"<p>The opcode for the <code>landingPad</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO10cleanupRetyA2CmF":{"name":"cleanupRet","abstract":"<p>The opcode for the <code>cleanupRet</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO8catchRetyA2CmF":{"name":"catchRet","abstract":"<p>The opcode for the <code>catchRet</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO8catchPadyA2CmF":{"name":"catchPad","abstract":"<p>The opcode for the <code>catchPad</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO10cleanupPadyA2CmF":{"name":"cleanupPad","abstract":"<p>The opcode for the <code>cleanupPad</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode.html#/s:4LLVM6OpCodeO11catchSwitchyA2CmF":{"name":"catchSwitch","abstract":"<p>The opcode for the <code>catchSwitch</code> instruction.</p>","parent_name":"OpCode"},"Enums/OpCode/Binary.html":{"name":"Binary","abstract":"<p><code>BinaryOperation</code> enumerates the subset of opcodes that are binary operations.</p>","parent_name":"OpCode"},"Enums/OpCode/Cast.html":{"name":"Cast","abstract":"<p><code>CastOperation</code> enumerates the subset of opcodes that are cast operations.</p>","parent_name":"OpCode"},"Enums/ModuleError.html#/s:4LLVM11ModuleErrorO22didNotPassVerificationyACSScACmF":{"name":"didNotPassVerification(_:)","abstract":"<p>Thrown when a module does not pass the module verification process.","parent_name":"ModuleError"},"Enums/ModuleError.html#/s:4LLVM11ModuleErrorO13couldNotPrintyACSS_SStcACmF":{"name":"couldNotPrint(path:error:)","abstract":"<p>Thrown when a module cannot be printed at a given path.  Provides the","parent_name":"ModuleError"},"Enums/ModuleError.html#/s:4LLVM11ModuleErrorO19couldNotEmitBitCodeyACSS_tcACmF":{"name":"couldNotEmitBitCode(path:)","abstract":"<p>Thrown when a module cannot emit bitcode because it contains erroneous","parent_name":"ModuleError"},"Enums/ModuleError.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"ModuleError"},"Enums/DWARFEmissionKind.html#/s:4LLVM17DWARFEmissionKindO4noneyA2CmF":{"name":"none","abstract":"<p>No debug information should be emitted.</p>","parent_name":"DWARFEmissionKind"},"Enums/DWARFEmissionKind.html#/s:4LLVM17DWARFEmissionKindO4fullyA2CmF":{"name":"full","abstract":"<p>Full debug information should be emitted.</p>","parent_name":"DWARFEmissionKind"},"Enums/DWARFEmissionKind.html#/s:4LLVM17DWARFEmissionKindO14lineTablesOnlyyA2CmF":{"name":"lineTablesOnly","abstract":"<p>Onle line tables should be emitted.</p>","parent_name":"DWARFEmissionKind"},"Enums/DIAttributeTypeEncoding.html#/s:4LLVM23DIAttributeTypeEncodingO7addressyA2CmF":{"name":"address","abstract":"<p>A linear machine address.</p>","parent_name":"DIAttributeTypeEncoding"},"Enums/DIAttributeTypeEncoding.html#/s:4LLVM23DIAttributeTypeEncodingO7booleanyA2CmF":{"name":"boolean","abstract":"<p>A true or false value.</p>","parent_name":"DIAttributeTypeEncoding"},"Enums/DIAttributeTypeEncoding.html#/s:4LLVM23DIAttributeTypeEncodingO12complexFloatyA2CmF":{"name":"complexFloat","abstract":"<p>A complex binary floating-point number.</p>","parent_name":"DIAttributeTypeEncoding"},"Enums/DIAttributeTypeEncoding.html#/s:4LLVM23DIAttributeTypeEncodingO5floatyA2CmF":{"name":"float","abstract":"<p>A binary floating-point number.</p>","parent_name":"DIAttributeTypeEncoding"},"Enums/DIAttributeTypeEncoding.html#/s:4LLVM23DIAttributeTypeEncodingO6signedyA2CmF":{"name":"signed","abstract":"<p>A signed binary integer.</p>","parent_name":"DIAttributeTypeEncoding"},"Enums/DIAttributeTypeEncoding.html#/s:4LLVM23DIAttributeTypeEncodingO10signedCharyA2CmF":{"name":"signedChar","abstract":"<p>A signed character.</p>","parent_name":"DIAttributeTypeEncoding"},"Enums/DIAttributeTypeEncoding.html#/s:4LLVM23DIAttributeTypeEncodingO8unsignedyA2CmF":{"name":"unsigned","abstract":"<p>An unsigned binary integer.</p>","parent_name":"DIAttributeTypeEncoding"},"Enums/DIAttributeTypeEncoding.html#/s:4LLVM23DIAttributeTypeEncodingO12unsignedCharyA2CmF":{"name":"unsignedChar","abstract":"<p>An unsigned character.</p>","parent_name":"DIAttributeTypeEncoding"},"Enums/DIAttributeTypeEncoding.html#/s:4LLVM23DIAttributeTypeEncodingO14imaginaryFloatyA2CmF":{"name":"imaginaryFloat","abstract":"<p>An imaginary binary floating-point number.</p>","parent_name":"DIAttributeTypeEncoding"},"Enums/DIAttributeTypeEncoding.html#/s:4LLVM23DIAttributeTypeEncodingO13packedDecimalyA2CmF":{"name":"packedDecimal","abstract":"<p>A packed decimal number.</p>","parent_name":"DIAttributeTypeEncoding"},"Enums/DIAttributeTypeEncoding.html#/s:4LLVM23DIAttributeTypeEncodingO13numericStringyA2CmF":{"name":"numericString","abstract":"<p>A numeric string.</p>","parent_name":"DIAttributeTypeEncoding"},"Enums/DIAttributeTypeEncoding.html#/s:4LLVM23DIAttributeTypeEncodingO6editedyA2CmF":{"name":"edited","abstract":"<p>An edited string.</p>","parent_name":"DIAttributeTypeEncoding"},"Enums/DIAttributeTypeEncoding.html#/s:4LLVM23DIAttributeTypeEncodingO11signedFixedyA2CmF":{"name":"signedFixed","abstract":"<p>A signed fixed-point scaled integer.</p>","parent_name":"DIAttributeTypeEncoding"},"Enums/DIAttributeTypeEncoding.html#/s:4LLVM23DIAttributeTypeEncodingO13unsignedFixedyA2CmF":{"name":"unsignedFixed","abstract":"<p>An unsigned fixed-point scaled integer.</p>","parent_name":"DIAttributeTypeEncoding"},"Enums/DIAttributeTypeEncoding.html#/s:4LLVM23DIAttributeTypeEncodingO12decimalFloatyA2CmF":{"name":"decimalFloat","abstract":"<p>An IEEE-754R decimal floating-point number.</p>","parent_name":"DIAttributeTypeEncoding"},"Enums/DIAttributeTypeEncoding.html#/s:4LLVM23DIAttributeTypeEncodingO3utfyA2CmF":{"name":"utf","abstract":"<p>An ISO/IEC 10646-1:1993 character.</p>","parent_name":"DIAttributeTypeEncoding"},"Enums/DIAttributeTypeEncoding.html#/s:4LLVM23DIAttributeTypeEncodingO3ucsyA2CmF":{"name":"ucs","abstract":"<p>An ISO/IEC 10646-1:1993 character in UCS-4 format.</p>","parent_name":"DIAttributeTypeEncoding"},"Enums/DIAttributeTypeEncoding.html#/s:4LLVM23DIAttributeTypeEncodingO5asciiyA2CmF":{"name":"ascii","abstract":"<p>An ISO/IEC 646:1991 character.</p>","parent_name":"DIAttributeTypeEncoding"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO9arrayTypeyA2CmF":{"name":"arrayType","abstract":"<p>Identifies metadata for an array type.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO9classTypeyA2CmF":{"name":"classType","abstract":"<p>Identifies metadata for a class type.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO10entryPointyA2CmF":{"name":"entryPoint","abstract":"<p>Identifies metadata for an alternate entry point.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO15enumerationTypeyA2CmF":{"name":"enumerationType","abstract":"<p>Identifies metadata for an enumeration type.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO15formalParameteryA2CmF":{"name":"formalParameter","abstract":"<p>Identifies metadata for a formal parameter of a parameter list.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO19importedDeclarationyA2CmF":{"name":"importedDeclaration","abstract":"<p>Identifies metadata for an imported declaration.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO5labelyA2CmF":{"name":"label","abstract":"<p>Identifies metadata for a label in the source; the","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO12lexicalBlockyA2CmF":{"name":"lexicalBlock","abstract":"<p>Identifies metadata for a lexical block in the source (usually for","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO6memberyA2CmF":{"name":"member","abstract":"<p>Identifies metadata for a data member.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO11pointerTypeyA2CmF":{"name":"pointerType","abstract":"<p>Identifies metadata for a pointer type.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO13referenceTypeyA2CmF":{"name":"referenceType","abstract":"<p>Identifies metadata for a reference type</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO11compileUnityA2CmF":{"name":"compileUnit","abstract":"<p>Identifies metadata for a complete compilation unit.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO10stringTypeyA2CmF":{"name":"stringType","abstract":"<p>Identifies metadata for a string type.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO13structureTypeyA2CmF":{"name":"structureType","abstract":"<p>Identifies metadata for a structure type.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO14subroutineTypeyA2CmF":{"name":"subroutineType","abstract":"<p>Identifies metadata for a subroutine type.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO7typedefyA2CmF":{"name":"typedef","abstract":"<p>Identifies metadata for a typedef declaration.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO9unionTypeyA2CmF":{"name":"unionType","abstract":"<p>Identifies metadata for a union type.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO21unspecifiedParametersyA2CmF":{"name":"unspecifiedParameters","abstract":"<p>Identifies metadata for an unspecified parameter list.  Can also be used","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO7variantyA2CmF":{"name":"variant","abstract":"<p>Identifies metadata for a variant record.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO11commonBlockyA2CmF":{"name":"commonBlock","abstract":"<p>Identifies metadata for a Fortran common block.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO15commonInclusionyA2CmF":{"name":"commonInclusion","abstract":"<p>Identifies metadata for a Fortran common inclusion.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO11inheritanceyA2CmF":{"name":"inheritance","abstract":"<p>Identifies metadata for an inheritance clause.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO17inlinedSubroutineyA2CmF":{"name":"inlinedSubroutine","abstract":"<p>Identifies metadata for an inlined subroutine.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO6moduleyA2CmF":{"name":"module","abstract":"<p>Identifies metadata for a module.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO15ptrToMemberTypeyA2CmF":{"name":"ptrToMemberType","abstract":"<p>Identifies metadata for a pointer to a data member.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO7setTypeyA2CmF":{"name":"setType","abstract":"<p>Identifies metadata for a set type.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO12subrangeTypeyA2CmF":{"name":"subrangeType","abstract":"<p>Identifies metadata for a subrange type describing the","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO8withStmtyA2CmF":{"name":"withStmt","abstract":"<p>Identifies metadata for Pascal and Modula-2&rsquo;s <code>with</code> statements.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO17accessDeclarationyA2CmF":{"name":"accessDeclaration","abstract":"<p>Identifies metadata for an access declaration.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO8baseTypeyA2CmF":{"name":"baseType","abstract":"<p>Identifies metadata for a a base type: a type that is not defined in terms","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO10catchBlockyA2CmF":{"name":"catchBlock","abstract":"<p>Identifies metadata for the catch block in a <code>try-catch</code> statement.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO9constTypeyA2CmF":{"name":"constType","abstract":"<p>Identifies metadata for a constant type.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO8constantyA2CmF":{"name":"constant","abstract":"<p>Identifies metadata for a constant.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO10enumeratoryA2CmF":{"name":"enumerator","abstract":"<p>Identifies metadata for an enumerator.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO8fileTypeyA2CmF":{"name":"fileType","abstract":"<p>Identifies metadata for a file.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO6friendyA2CmF":{"name":"friend","abstract":"<p>Identifies metadata for a C++ <code>friend</code> declaration.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO8namelistyA2CmF":{"name":"namelist","abstract":"<p>Identifies metadata for a Fortran 90 namelist.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO12namelistItemyA2CmF":{"name":"namelistItem","abstract":"<p>Identifies metadata for an item in a Fortran 90 namelist.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO10packedTypeyA2CmF":{"name":"packedType","abstract":"<p>Identifies metadata for an Ada or Pascal packed type.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO10subprogramyA2CmF":{"name":"subprogram","abstract":"<p>Identifies metadata for a subprogram.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO21templateTypeParameteryA2CmF":{"name":"templateTypeParameter","abstract":"<p>Identifies metadata for a template type parameter.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO22templateValueParameteryA2CmF":{"name":"templateValueParameter","abstract":"<p>Identifies metadata for a template value parameter.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO10thrownTypeyA2CmF":{"name":"thrownType","abstract":"<p>Identifies metadata for the thrown type from a subroutine.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO8tryBlockyA2CmF":{"name":"tryBlock","abstract":"<p>Identifies metadata for the try block in a <code>try-catch</code> statement.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO11variantPartyA2CmF":{"name":"variantPart","abstract":"<p>Identifies metadata for a part of a variant record.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO8variableyA2CmF":{"name":"variable","abstract":"<p>Identifies metadata for a variable.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO12volatileTypeyA2CmF":{"name":"volatileType","abstract":"<p>Identifies metadata for a volatile-qualified type.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO14dwarfProcedureyA2CmF":{"name":"dwarfProcedure","abstract":"<p>Identifies metadata for a DWARF procedure.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO12restrictTypeyA2CmF":{"name":"restrictType","abstract":"<p>Identifies metadata for a restrict-qualified type.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO13interfaceTypeyA2CmF":{"name":"interfaceType","abstract":"<p>Identifies metadata for a Java interface type.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO9namespaceyA2CmF":{"name":"namespace","abstract":"<p>Identifies metadata for a namespace.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO14importedModuleyA2CmF":{"name":"importedModule","abstract":"<p>Identifies metadata for an imported module.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO15unspecifiedTypeyA2CmF":{"name":"unspecifiedType","abstract":"<p>Identifies metadata for an unspecified type.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO11partialUnityA2CmF":{"name":"partialUnit","abstract":"<p>Identifies metadata for a portion of an object file.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO12importedUnityA2CmF":{"name":"importedUnit","abstract":"<p>Identifies metadata for an imported compilation unit.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO9conditionyA2CmF":{"name":"condition","abstract":"<p>Identifies metadata for a COBOL <q>level-88</q> condition that associates a","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO10sharedTypeyA2CmF":{"name":"sharedType","abstract":"<p>Identifies metadata for a UPC shared-qualified type.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO8typeUnityA2CmF":{"name":"typeUnit","abstract":"<p>Identifies metadata for a single type.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO19rvalueReferenceTypeyA2CmF":{"name":"rvalueReferenceType","abstract":"<p>Identifies metadata for an rvalue-reference-qualified type.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO13templateAliasyA2CmF":{"name":"templateAlias","abstract":"<p>Identifies metadata for a template alias.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO11coarrayTypeyA2CmF":{"name":"coarrayType","abstract":"<p>Identifies metadata for a Fortran <q>coarray</q> - an array whose elements","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO15genericSubrangeyA2CmF":{"name":"genericSubrange","abstract":"<p>Identifies metadata for a generic subrange.  This is useful for arrays of","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO11dynamicTypeyA2CmF":{"name":"dynamicType","abstract":"<p>Identifies metadata for a dynamic type.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO10atomicTypeyA2CmF":{"name":"atomicType","abstract":"<p>Identifies metadata for an atomic type.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO8callSiteyA2CmF":{"name":"callSite","abstract":"<p>Identifies metadata for a call site.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO17callSiteParameteryA2CmF":{"name":"callSiteParameter","abstract":"<p>Identifies metadata for a parameter at a call site.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO12skeletonUnityA2CmF":{"name":"skeletonUnit","abstract":"<p>Identifies metadata for the <q>skeleton</q> compilation unit in a split DWARF","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO13immutableTypeyA2CmF":{"name":"immutableType","abstract":"<p>Identifies metadata for an immutable type.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO8mipsLoopyA2CmF":{"name":"mipsLoop","abstract":"<p>Identifies metadata for a MIPS loop.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO11formatLabelyA2CmF":{"name":"formatLabel","abstract":"<p>Identifies metadata for a format label.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO16functionTemplateyA2CmF":{"name":"functionTemplate","abstract":"<p>Identifies metadata for a function template.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO13classTemplateyA2CmF":{"name":"classTemplate","abstract":"<p>Identifies metadata for a class template.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO011gnuTemplateD5ParamyA2CmF":{"name":"gnuTemplateTemplateParam","abstract":"<p>Identifies metadata for a template template parameter.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO24gnuTemplateParameterPackyA2CmF":{"name":"gnuTemplateParameterPack","abstract":"<p>Identifies metadata for a template parameter pack.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO22gnuFormalParameterPackyA2CmF":{"name":"gnuFormalParameterPack","abstract":"<p>Identifies metadata for a formal parameter pack.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO11gnuCallSiteyA2CmF":{"name":"gnuCallSite","abstract":"<p>Identifies metadata for a call site.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO20gnuCallSiteParameteryA2CmF":{"name":"gnuCallSiteParameter","abstract":"<p>Identifies metadata for a call site parameter.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO13applyPropertyyA2CmF":{"name":"applyProperty","abstract":"<p>Identifies metadata for an Objective-C property.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO15borlandPropertyyA2CmF":{"name":"borlandProperty","abstract":"<p>Identifies metadata for an Borland Delphi property.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO19borlandDelphiStringyA2CmF":{"name":"borlandDelphiString","abstract":"<p>Identifies metadata for an Borland Delphi property.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO25borlandDelphiDynamicArrayyA2CmF":{"name":"borlandDelphiDynamicArray","abstract":"<p>Identifies metadata for an Borland Delphi dynamic array.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO16borlandDelphiSetyA2CmF":{"name":"borlandDelphiSet","abstract":"<p>Identifies metadata for an Borland Delphi set.</p>","parent_name":"DWARFTag"},"Enums/DWARFTag.html#/s:4LLVM8DWARFTagO20borlandDelphiVariantyA2CmF":{"name":"borlandDelphiVariant","abstract":"<p>Identifies metadata for an Borland Delphi variant.</p>","parent_name":"DWARFTag"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO5ada83yA2CmF":{"name":"ada83","abstract":"<p>ISO Ada:1983</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO5ada95yA2CmF":{"name":"ada95","abstract":"<p>ISO Ada:1995</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO5blissyA2CmF":{"name":"bliss","abstract":"<p>BLISS</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO1cyA2CmF":{"name":"c","abstract":"<p>Non-standardized C, e.g. K&amp;R C.</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO3c89yA2CmF":{"name":"c89","abstract":"<p>ISO C:1989.</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO3c99yA2CmF":{"name":"c99","abstract":"<p>ISO C:1999.</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO3c11yA2CmF":{"name":"c11","abstract":"<p>ISO C:2011</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO05cPlusD0yA2CmF":{"name":"cPlusPlus","abstract":"<p>ISO C++90</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO11cPlusPlus03yA2CmF":{"name":"cPlusPlus03","abstract":"<p>ISO C++03</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO11cPlusPlus11yA2CmF":{"name":"cPlusPlus11","abstract":"<p>ISO C++11</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO11cPlusPlus14yA2CmF":{"name":"cPlusPlus14","abstract":"<p>ISO C++14</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO7cobol74yA2CmF":{"name":"cobol74","abstract":"<p>ISO COBOL:1974</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO7cobol85yA2CmF":{"name":"cobol85","abstract":"<p>ISO COBOL:1985</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO1dyA2CmF":{"name":"d","abstract":"<p>C</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO5dylanyA2CmF":{"name":"dylan","abstract":"<p>Dylan</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO9fortran77yA2CmF":{"name":"fortran77","abstract":"<p>ISO FORTRAN:1977</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO9fortran90yA2CmF":{"name":"fortran90","abstract":"<p>ISO Fortran:1990</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO9fortran95yA2CmF":{"name":"fortran95","abstract":"<p>ISO Fortran:1995</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO9fortran03yA2CmF":{"name":"fortran03","abstract":"<p>ISO Fortran:2004</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO9fortran08yA2CmF":{"name":"fortran08","abstract":"<p>ISO Fortran:2010</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO2goyA2CmF":{"name":"go","abstract":"<p>Go</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO7haskellyA2CmF":{"name":"haskell","abstract":"<p>Haskell</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO4javayA2CmF":{"name":"java","abstract":"<p>Java</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO5juliayA2CmF":{"name":"julia","abstract":"<p>Julia</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO7modula2yA2CmF":{"name":"modula2","abstract":"<p>ISO Modula-2:1996</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO7modula3yA2CmF":{"name":"modula3","abstract":"<p>Module-3</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO10objectiveCyA2CmF":{"name":"objectiveC","abstract":"<p>Objective-C</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO18objectiveCPlusPlusyA2CmF":{"name":"objectiveCPlusPlus","abstract":"<p>Objective-C++</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO5ocamlyA2CmF":{"name":"ocaml","abstract":"<p>OCaml</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO6openCLyA2CmF":{"name":"openCL","abstract":"<p>OpenCL</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO8pascal83yA2CmF":{"name":"pascal83","abstract":"<p>ISO Pascal:1983</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO3pliyA2CmF":{"name":"pli","abstract":"<p>ANSI PL/I:1976</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO6pythonyA2CmF":{"name":"python","abstract":"<p>Python</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO12renderScriptyA2CmF":{"name":"renderScript","abstract":"<p>RenderScript Kernel Language</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO4rustyA2CmF":{"name":"rust","abstract":"<p>Rust</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO5swiftyA2CmF":{"name":"swift","abstract":"<p>Swift</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO3upcyA2CmF":{"name":"upc","abstract":"<p>Unified Parallel C</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO13mipsAssembleryA2CmF":{"name":"mipsAssembler","abstract":"<p>MIPS Assembler</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO18googleRenderScriptyA2CmF":{"name":"googleRenderScript","abstract":"<p>Google RenderScript Kernel Language</p>","parent_name":"DWARFSourceLanguage"},"Enums/DWARFSourceLanguage.html#/s:4LLVM19DWARFSourceLanguageO13borlandDelphiyA2CmF":{"name":"borlandDelphi","abstract":"<p>Borland Delphi</p>","parent_name":"DWARFSourceLanguage"},"Enums/MemoryBufferError.html#/s:4LLVM17MemoryBufferErrorO14couldNotCreateyACSScACmF":{"name":"couldNotCreate(_:)","abstract":"<p>The MemoryBuffer failed to be initialized for a specific reason.</p>","parent_name":"MemoryBufferError"},"Enums/UnnamedAddressKind.html#/s:4LLVM18UnnamedAddressKindO4noneyA2CmF":{"name":"none","abstract":"<p>Indicates that the address of this global value is significant","parent_name":"UnnamedAddressKind"},"Enums/UnnamedAddressKind.html#/s:4LLVM18UnnamedAddressKindO5localyA2CmF":{"name":"local","abstract":"<p>Indicates that the address of this global value is not significant to the","parent_name":"UnnamedAddressKind"},"Enums/UnnamedAddressKind.html#/s:4LLVM18UnnamedAddressKindO6globalyA2CmF":{"name":"global","abstract":"<p>Indicates that the address of this global value is not significant to the","parent_name":"UnnamedAddressKind"},"Enums/StorageClass.html#/s:4LLVM12StorageClassO7defaultyA2CmF":{"name":"default","abstract":"<p>The default storage class for declarations is neither imported nor","parent_name":"StorageClass"},"Enums/StorageClass.html#/s:4LLVM12StorageClassO9dllImportyA2CmF":{"name":"dllImport","abstract":"<p>The storage class that guarantees the existence of a function in a DLL.  </p>","parent_name":"StorageClass"},"Enums/StorageClass.html#/s:4LLVM12StorageClassO9dllExportyA2CmF":{"name":"dllExport","abstract":"<p>The storage class for symbols that should be exposed outside of this DLL.</p>","parent_name":"StorageClass"},"Enums/StorageClass.html#/s:4LLVM12StorageClassO4llvmSo014LLVMDLLStorageC0avp":{"name":"llvm","abstract":"<p>Retrieves the corresponding <code>LLVMDLLStorageClass</code>.</p>","parent_name":"StorageClass"},"Enums/Linkage.html#/s:4LLVM7LinkageO8externalyA2CmF":{"name":"external","abstract":"<p>Externally visible function.  This is the default linkage.</p>","parent_name":"Linkage"},"Enums/Linkage.html#/s:4LLVM7LinkageO19availableExternallyyA2CmF":{"name":"availableExternally","abstract":"<p>Available for inspection, not emission.</p>","parent_name":"Linkage"},"Enums/Linkage.html#/s:4LLVM7LinkageO11linkOnceAnyyA2CmF":{"name":"linkOnceAny","abstract":"<p>Keep one copy of function when linking.</p>","parent_name":"Linkage"},"Enums/Linkage.html#/s:4LLVM7LinkageO11linkOnceODRyA2CmF":{"name":"linkOnceODR","abstract":"<p>Keep one copy of function when linking but enable inlining and","parent_name":"Linkage"},"Enums/Linkage.html#/s:4LLVM7LinkageO7weakAnyyA2CmF":{"name":"weakAny","abstract":"<p>Keep one copy of function when linking (weak).</p>","parent_name":"Linkage"},"Enums/Linkage.html#/s:4LLVM7LinkageO7weakODRyA2CmF":{"name":"weakODR","abstract":"<p>Keep one copy of function when linking but apply <q>One Definition Rule</q>","parent_name":"Linkage"},"Enums/Linkage.html#/s:4LLVM7LinkageO9appendingyA2CmF":{"name":"appending","abstract":"<p>Special purpose, only applies to global arrays.</p>","parent_name":"Linkage"},"Enums/Linkage.html#/s:4LLVM7LinkageO8internalyA2CmF":{"name":"internal","abstract":"<p>Rename collisions when linking (static functions).</p>","parent_name":"Linkage"},"Enums/Linkage.html#/s:4LLVM7LinkageO7privateyA2CmF":{"name":"private","abstract":"<p>Like <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/Linkage.html#/s:4LLVM7LinkageO8internalyA2CmF\">.internal</a></code>, but omit from symbol table.</p>","parent_name":"Linkage"},"Enums/Linkage.html#/s:4LLVM7LinkageO12externalWeakyA2CmF":{"name":"externalWeak","abstract":"<p>Keep one copy of the function when linking, but apply ELF semantics.</p>","parent_name":"Linkage"},"Enums/Linkage.html#/s:4LLVM7LinkageO6commonyA2CmF":{"name":"common","abstract":"<p>Tentative definitions.</p>","parent_name":"Linkage"},"Enums/Linkage.html#/s:4LLVM7LinkageO4llvmSo11LLVMLinkageavp":{"name":"llvm","abstract":"<p>Retrieves the corresponding <code>LLVMLinkage</code>.</p>","parent_name":"Linkage"},"Enums/Visibility.html#/s:4LLVM10VisibilityO7defaultyA2CmF":{"name":"default","abstract":"<p>On targets that use the ELF object file format, default visibility means","parent_name":"Visibility"},"Enums/Visibility.html#/s:4LLVM10VisibilityO6hiddenyA2CmF":{"name":"hidden","abstract":"<p>Two declarations of an object with hidden visibility refer to the same","parent_name":"Visibility"},"Enums/Visibility.html#/s:4LLVM10VisibilityO9protectedyA2CmF":{"name":"protected","abstract":"<p>On ELF, protected visibility indicates that the symbol will be placed in","parent_name":"Visibility"},"Enums/Visibility.html#/s:4LLVM10VisibilityO4llvmSo14LLVMVisibilityavp":{"name":"llvm","abstract":"<p>Retrieves the corresponding <code>LLVMLinkage</code>.</p>","parent_name":"Visibility"},"Enums/JITError.html#/s:4LLVM8JITErrorO7genericyACSScACmF":{"name":"generic(_:)","abstract":"<p>A generic error thrown by the JIT during exceptional circumstances.</p>","parent_name":"JITError"},"Enums/JITError.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"JITError"},"Enums/IRValueKind.html#/s:4LLVM11IRValueKindO8argumentyA2CmF":{"name":"argument","abstract":"<p>The value is an argument.</p>","parent_name":"IRValueKind"},"Enums/IRValueKind.html#/s:4LLVM11IRValueKindO10basicBlockyA2CmF":{"name":"basicBlock","abstract":"<p>The value is a basic block.</p>","parent_name":"IRValueKind"},"Enums/IRValueKind.html#/s:4LLVM11IRValueKindO9memoryUseyA2CmF":{"name":"memoryUse","abstract":"<p>The value is a memory use.</p>","parent_name":"IRValueKind"},"Enums/IRValueKind.html#/s:4LLVM11IRValueKindO9memoryDefyA2CmF":{"name":"memoryDef","abstract":"<p>The value is a memory definition.</p>","parent_name":"IRValueKind"},"Enums/IRValueKind.html#/s:4LLVM11IRValueKindO9memoryPhiyA2CmF":{"name":"memoryPhi","abstract":"<p>The value is a memory phi node.</p>","parent_name":"IRValueKind"},"Enums/IRValueKind.html#/s:4LLVM11IRValueKindO8functionyA2CmF":{"name":"function","abstract":"<p>The value is a function.</p>","parent_name":"IRValueKind"},"Enums/IRValueKind.html#/s:4LLVM11IRValueKindO11globalAliasyA2CmF":{"name":"globalAlias","abstract":"<p>The value is a global alias.</p>","parent_name":"IRValueKind"},"Enums/IRValueKind.html#/s:4LLVM11IRValueKindO11globalIFuncyA2CmF":{"name":"globalIFunc","abstract":"<p>The value is an ifunc.</p>","parent_name":"IRValueKind"},"Enums/IRValueKind.html#/s:4LLVM11IRValueKindO14globalVariableyA2CmF":{"name":"globalVariable","abstract":"<p>The value is a variable.</p>","parent_name":"IRValueKind"},"Enums/IRValueKind.html#/s:4LLVM11IRValueKindO12blockAddressyA2CmF":{"name":"blockAddress","abstract":"<p>The value is a block address.</p>","parent_name":"IRValueKind"},"Enums/IRValueKind.html#/s:4LLVM11IRValueKindO18constantExpressionyA2CmF":{"name":"constantExpression","abstract":"<p>The value is a constant expression.</p>","parent_name":"IRValueKind"},"Enums/IRValueKind.html#/s:4LLVM11IRValueKindO13constantArrayyA2CmF":{"name":"constantArray","abstract":"<p>The value is a constant array.</p>","parent_name":"IRValueKind"},"Enums/IRValueKind.html#/s:4LLVM11IRValueKindO14constantStructyA2CmF":{"name":"constantStruct","abstract":"<p>The value is a constant struct.</p>","parent_name":"IRValueKind"},"Enums/IRValueKind.html#/s:4LLVM11IRValueKindO14constantVectoryA2CmF":{"name":"constantVector","abstract":"<p>The value is a constant vector.</p>","parent_name":"IRValueKind"},"Enums/IRValueKind.html#/s:4LLVM11IRValueKindO5undefyA2CmF":{"name":"undef","abstract":"<p>The value is undef.</p>","parent_name":"IRValueKind"},"Enums/IRValueKind.html#/s:4LLVM11IRValueKindO21constantAggregateZeroyA2CmF":{"name":"constantAggregateZero","abstract":"<p>The value is a constant aggregate zero.</p>","parent_name":"IRValueKind"},"Enums/IRValueKind.html#/s:4LLVM11IRValueKindO17constantDataArrayyA2CmF":{"name":"constantDataArray","abstract":"<p>The value is a constant data array.</p>","parent_name":"IRValueKind"},"Enums/IRValueKind.html#/s:4LLVM11IRValueKindO18constantDataVectoryA2CmF":{"name":"constantDataVector","abstract":"<p>The value is a constant data vector.</p>","parent_name":"IRValueKind"},"Enums/IRValueKind.html#/s:4LLVM11IRValueKindO11constantIntyA2CmF":{"name":"constantInt","abstract":"<p>The value is a constant int value.</p>","parent_name":"IRValueKind"},"Enums/IRValueKind.html#/s:4LLVM11IRValueKindO13constantFloatyA2CmF":{"name":"constantFloat","abstract":"<p>The value is a constant floating pointer value.</p>","parent_name":"IRValueKind"},"Enums/IRValueKind.html#/s:4LLVM11IRValueKindO19constantPointerNullyA2CmF":{"name":"constantPointerNull","abstract":"<p>The value is a constant pointer to null.</p>","parent_name":"IRValueKind"},"Enums/IRValueKind.html#/s:4LLVM11IRValueKindO17constantTokenNoneyA2CmF":{"name":"constantTokenNone","abstract":"<p>The value is a constant none-token value.</p>","parent_name":"IRValueKind"},"Enums/IRValueKind.html#/s:4LLVM11IRValueKindO15metadataAsValueyA2CmF":{"name":"metadataAsValue","abstract":"<p>The value is a metadata-as-value node.</p>","parent_name":"IRValueKind"},"Enums/IRValueKind.html#/s:4LLVM11IRValueKindO9inlineASMyA2CmF":{"name":"inlineASM","abstract":"<p>The value is inline assembly.</p>","parent_name":"IRValueKind"},"Enums/IRValueKind.html#/s:4LLVM11IRValueKindO11instructionyA2CmF":{"name":"instruction","abstract":"<p>The value is an instruction.</p>","parent_name":"IRValueKind"},"Enums/IRMetadataKind.html#/s:4LLVM14IRMetadataKindO8mdStringyA2CmF":{"name":"mdString","abstract":"<p>The metadata is a string.</p>","parent_name":"IRMetadataKind"},"Enums/IRMetadataKind.html#/s:4LLVM14IRMetadataKindO18constantAsMetadatayA2CmF":{"name":"constantAsMetadata","abstract":"<p>The metadata is a constant-as-metadata node.</p>","parent_name":"IRMetadataKind"},"Enums/IRMetadataKind.html#/s:4LLVM14IRMetadataKindO15localAsMetadatayA2CmF":{"name":"localAsMetadata","abstract":"<p>The metadata is a local-as-metadata node.</p>","parent_name":"IRMetadataKind"},"Enums/IRMetadataKind.html#/s:4LLVM14IRMetadataKindO28distinctMDOperandPlaceholderyA2CmF":{"name":"distinctMDOperandPlaceholder","abstract":"<p>The metadata is a disctint metadata operand placeholder.</p>","parent_name":"IRMetadataKind"},"Enums/IRMetadataKind.html#/s:4LLVM14IRMetadataKindO7mdTupleyA2CmF":{"name":"mdTuple","abstract":"<p>The metadata is a tuple.</p>","parent_name":"IRMetadataKind"},"Enums/IRMetadataKind.html#/s:4LLVM14IRMetadataKindO8locationyA2CmF":{"name":"location","abstract":"<p>The metadata is a location.</p>","parent_name":"IRMetadataKind"},"Enums/IRMetadataKind.html#/s:4LLVM14IRMetadataKindO10expressionyA2CmF":{"name":"expression","abstract":"<p>The metadata is an expression.</p>","parent_name":"IRMetadataKind"},"Enums/IRMetadataKind.html#/s:4LLVM14IRMetadataKindO24globalVariableExpressionyA2CmF":{"name":"globalVariableExpression","abstract":"<p>The metadata is a global variable expression.</p>","parent_name":"IRMetadataKind"},"Enums/IRMetadataKind.html#/s:4LLVM14IRMetadataKindO13genericDINodeyA2CmF":{"name":"genericDINode","abstract":"<p>The metadata is a generic DI node.</p>","parent_name":"IRMetadataKind"},"Enums/IRMetadataKind.html#/s:4LLVM14IRMetadataKindO8subrangeyA2CmF":{"name":"subrange","abstract":"<p>The metadata is a subrange.</p>","parent_name":"IRMetadataKind"},"Enums/IRMetadataKind.html#/s:4LLVM14IRMetadataKindO10enumeratoryA2CmF":{"name":"enumerator","abstract":"<p>The metadata is an enumerator.</p>","parent_name":"IRMetadataKind"},"Enums/IRMetadataKind.html#/s:4LLVM14IRMetadataKindO9basicTypeyA2CmF":{"name":"basicType","abstract":"<p>The metadata is a basic type.</p>","parent_name":"IRMetadataKind"},"Enums/IRMetadataKind.html#/s:4LLVM14IRMetadataKindO11derivedTypeyA2CmF":{"name":"derivedType","abstract":"<p>The metadata is a derived type.</p>","parent_name":"IRMetadataKind"},"Enums/IRMetadataKind.html#/s:4LLVM14IRMetadataKindO13compositeTypeyA2CmF":{"name":"compositeType","abstract":"<p>The metadata is a composite type.</p>","parent_name":"IRMetadataKind"},"Enums/IRMetadataKind.html#/s:4LLVM14IRMetadataKindO14subroutineTypeyA2CmF":{"name":"subroutineType","abstract":"<p>The metadata is a subroutine type.</p>","parent_name":"IRMetadataKind"},"Enums/IRMetadataKind.html#/s:4LLVM14IRMetadataKindO4fileyA2CmF":{"name":"file","abstract":"<p>The metadata is a file.</p>","parent_name":"IRMetadataKind"},"Enums/IRMetadataKind.html#/s:4LLVM14IRMetadataKindO11compileUnityA2CmF":{"name":"compileUnit","abstract":"<p>The metadata is a compile unit.</p>","parent_name":"IRMetadataKind"},"Enums/IRMetadataKind.html#/s:4LLVM14IRMetadataKindO10subprogramyA2CmF":{"name":"subprogram","abstract":"<p>The metadata is a subprogram.</p>","parent_name":"IRMetadataKind"},"Enums/IRMetadataKind.html#/s:4LLVM14IRMetadataKindO12lexicalBlockyA2CmF":{"name":"lexicalBlock","abstract":"<p>The metadata is a lexical block.</p>","parent_name":"IRMetadataKind"},"Enums/IRMetadataKind.html#/s:4LLVM14IRMetadataKindO16lexicalBlockFileyA2CmF":{"name":"lexicalBlockFile","abstract":"<p>The metadata is a lexical block file.</p>","parent_name":"IRMetadataKind"},"Enums/IRMetadataKind.html#/s:4LLVM14IRMetadataKindO9namespaceyA2CmF":{"name":"namespace","abstract":"<p>The metadata is a namespace.</p>","parent_name":"IRMetadataKind"},"Enums/IRMetadataKind.html#/s:4LLVM14IRMetadataKindO6moduleyA2CmF":{"name":"module","abstract":"<p>The metadata is a module.</p>","parent_name":"IRMetadataKind"},"Enums/IRMetadataKind.html#/s:4LLVM14IRMetadataKindO21templateTypeParameteryA2CmF":{"name":"templateTypeParameter","abstract":"<p>The metadata is a template type parameter.</p>","parent_name":"IRMetadataKind"},"Enums/IRMetadataKind.html#/s:4LLVM14IRMetadataKindO22templateValueParameteryA2CmF":{"name":"templateValueParameter","abstract":"<p>The metadata is a template value parameter.</p>","parent_name":"IRMetadataKind"},"Enums/IRMetadataKind.html#/s:4LLVM14IRMetadataKindO14globalVariableyA2CmF":{"name":"globalVariable","abstract":"<p>The metadata is a global variable.</p>","parent_name":"IRMetadataKind"},"Enums/IRMetadataKind.html#/s:4LLVM14IRMetadataKindO13localVariableyA2CmF":{"name":"localVariable","abstract":"<p>The metadata is a local variable.</p>","parent_name":"IRMetadataKind"},"Enums/IRMetadataKind.html#/s:4LLVM14IRMetadataKindO5labelyA2CmF":{"name":"label","abstract":"<p>The metadata is a label.</p>","parent_name":"IRMetadataKind"},"Enums/IRMetadataKind.html#/s:4LLVM14IRMetadataKindO12objCPropertyyA2CmF":{"name":"objCProperty","abstract":"<p>The metadata is an Objective-C property.</p>","parent_name":"IRMetadataKind"},"Enums/IRMetadataKind.html#/s:4LLVM14IRMetadataKindO14importedEntityyA2CmF":{"name":"importedEntity","abstract":"<p>The metadata is an imported entity.</p>","parent_name":"IRMetadataKind"},"Enums/IRMetadataKind.html#/s:4LLVM14IRMetadataKindO5macroyA2CmF":{"name":"macro","abstract":"<p>The metadata is a macro.</p>","parent_name":"IRMetadataKind"},"Enums/IRMetadataKind.html#/s:4LLVM14IRMetadataKindO9macroFileyA2CmF":{"name":"macroFile","abstract":"<p>The metadata is a macro file.</p>","parent_name":"IRMetadataKind"},"Enums/ThreadLocalModel.html#/s:4LLVM16ThreadLocalModelO03notbC0yA2CmF":{"name":"notThreadLocal","abstract":"<p>The variable is not thread local and hence has no associated model.</p>","parent_name":"ThreadLocalModel"},"Enums/ThreadLocalModel.html#/s:4LLVM16ThreadLocalModelO14generalDynamicyA2CmF":{"name":"generalDynamic","abstract":"<p>Allows reference of all thread-local variables, from either a shared","parent_name":"ThreadLocalModel"},"Enums/ThreadLocalModel.html#/s:4LLVM16ThreadLocalModelO12localDynamicyA2CmF":{"name":"localDynamic","abstract":"<p>This model is an optimization of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/ThreadLocalModel.html#/s:4LLVM16ThreadLocalModelO14generalDynamicyA2CmF\">generalDynamic</a></code> model. The compiler","parent_name":"ThreadLocalModel"},"Enums/ThreadLocalModel.html#/s:4LLVM16ThreadLocalModelO11initialExecyA2CmF":{"name":"initialExec","abstract":"<p>This model can only reference thread-local variables which are available","parent_name":"ThreadLocalModel"},"Enums/ThreadLocalModel.html#/s:4LLVM16ThreadLocalModelO9localExecyA2CmF":{"name":"localExec","abstract":"<p>This model is an optimization of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/ThreadLocalModel.html#/s:4LLVM16ThreadLocalModelO12localDynamicyA2CmF\">localDynamic</a></code> model.</p>","parent_name":"ThreadLocalModel"},"Enums/ThreadLocalModel.html#/s:4LLVM16ThreadLocalModelO4llvmSo010LLVMThreadC4Modeavp":{"name":"llvm","abstract":"<p>Retrieves the corresponding <code>LLVMThreadLocalMode</code>.</p>","parent_name":"ThreadLocalModel"},"Enums/AttributeIndex.html#/s:4LLVM14AttributeIndexO8functionyA2CmF":{"name":"function","abstract":"<p>Represents the function itself.</p>","parent_name":"AttributeIndex"},"Enums/AttributeIndex.html#/s:4LLVM14AttributeIndexO11returnValueyA2CmF":{"name":"returnValue","abstract":"<p>Represents the function&rsquo;s return value.</p>","parent_name":"AttributeIndex"},"Enums/AttributeIndex.html#/s:4LLVM14AttributeIndexO8argumentyACSicACmF":{"name":"argument(_:)","abstract":"<p>Represents the function&rsquo;s i-th argument.</p>","parent_name":"AttributeIndex"},"Enums/AttributeIndex.html#/s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc":{"name":"init(integerLiteral:)","parent_name":"AttributeIndex"},"Enums/AttributeIndex.html#/s:SY8rawValuexSg03RawB0Qz_tcfc":{"name":"init(rawValue:)","parent_name":"AttributeIndex"},"Enums/AttributeIndex.html#/s:SY8rawValue03RawB0Qzvp":{"name":"rawValue","parent_name":"AttributeIndex"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO10alignstackyA2CmF":{"name":"alignstack","abstract":"<p>This attribute indicates that, when emitting the prologue and epilogue,","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO9allocsizeyA2CmF":{"name":"allocsize","abstract":"<p>This attribute indicates that the annotated function will always return","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO12alwaysinlineyA2CmF":{"name":"alwaysinline","abstract":"<p>This attribute indicates that the inliner should attempt to inline this","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO7builtinyA2CmF":{"name":"builtin","abstract":"<p>This indicates that the callee function at a call site should be","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO4coldyA2CmF":{"name":"cold","abstract":"<p>This attribute indicates that this function is rarely called.</p>","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO10convergentyA2CmF":{"name":"convergent","abstract":"<p>In some parallel execution models, there exist operations that cannot be","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO19inaccessiblememonlyyA2CmF":{"name":"inaccessiblememonly","abstract":"<p>This attribute indicates that the function may only access memory that is","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO27inaccessiblememOrArgmemonlyyA2CmF":{"name":"inaccessiblememOrArgmemonly","abstract":"<p>This attribute indicates that the function may only access memory that is","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO10inlinehintyA2CmF":{"name":"inlinehint","abstract":"<p>This attribute indicates that the source code contained a hint that inlin","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO9jumptableyA2CmF":{"name":"jumptable","abstract":"<p>This attribute indicates that the function should be added to a","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO7minsizeyA2CmF":{"name":"minsize","abstract":"<p>This attribute suggests that optimization passes and code generator","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO5nakedyA2CmF":{"name":"naked","abstract":"<p>This attribute disables prologue / epilogue emission for the function.</p>","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO12noJumpTablesyA2CmF":{"name":"noJumpTables","abstract":"<p>When this attribute is set to true, the jump tables and lookup tables","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO9nobuiltinyA2CmF":{"name":"nobuiltin","abstract":"<p>This indicates that the callee function at a call site is not recognized","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO11noduplicateyA2CmF":{"name":"noduplicate","abstract":"<p>This attribute indicates that calls to the function cannot be duplicated.</p>","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO15noimplicitfloatyA2CmF":{"name":"noimplicitfloat","abstract":"<p>This attributes disables implicit floating point instructions.</p>","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO8noinlineyA2CmF":{"name":"noinline","abstract":"<p>This attribute indicates that the inliner should never inline this","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO11nonlazybindyA2CmF":{"name":"nonlazybind","abstract":"<p>This attribute suppresses lazy symbol binding for the function.</p>","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO9noredzoneyA2CmF":{"name":"noredzone","abstract":"<p>This attribute indicates that the code generator should not use a red","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO8noreturnyA2CmF":{"name":"noreturn","abstract":"<p>This function attribute indicates that the function never returns","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO9norecurseyA2CmF":{"name":"norecurse","abstract":"<p>This function attribute indicates that the function does not call itself","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO8nounwindyA2CmF":{"name":"nounwind","abstract":"<p>This function attribute indicates that the function never raises an","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO7optnoneyA2CmF":{"name":"optnone","abstract":"<p>This function attribute indicates that most optimization passes will skip","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO7optsizeyA2CmF":{"name":"optsize","abstract":"<p>This attribute suggests that optimization passes and code generator","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO8readnoneyA2CmF":{"name":"readnone","abstract":"<p>This attribute indicates that the function computes its result (or","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO8readonlyyA2CmF":{"name":"readonly","abstract":"<p>This attribute indicates that the function does not write through any","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO9writeonlyyA2CmF":{"name":"writeonly","abstract":"<p>This attribute indicates that the function may write to but does not read","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO10argmemonlyyA2CmF":{"name":"argmemonly","abstract":"<p>This attribute indicates that the only memory accesses inside function","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO12returnsTwiceyA2CmF":{"name":"returnsTwice","abstract":"<p>This attribute indicates that this function can return twice.</p>","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO9safestackyA2CmF":{"name":"safestack","abstract":"<p>This attribute indicates that SafeStack protection is enabled for this","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO15sanitizeAddressyA2CmF":{"name":"sanitizeAddress","abstract":"<p>This attribute indicates that AddressSanitizer checks (dynamic address","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO14sanitizeMemoryyA2CmF":{"name":"sanitizeMemory","abstract":"<p>This attribute indicates that MemorySanitizer checks (dynamic detection","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO14sanitizeThreadyA2CmF":{"name":"sanitizeThread","abstract":"<p>This attribute indicates that ThreadSanitizer checks (dynamic thread","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO17sanitizeHWAddressyA2CmF":{"name":"sanitizeHWAddress","abstract":"<p>This attribute indicates that HWAddressSanitizer checks (dynamic address","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO12speculatableyA2CmF":{"name":"speculatable","abstract":"<p>This function attribute indicates that the function does not have any","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO3sspyA2CmF":{"name":"ssp","abstract":"<p>This attribute indicates that the function should emit a stack smashing","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO6sspreqyA2CmF":{"name":"sspreq","abstract":"<p>This attribute indicates that the function should always emit a stack","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO9sspstrongyA2CmF":{"name":"sspstrong","abstract":"<p>This attribute indicates that the function should emit a stack smashing","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO8strictfpyA2CmF":{"name":"strictfp","abstract":"<p>This attribute indicates that the function was called from a scope that","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO7uwtableyA2CmF":{"name":"uwtable","abstract":"<p>This attribute indicates that the ABI being targeted requires that an","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO7zeroextyA2CmF":{"name":"zeroext","abstract":"<p>This indicates to the code generator that the parameter or return value","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO7signextyA2CmF":{"name":"signext","abstract":"<p>This indicates to the code generator that the parameter or return value","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO5inregyA2CmF":{"name":"inreg","abstract":"<p>This indicates that this parameter or return value should be treated in a","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO5byvalyA2CmF":{"name":"byval","abstract":"<p>This indicates that the pointer parameter should really be passed by","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO8inallocayA2CmF":{"name":"inalloca","abstract":"<p>The inalloca argument attribute allows the caller to take the address of","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO4sretyA2CmF":{"name":"sret","abstract":"<p>This indicates that the pointer parameter specifies the address of a","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO5alignyA2CmF":{"name":"align","abstract":"<p>This indicates that the pointer value may be assumed by the optimizer to","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO7noaliasyA2CmF":{"name":"noalias","abstract":"<p>This indicates that objects accessed via pointer values based on the","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO9nocaptureyA2CmF":{"name":"nocapture","abstract":"<p>This indicates that the callee does not make any copies of the pointer","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO4nestyA2CmF":{"name":"nest","abstract":"<p>This indicates that the pointer parameter can be excised using the","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO8returnedyA2CmF":{"name":"returned","abstract":"<p>This indicates that the function always returns the argument as its","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO7nonnullyA2CmF":{"name":"nonnull","abstract":"<p>This indicates that the parameter or return pointer is not null.</p>","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO15dereferenceableyA2CmF":{"name":"dereferenceable","abstract":"<p>This indicates that the parameter or return pointer is dereferenceable.</p>","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO21dereferenceableOrNullyA2CmF":{"name":"dereferenceableOrNull","abstract":"<p>This indicates that the parameter or return value isn’t both non-null and","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO9swiftselfyA2CmF":{"name":"swiftself","abstract":"<p>This indicates that the parameter is the self/context parameter.</p>","parent_name":"AttributeKind"},"Enums/AttributeKind.html#/s:4LLVM13AttributeKindO10swifterroryA2CmF":{"name":"swifterror","abstract":"<p>This attribute is motivated to model and optimize Swift error handling.</p>","parent_name":"AttributeKind"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO4addryACs6UInt64VcACmF":{"name":"addr(_:)","abstract":"<p>Encodes a single machine address value whose size is the size of an","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO4lit0yA2CmF":{"name":"lit0","abstract":"<p>Encodes the unsigned literal value 0.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO4lit1yA2CmF":{"name":"lit1","abstract":"<p>Encodes the unsigned literal value 1.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO4lit2yA2CmF":{"name":"lit2","abstract":"<p>Encodes the unsigned literal value 2.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO4lit3yA2CmF":{"name":"lit3","abstract":"<p>Encodes the unsigned literal value 3.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO4lit4yA2CmF":{"name":"lit4","abstract":"<p>Encodes the unsigned literal value 4.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO4lit5yA2CmF":{"name":"lit5","abstract":"<p>Encodes the unsigned literal value 5.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO4lit6yA2CmF":{"name":"lit6","abstract":"<p>Encodes the unsigned literal value 6.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO4lit7yA2CmF":{"name":"lit7","abstract":"<p>Encodes the unsigned literal value 7.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO4lit8yA2CmF":{"name":"lit8","abstract":"<p>Encodes the unsigned literal value 8.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO4lit9yA2CmF":{"name":"lit9","abstract":"<p>Encodes the unsigned literal value 9.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5lit10yA2CmF":{"name":"lit10","abstract":"<p>Encodes the unsigned literal value 10.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5lit11yA2CmF":{"name":"lit11","abstract":"<p>Encodes the unsigned literal value 11.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5lit12yA2CmF":{"name":"lit12","abstract":"<p>Encodes the unsigned literal value 12.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5lit13yA2CmF":{"name":"lit13","abstract":"<p>Encodes the unsigned literal value 13.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5lit14yA2CmF":{"name":"lit14","abstract":"<p>Encodes the unsigned literal value 14.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5lit15yA2CmF":{"name":"lit15","abstract":"<p>Encodes the unsigned literal value 15.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5lit16yA2CmF":{"name":"lit16","abstract":"<p>Encodes the unsigned literal value 16.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5lit17yA2CmF":{"name":"lit17","abstract":"<p>Encodes the unsigned literal value 17.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5lit18yA2CmF":{"name":"lit18","abstract":"<p>Encodes the unsigned literal value 18.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5lit19yA2CmF":{"name":"lit19","abstract":"<p>Encodes the unsigned literal value 19.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5lit20yA2CmF":{"name":"lit20","abstract":"<p>Encodes the unsigned literal value 20.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5lit21yA2CmF":{"name":"lit21","abstract":"<p>Encodes the unsigned literal value 21.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5lit22yA2CmF":{"name":"lit22","abstract":"<p>Encodes the unsigned literal value 22.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5lit23yA2CmF":{"name":"lit23","abstract":"<p>Encodes the unsigned literal value 23.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5lit24yA2CmF":{"name":"lit24","abstract":"<p>Encodes the unsigned literal value 24.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5lit25yA2CmF":{"name":"lit25","abstract":"<p>Encodes the unsigned literal value 25.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5lit26yA2CmF":{"name":"lit26","abstract":"<p>Encodes the unsigned literal value 26.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5lit27yA2CmF":{"name":"lit27","abstract":"<p>Encodes the unsigned literal value 27.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5lit28yA2CmF":{"name":"lit28","abstract":"<p>Encodes the unsigned literal value 28.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5lit29yA2CmF":{"name":"lit29","abstract":"<p>Encodes the unsigned literal value 29.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5lit30yA2CmF":{"name":"lit30","abstract":"<p>Encodes the unsigned literal value 30.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5lit31yA2CmF":{"name":"lit31","abstract":"<p>Encodes the unsigned literal value 31.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO7const1uyACs5UInt8VcACmF":{"name":"const1u(_:)","abstract":"<p>Encodes a 1-byte unsigned integer constant.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO7const1syACs4Int8VcACmF":{"name":"const1s(_:)","abstract":"<p>Encodes a 1-byte signed integer constant.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO7const2uyACs6UInt16VcACmF":{"name":"const2u(_:)","abstract":"<p>Encodes a 2-byte unsigned integer constant.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO7const2syACs5Int16VcACmF":{"name":"const2s(_:)","abstract":"<p>Encodes a 2-byte signed integer constant.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO7const4uyACs6UInt32VcACmF":{"name":"const4u(_:)","abstract":"<p>Encodes a 4-byte unsigned integer constant.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO7const4syACs5Int32VcACmF":{"name":"const4s(_:)","abstract":"<p>Encodes a 4-byte signed integer constant.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO7const8uyACs6UInt64VcACmF":{"name":"const8u(_:)","abstract":"<p>Encodes a 8-byte unsigned integer constant.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO7const8syACs5Int64VcACmF":{"name":"const8s(_:)","abstract":"<p>Encodes a 8-byte signed integer constant.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO6constuyACs6UInt64VcACmF":{"name":"constu(_:)","abstract":"<p>Encodes a little-endian base-128 unsigned integer constant.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO6constsyACs5Int64VcACmF":{"name":"consts(_:)","abstract":"<p>Encodes a little-endian base-128 signed integer constant.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5addrxyACs6UInt64VcACmF":{"name":"addrx(_:)","abstract":"<p>Encodes an unsigned little-endian base-128 value, which is a zero-based","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO6constxyACs6UInt64VcACmF":{"name":"constx(_:)","abstract":"<p>Encodes an unsigned little-endian base-128 value, which is a zero-based","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5fbregyACs5Int64VcACmF":{"name":"fbreg(_:)","abstract":"<p>Provides a signeed little-endian base-128 offset from the address","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5breg0yACs5Int64VcACmF":{"name":"breg0(_:)","abstract":"<p>The single operand of the breg operation provides a signed little-endian","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5breg1yACs5Int64VcACmF":{"name":"breg1(_:)","abstract":"<p>The single operand of the breg operation provides a signed little-endian","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5breg2yACs5Int64VcACmF":{"name":"breg2(_:)","abstract":"<p>The single operand of the breg operation provides a signed little-endian","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5breg3yACs5Int64VcACmF":{"name":"breg3(_:)","abstract":"<p>The single operand of the breg operation provides a signed little-endian","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5breg4yACs5Int64VcACmF":{"name":"breg4(_:)","abstract":"<p>The single operand of the breg operation provides a signed little-endian","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5breg5yACs5Int64VcACmF":{"name":"breg5(_:)","abstract":"<p>The single operand of the breg operation provides a signed little-endian","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5breg6yACs5Int64VcACmF":{"name":"breg6(_:)","abstract":"<p>The single operand of the breg operation provides a signed little-endian","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5breg7yACs5Int64VcACmF":{"name":"breg7(_:)","abstract":"<p>The single operand of the breg operation provides a signed little-endian","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5breg8yACs5Int64VcACmF":{"name":"breg8(_:)","abstract":"<p>The single operand of the breg operation provides a signed little-endian","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5breg9yACs5Int64VcACmF":{"name":"breg9(_:)","abstract":"<p>The single operand of the breg operation provides a signed little-endian","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO6breg10yACs5Int64VcACmF":{"name":"breg10(_:)","abstract":"<p>The single operand of the breg operation provides a signed little-endian","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO6breg11yACs5Int64VcACmF":{"name":"breg11(_:)","abstract":"<p>The single operand of the breg operation provides a signed little-endian","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO6breg12yACs5Int64VcACmF":{"name":"breg12(_:)","abstract":"<p>The single operand of the breg operation provides a signed little-endian","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO6breg13yACs5Int64VcACmF":{"name":"breg13(_:)","abstract":"<p>The single operand of the breg operation provides a signed little-endian","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO6breg14yACs5Int64VcACmF":{"name":"breg14(_:)","abstract":"<p>The single operand of the breg operation provides a signed little-endian","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO6breg15yACs5Int64VcACmF":{"name":"breg15(_:)","abstract":"<p>The single operand of the breg operation provides a signed little-endian","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO6breg16yACs5Int64VcACmF":{"name":"breg16(_:)","abstract":"<p>The single operand of the breg operation provides a signed little-endian","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO6breg17yACs5Int64VcACmF":{"name":"breg17(_:)","abstract":"<p>The single operand of the breg operation provides a signed little-endian","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO6breg18yACs5Int64VcACmF":{"name":"breg18(_:)","abstract":"<p>The single operand of the breg operation provides a signed little-endian","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO6breg19yACs5Int64VcACmF":{"name":"breg19(_:)","abstract":"<p>The single operand of the breg operation provides a signed little-endian","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO6breg20yACs5Int64VcACmF":{"name":"breg20(_:)","abstract":"<p>The single operand of the breg operation provides a signed little-endian","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO6breg21yACs5Int64VcACmF":{"name":"breg21(_:)","abstract":"<p>The single operand of the breg operation provides a signed little-endian","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO6breg22yACs5Int64VcACmF":{"name":"breg22(_:)","abstract":"<p>The single operand of the breg operation provides a signed little-endian","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO6breg23yACs5Int64VcACmF":{"name":"breg23(_:)","abstract":"<p>The single operand of the breg operation provides a signed little-endian","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO6breg24yACs5Int64VcACmF":{"name":"breg24(_:)","abstract":"<p>The single operand of the breg operation provides a signed little-endian","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO6breg25yACs5Int64VcACmF":{"name":"breg25(_:)","abstract":"<p>The single operand of the breg operation provides a signed little-endian","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO6breg26yACs5Int64VcACmF":{"name":"breg26(_:)","abstract":"<p>The single operand of the breg operation provides a signed little-endian","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO6breg27yACs5Int64VcACmF":{"name":"breg27(_:)","abstract":"<p>The single operand of the breg operation provides a signed little-endian","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO6breg28yACs5Int64VcACmF":{"name":"breg28(_:)","abstract":"<p>The single operand of the breg operation provides a signed little-endian","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO6breg29yACs5Int64VcACmF":{"name":"breg29(_:)","abstract":"<p>The single operand of the breg operation provides a signed little-endian","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO6breg30yACs5Int64VcACmF":{"name":"breg30(_:)","abstract":"<p>The single operand of the breg operation provides a signed little-endian","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO6breg31yACs5Int64VcACmF":{"name":"breg31(_:)","abstract":"<p>The single operand of the breg operation provides a signed little-endian","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5bregxyACs6UInt64V_s5Int64VtcACmF":{"name":"bregx(_:_:)","abstract":"<p>Provides the sum of two values specified by its two operands.  The first","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO9constTypeyAcA011DIAttributeD8EncodingO_s5UInt8VSayAHGtcACmF":{"name":"constType(_:_:_:)","abstract":"<p>Provides an operation with three operands: The first is an unsigned","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO10regvalTypeyACs6UInt64V_AA011DIAttributeD8EncodingOtcACmF":{"name":"regvalType(_:_:)","abstract":"<p>Provides the contents of a given register interpreted as a value of a","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO3dupyA2CmF":{"name":"dup","abstract":"<p>Duplicates the value (including its type identifier) at the top of the","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO4dropyA2CmF":{"name":"drop","abstract":"<p>Pops the value (including its type identifier) at the top of the stack.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO4pickyACs5UInt8VcACmF":{"name":"pick(_:)","abstract":"<p>Provides a 1-byte index that is used to index into the stack.  A copy of","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO4overyA2CmF":{"name":"over","abstract":"<p>Duplicates the entry currently second in the stack and pushes it onto the","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO4swapyA2CmF":{"name":"swap","abstract":"<p>Swaps the top two stack entries.  The entry at the top of the stack","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO3rotyA2CmF":{"name":"rot","abstract":"<p>Rotates the first three stack entries.  The entry at the top of the stack","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5derefyA2CmF":{"name":"deref","abstract":"<p>Pops the top stack entry and treats it as an address.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO9derefSizeyACs5UInt8VcACmF":{"name":"derefSize(_:)","abstract":"<p>Pops the top stack entry and treats it as an address.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO9derefTypeyACs5UInt8V_s6UInt64VtcACmF":{"name":"derefType(_:_:)","abstract":"<p>Pops the top stack entry and treats it as an address.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO6xderefyA2CmF":{"name":"xderef","abstract":"<p>Provides an extended dereference mechanism.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO10xderefSizeyACs5UInt8VcACmF":{"name":"xderefSize(_:)","abstract":"<p>Provides an extended dereference mechanism.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO10xderefTypeyACs5UInt8V_s6UInt64VtcACmF":{"name":"xderefType(_:_:)","abstract":"<p>Pops the top two stack entries, treats them as an address and an address","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO17pushObjectAddressyA2CmF":{"name":"pushObjectAddress","abstract":"<p>Pushes the address of the object currently being evaluated as part of","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO14formTLSAddressyA2CmF":{"name":"formTLSAddress","abstract":"<p>Pops a value from the stack, which must have an integral type identifier,","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO12callFrameCFAyA2CmF":{"name":"callFrameCFA","abstract":"<p>Pushes the value of the Canonical Frame Address (CFA), obtained from the","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO3absyA2CmF":{"name":"abs","abstract":"<p>Pops the top stack entry, interprets it as a signed value and pushes its","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO3andyA2CmF":{"name":"and","abstract":"<p>Pops the top two stack values, performs a bitwise and operation on the","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO3divyA2CmF":{"name":"div","abstract":"<p>Pops the top two stack values, divides the former second entry by the","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5minusyA2CmF":{"name":"minus","abstract":"<p>Pops the top two stack values, subtracts the former second entry by the","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO3modyA2CmF":{"name":"mod","abstract":"<p>Pops the top two stack values, performs a modulo operation on the","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO3mulyA2CmF":{"name":"mul","abstract":"<p>Pops the top two stack values, multiplies the former second entry by the","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO3negyA2CmF":{"name":"neg","abstract":"<p>Pops the top stack entry, interprets it as a signed value, and pushes its","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO3notyA2CmF":{"name":"not","abstract":"<p>Pops the top stack entry, and pushes its bitwise complement.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO2oryA2CmF":{"name":"or","abstract":"<p>Pops the top two stack entries, performs a bitwise or operation on the","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO4plusyA2CmF":{"name":"plus","abstract":"<p>Pops the top two stack entries, adds them together, and pushes the result.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO11plus_uconstyACs6UInt64VcACmF":{"name":"plus_uconst(_:)","abstract":"<p>Pops the top stack entry, adds it to the unsigned little-endian base-128","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO3shlyA2CmF":{"name":"shl","abstract":"<p>Pops the top twoo stack entries, shifts the former second entry left","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO3shryA2CmF":{"name":"shr","abstract":"<p>Pops the top two stack entries, shifts the former second entry right","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO4shrayA2CmF":{"name":"shra","abstract":"<p>Pops the top two stack entries, shifts the former second entry right","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO3xoryA2CmF":{"name":"xor","abstract":"<p>Pops the top two stack entries, performs a bitwise exclusive-or operation","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO2eqyA2CmF":{"name":"eq","abstract":"<p>Pops the top two stack values, which must have the same type, either","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO2geyA2CmF":{"name":"ge","abstract":"<p>Pops the top two stack values, which must have the same type, either","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO2gtyA2CmF":{"name":"gt","abstract":"<p>Pops the top two stack values, which must have the same type, either","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO2leyA2CmF":{"name":"le","abstract":"<p>Pops the top two stack values, which must have the same type, either","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO2ltyA2CmF":{"name":"lt","abstract":"<p>Pops the top two stack values, which must have the same type, either","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO2neyA2CmF":{"name":"ne","abstract":"<p>Pops the top two stack values, which must have the same type, either","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO4skipyACs5Int16VcACmF":{"name":"skip(_:)","abstract":"<p>Unconditionally branches forward or backward by the number of bytes","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO3brayACs5Int16VcACmF":{"name":"bra(_:)","abstract":"<p>Conditionally branches forward or backward by the number of bytes","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5call2yACs6UInt16VcACmF":{"name":"call2(_:)","abstract":"<p>Performs a DWARF procedure call during the evaluation of a DWARF","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5call4yACs6UInt32VcACmF":{"name":"call4(_:)","abstract":"<p>Performs a DWARF procedure call during the evaluation of a DWARF","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO7callRefyACs6UInt64VcACmF":{"name":"callRef(_:)","abstract":"<p>Performs a DWARF procedure call during the evaluation of a DWARF","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO7convertyACs6UInt64VcACmF":{"name":"convert(_:)","abstract":"<p>Pops the top stack entry, converts it to a different type, then pushes the","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO11reinterpretyACs6UInt64VcACmF":{"name":"reinterpret(_:)","abstract":"<p>Pops the top stack entry, reinterprets the bits in its value as a value of","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO3nopyA2CmF":{"name":"nop","abstract":"<p>This operation has no effect on the location stack or any of its values.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO10entryValueyACs6UInt64V_ACtcACmF":{"name":"entryValue(_:_:)","abstract":"<p>Pushes the value that the described location held upon entering the","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO4reg0yA2CmF":{"name":"reg0","abstract":"<p>Encodes the name of the register numbered 0.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO4reg1yA2CmF":{"name":"reg1","abstract":"<p>Encodes the name of the register numbered 1.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO4reg2yA2CmF":{"name":"reg2","abstract":"<p>Encodes the name of the register numbered 2.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO4reg3yA2CmF":{"name":"reg3","abstract":"<p>Encodes the name of the register numbered 3.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO4reg4yA2CmF":{"name":"reg4","abstract":"<p>Encodes the name of the register numbered 4.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO4reg5yA2CmF":{"name":"reg5","abstract":"<p>Encodes the name of the register numbered 5.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO4reg6yA2CmF":{"name":"reg6","abstract":"<p>Encodes the name of the register numbered 6.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO4reg7yA2CmF":{"name":"reg7","abstract":"<p>Encodes the name of the register numbered 7.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO4reg8yA2CmF":{"name":"reg8","abstract":"<p>Encodes the name of the register numbered 8.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO4reg9yA2CmF":{"name":"reg9","abstract":"<p>Encodes the name of the register numbered 9.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5reg10yA2CmF":{"name":"reg10","abstract":"<p>Encodes the name of the register numbered 10.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5reg11yA2CmF":{"name":"reg11","abstract":"<p>Encodes the name of the register numbered 11.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5reg12yA2CmF":{"name":"reg12","abstract":"<p>Encodes the name of the register numbered 12.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5reg13yA2CmF":{"name":"reg13","abstract":"<p>Encodes the name of the register numbered 13.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5reg14yA2CmF":{"name":"reg14","abstract":"<p>Encodes the name of the register numbered 14.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5reg15yA2CmF":{"name":"reg15","abstract":"<p>Encodes the name of the register numbered 15.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5reg16yA2CmF":{"name":"reg16","abstract":"<p>Encodes the name of the register numbered 16.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5reg17yA2CmF":{"name":"reg17","abstract":"<p>Encodes the name of the register numbered 17.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5reg18yA2CmF":{"name":"reg18","abstract":"<p>Encodes the name of the register numbered 18.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5reg19yA2CmF":{"name":"reg19","abstract":"<p>Encodes the name of the register numbered 19.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5reg20yA2CmF":{"name":"reg20","abstract":"<p>Encodes the name of the register numbered 20.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5reg21yA2CmF":{"name":"reg21","abstract":"<p>Encodes the name of the register numbered 21.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5reg22yA2CmF":{"name":"reg22","abstract":"<p>Encodes the name of the register numbered 22.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5reg23yA2CmF":{"name":"reg23","abstract":"<p>Encodes the name of the register numbered 23.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5reg24yA2CmF":{"name":"reg24","abstract":"<p>Encodes the name of the register numbered 24.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5reg25yA2CmF":{"name":"reg25","abstract":"<p>Encodes the name of the register numbered 25.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5reg26yA2CmF":{"name":"reg26","abstract":"<p>Encodes the name of the register numbered 26.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5reg27yA2CmF":{"name":"reg27","abstract":"<p>Encodes the name of the register numbered 27.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5reg28yA2CmF":{"name":"reg28","abstract":"<p>Encodes the name of the register numbered 28.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5reg29yA2CmF":{"name":"reg29","abstract":"<p>Encodes the name of the register numbered 29.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5reg30yA2CmF":{"name":"reg30","abstract":"<p>Encodes the name of the register numbered 30.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5reg31yA2CmF":{"name":"reg31","abstract":"<p>Encodes the name of the register numbered 31.</p>","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO4regxyACs6UInt64VcACmF":{"name":"regx(_:)","abstract":"<p>Contains a single unsigned little-endian base-128 literal operand that","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO13implicitValueyACs6UInt64V_Says5UInt8VGtcACmF":{"name":"implicitValue(_:_:)","abstract":"<p>Specifies an immediate value using two operands: an unsigned little-endian","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO10stackValueyA2CmF":{"name":"stackValue","abstract":"<p>Specifies that the object does not exist in memory, but its value is","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO5pieceyACs6UInt64VcACmF":{"name":"piece(_:)","abstract":"<p>Takes a single operand in little-endian base-128 form.  This operand","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO8bitPieceyACs6UInt64V_AFtcACmF":{"name":"bitPiece(_:_:)","abstract":"<p>Takes two operands, an unsigned little-endian base-128 form number that","parent_name":"DWARFExpression"},"Enums/DWARFExpression.html#/s:4LLVM15DWARFExpressionO15implicitPointeryACs6UInt64V_s5Int64VtcACmF":{"name":"implicitPointer(_:_:)","abstract":"<p>Specifies that the object is a pointer that cannot be represented as a","parent_name":"DWARFExpression"},"Enums/LandingPadClause.html#/s:4LLVM16LandingPadClauseO5catchyAcA8IRGlobal_pcACmF":{"name":"catch(_:)","abstract":"<p>This clause means that the landingpad block should be entered if the","parent_name":"LandingPadClause"},"Enums/LandingPadClause.html#/s:4LLVM16LandingPadClauseO6filteryAcA6IRType_p_SayAA8IRGlobal_pGtcACmF":{"name":"filter(_:_:)","abstract":"<p>This clause means that the landing pad should be entered if the exception","parent_name":"LandingPadClause"},"Enums/LandingPadClause.html#/s:4LLVM7IRValueP02asA0s13OpaquePointerVyF":{"name":"asLLVM()","parent_name":"LandingPadClause"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO1cyA2CmF":{"name":"c","abstract":"<p>The default LLVM calling convention, compatible with C.</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO4fastyA2CmF":{"name":"fast","abstract":"<p>This calling convention attempts to make calls as fast as possible","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO4coldyA2CmF":{"name":"cold","abstract":"<p>This calling convention attempts to make code in the caller as","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO3ghcyA2CmF":{"name":"ghc","abstract":"<p>This calling convention has been implemented specifically for use by","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO4hiPEyA2CmF":{"name":"hiPE","abstract":"<p>This calling convention has been implemented specifically for use by","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO8webKitJSyA2CmF":{"name":"webKitJS","abstract":"<p>This calling convention has been implemented for WebKit FTL JIT. It passes","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO6anyRegyA2CmF":{"name":"anyReg","abstract":"<p>Calling convention for dynamic register based calls","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO12preserveMostyA2CmF":{"name":"preserveMost","abstract":"<p>Calling convention for runtime calls that preserves most registers.</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO11preserveAllyA2CmF":{"name":"preserveAll","abstract":"<p>This calling convention attempts to make the code in the caller even less","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO5swiftyA2CmF":{"name":"swift","abstract":"<p>Calling convention for Swift.</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO25cxxFastThreadLocalStorageyA2CmF":{"name":"cxxFastThreadLocalStorage","abstract":"<p>The calling convention for accessors to C++-style thread-local storage.</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO15x86StandardCallyA2CmF":{"name":"x86StandardCall","abstract":"<p>The calling conventions mostly used by the Win32 API.</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO11x86FastCallyA2CmF":{"name":"x86FastCall","abstract":"<p><q>Fast</q> analog of <code>x86Stdcall</code>.</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO7armAPCSyA2CmF":{"name":"armAPCS","abstract":"<p>Short for <q>ARM Procedure Calling Standard</q> calling convention (obsolete,","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO8armAAPCSyA2CmF":{"name":"armAAPCS","abstract":"<p>Short for <q>ARM Architecture Procedure Calling Standard</q> calling","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO11armAAPCSVFPyA2CmF":{"name":"armAAPCSVFP","abstract":"<p>Same as <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/CallingConvention.html#/s:4LLVM17CallingConventionO8armAAPCSyA2CmF\">armAAPCS</a></code>, but uses hardware floating point ABI.  On","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO15msp430InterruptyA2CmF":{"name":"msp430Interrupt","abstract":"<p>Calling convention used for MSP430 interrupt service routines (ISRs).</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO11x86ThisCallyA2CmF":{"name":"x86ThisCall","abstract":"<p>Similar to <code>x86Stdcall</code>.</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO17ptxKernelFunctionyA2CmF":{"name":"ptxKernelFunction","abstract":"<p>Calling convention for Parallel Thread Execution (PTX) kernel functions.</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO17ptxDeviceFunctionyA2CmF":{"name":"ptxDeviceFunction","abstract":"<p>Calling convention for Parallel Thread Execution (PTX) device functions.</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO18spirDeviceFunctionyA2CmF":{"name":"spirDeviceFunction","abstract":"<p>Calling convention for SPIR non-kernel device functions.</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO18spirKernelFunctionyA2CmF":{"name":"spirKernelFunction","abstract":"<p>Calling convention for SPIR kernel functions.</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO18intelOpenCLBuiltinyA2CmF":{"name":"intelOpenCLBuiltin","abstract":"<p>Calling conventions for Intel OpenCL built-ins.</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO12x8664SystemVyA2CmF":{"name":"x8664SystemV","abstract":"<p>The C convention as specified in the x86-64 supplement to the","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO5win64yA2CmF":{"name":"win64","abstract":"<p>The C convention as implemented on Windows/x86-64 and","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO13x86VectorCallyA2CmF":{"name":"x86VectorCall","abstract":"<p>MSVC calling convention that passes vectors and vector aggregates","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO4hhvmyA2CmF":{"name":"hhvm","abstract":"<p>Calling convention used by HipHop Virtual Machine (HHVM) to","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO5hhvmcyA2CmF":{"name":"hhvmc","abstract":"<p>HHVM calling convention for invoking C/C++ helpers.</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO12x86InterruptyA2CmF":{"name":"x86Interrupt","abstract":"<p>The calling convention for x86 hardware interrupts.</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO12avrInterruptyA2CmF":{"name":"avrInterrupt","abstract":"<p>Calling convention for AVR interrupt routines.</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO9avrSignalyA2CmF":{"name":"avrSignal","abstract":"<p>Calling convention used for AVR signal routines.</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO10avrBuiltinyA2CmF":{"name":"avrBuiltin","abstract":"<p>Calling convention used for special AVR rtlib functions","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO18amdGPUVertexShaderyA2CmF":{"name":"amdGPUVertexShader","abstract":"<p>Calling convention used for Mesa vertex shaders, or AMDPAL last shader","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO20amdGPUGeometryShaderyA2CmF":{"name":"amdGPUGeometryShader","abstract":"<p>Calling convention used for Mesa/AMDPAL geometry shaders.</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO17amdGPUPixelShaderyA2CmF":{"name":"amdGPUPixelShader","abstract":"<p>Calling convention used for Mesa/AMDPAL pixel shaders.</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO19amdGPUComputeShaderyA2CmF":{"name":"amdGPUComputeShader","abstract":"<p>Calling convention used for Mesa/AMDPAL compute shaders.</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO12amdGPUKernelyA2CmF":{"name":"amdGPUKernel","abstract":"<p>Calling convention for AMDGPU code object kernels.</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO15x86RegisterCallyA2CmF":{"name":"x86RegisterCall","abstract":"<p>Register calling convention used for parameters transfer optimization</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO16amdGPUHullShaderyA2CmF":{"name":"amdGPUHullShader","abstract":"<p>Calling convention used for Mesa/AMDPAL hull shaders (= tessellation","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO13msp430BuiltinyA2CmF":{"name":"msp430Builtin","abstract":"<p>Calling convention used for special MSP430 rtlib functions","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO8amdGPULSyA2CmF":{"name":"amdGPULS","abstract":"<p>Calling convention used for AMDPAL vertex shader if tessellation is in","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO8amdGPUESyA2CmF":{"name":"amdGPUES","abstract":"<p>Calling convention used for AMDPAL shader stage before geometry shader","parent_name":"CallingConvention"},"Enums/CallingConvention.html#/s:4LLVM17CallingConventionO4llvmSo12LLVMCallConvavp":{"name":"llvm","abstract":"<p>Retrieves the corresponding <code>LLVMDWARFSourceLanguage</code>.</p>","parent_name":"CallingConvention"},"Enums/CallingConvention.html":{"name":"CallingConvention","abstract":"<p>Enumerates the calling conventions supported by LLVM.</p>"},"Enums/LandingPadClause.html":{"name":"LandingPadClause","abstract":"<p>Enumerates the supported kind of clauses.</p>"},"Enums.html#/s:4LLVM8UnsignedO":{"name":"Unsigned","abstract":"<p>Represents unsigned integral types and operations.</p>"},"Enums.html#/s:4LLVM6SignedO":{"name":"Signed","abstract":"<p>Represents signed integral types and operations.</p>"},"Enums.html#/s:4LLVM8FloatingO":{"name":"Floating","abstract":"<p>Represents floating types and operations.</p>"},"Enums.html#/s:4LLVM6StructO":{"name":"Struct","abstract":"<p>Represents struct types and operations.</p>"},"Enums.html#/s:4LLVM6VectorO":{"name":"Vector","abstract":"<p>Represents vector types and operations.</p>"},"Enums/DWARFExpression.html":{"name":"DWARFExpression","abstract":"<p>DWARF expressions describe how to compute a value or specify a location."},"Enums/AttributeKind.html":{"name":"AttributeKind","abstract":"<p>Enumerates the kinds of attributes of LLVM functions and function parameters.</p>"},"Enums/AttributeIndex.html":{"name":"AttributeIndex","abstract":"<p>Represents the possible indices of function attributes.</p>"},"Enums/ThreadLocalModel.html":{"name":"ThreadLocalModel","abstract":"<p>Enumerates the supported models of reference of thread-local variables. </p>"},"Enums/IRMetadataKind.html":{"name":"IRMetadataKind","abstract":"<p>Enumerates the kind of metadata nodes.</p>"},"Enums/IRValueKind.html":{"name":"IRValueKind","abstract":"<p>Enumerates the kinds of values present in LLVM IR.</p>"},"Enums/JITError.html":{"name":"JITError","abstract":"<p>JITError represents the different kinds of errors the JIT compiler can"},"Enums/Visibility.html":{"name":"Visibility","abstract":"<p><code>Visibility</code> enumerates available visibility styles.</p>"},"Enums/Linkage.html":{"name":"Linkage","abstract":"<p><code>Linkage</code> enumerates the supported kinds of linkage for global values.  All"},"Enums/StorageClass.html":{"name":"StorageClass","abstract":"<p><code>StorageClass</code> enumerates the storage classes for globals in a Portable"},"Enums/UnnamedAddressKind.html":{"name":"UnnamedAddressKind","abstract":"<p>Enumerates values representing whether or not this global value&rsquo;s address"},"Enums/MemoryBufferError.html":{"name":"MemoryBufferError","abstract":"<p>Enumerates the possible failures that can be thrown initializing"},"Enums/DWARFSourceLanguage.html":{"name":"DWARFSourceLanguage","abstract":"<p>Source languages known to DWARF.</p>"},"Enums/DWARFTag.html":{"name":"DWARFTag","abstract":"<p>Enumerates the supported identifying tags for corresponding DWARF"},"Enums/DIAttributeTypeEncoding.html":{"name":"DIAttributeTypeEncoding","abstract":"<p>Describes how a base type is encoded and to be interpreted by a debugger.</p>"},"Enums/DWARFEmissionKind.html":{"name":"DWARFEmissionKind","abstract":"<p>The amount of debug information to emit.</p>"},"Enums/ModuleError.html":{"name":"ModuleError","abstract":"<p>Represents the possible errors that can be thrown while interacting with a"},"Enums/OpCode.html":{"name":"OpCode","abstract":"<p>Enumerates the opcodes of instructions available in the LLVM IR language.</p>"},"Enums/OverflowBehavior.html":{"name":"OverflowBehavior","abstract":"<p>Species the behavior that should occur on overflow during mathematical"},"Enums/IntPredicate.html":{"name":"IntPredicate","abstract":"<p>The condition codes available for integer comparison instructions.</p>"},"Enums/RealPredicate.html":{"name":"RealPredicate","abstract":"<p>The condition codes available for floating comparison instructions.</p>"},"Enums/AtomicOrdering.html":{"name":"AtomicOrdering","abstract":"<p><code>AtomicOrdering</code> enumerates available memory ordering semantics.</p>"},"Enums/AtomicReadModifyWriteOperation.html":{"name":"AtomicReadModifyWriteOperation","abstract":"<p><code>AtomicReadModifyWriteOperation</code> enumerates the kinds of supported atomic"},"Enums/InlineAssemblyDialect.html":{"name":"InlineAssemblyDialect","abstract":"<p>Enumerates the dialects of inline assembly LLVM&rsquo;s parsers can handle.</p>"},"Enums/FunctionPass.html":{"name":"FunctionPass","abstract":"<p>A subset of supported LLVM IR optimizer passes.</p>"},"Enums/ByteOrder.html":{"name":"ByteOrder","abstract":"<p><code>ByteOrder</code> enumerates the ordering semantics of sequences of bytes on a"},"Enums/CodeGenOptLevel.html":{"name":"CodeGenOptLevel","abstract":"<p>LLVM-provided high-level optimization levels.</p>"},"Enums/RelocationModel.html":{"name":"RelocationModel","abstract":"<p>The relocation model types supported by LLVM.</p>"},"Enums/CodeModel.html":{"name":"CodeModel","abstract":"<p>The model that generated code should follow.  Code Models enables particular"},"Enums/CodegenFileType.html":{"name":"CodegenFileType","abstract":"<p>The supported types of files codegen can produce.</p>"},"Enums/TargetMachineError.html":{"name":"TargetMachineError","abstract":"<p>Represents one of a few errors that can be thrown by a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/TargetMachine.html\">TargetMachine</a></code></p>"},"Classes/TargetMachine.html#/s:4LLVM13TargetMachineC6targetAA0B0Cvp":{"name":"target","abstract":"<p>The target information associated with this target machine.</p>","parent_name":"TargetMachine"},"Classes/TargetMachine.html#/s:4LLVM13TargetMachineC10dataLayoutAA0B4DataCvp":{"name":"dataLayout","abstract":"<p>The data layout semantics associated with this target machine.</p>","parent_name":"TargetMachine"},"Classes/TargetMachine.html#/s:4LLVM13TargetMachineC6tripleSSvp":{"name":"triple","abstract":"<p>A string representing the target triple for this target machine.  In the","parent_name":"TargetMachine"},"Classes/TargetMachine.html#/s:4LLVM13TargetMachineC3cpuSSvp":{"name":"cpu","abstract":"<p>The CPU associated with this target machine.</p>","parent_name":"TargetMachine"},"Classes/TargetMachine.html#/s:4LLVM13TargetMachineC8featuresSSvp":{"name":"features","abstract":"<p>The feature string associated with this target machine.</p>","parent_name":"TargetMachine"},"Classes/TargetMachine.html#/s:4LLVM13TargetMachineC6triple3cpu8features8optLevel11relocations9codeModelACSSSg_S2SAA010CodeGenOptH0OAA010RelocationK0OAA0lK0OtKcfc":{"name":"init(triple:cpu:features:optLevel:relocations:codeModel:)","abstract":"<p>Creates a Target Machine with information about its target environment.</p>","parent_name":"TargetMachine"},"Classes/TargetMachine.html#/s:4LLVM13TargetMachineC10emitToFile6module4type4pathyAA6ModuleC_AA07CodegenF4TypeOSStKF":{"name":"emitToFile(module:type:path:)","abstract":"<p>Emits an LLVM Bitcode, ASM, or object file for the given module to the","parent_name":"TargetMachine"},"Classes/TargetMachine.html#/s:4LLVM13TargetMachineC18emitToMemoryBuffer6module4typeAA0fG0CAA6ModuleC_AA15CodegenFileTypeOtKF":{"name":"emitToMemoryBuffer(module:type:)","abstract":"<p>Emits an LLVM Bitcode, ASM, or object file for the given module to a new","parent_name":"TargetMachine"},"Classes/TargetMachine.html#/s:4LLVM13TargetMachineCfd":{"name":"deinit","abstract":"<p>Deinitialize this value and dispose of its resources.</p>","parent_name":"TargetMachine"},"Classes/Target.html#/s:4LLVM6TargetC4llvmACs13OpaquePointerV_tcfc":{"name":"init(llvm:)","abstract":"<p>Creates a <code>Target</code> object from an LLVM target object.</p>","parent_name":"Target"},"Classes/Target.html#/s:4LLVM6TargetC4nameSSvp":{"name":"name","abstract":"<p>The name of this target.</p>","parent_name":"Target"},"Classes/Target.html#/s:4LLVM6TargetC17targetDescriptionSSvp":{"name":"targetDescription","abstract":"<p>The description of this target.</p>","parent_name":"Target"},"Classes/Target.html#/s:4LLVM6TargetC10allTargetss11AnySequenceVyACGvpZ":{"name":"allTargets","abstract":"<p>Returns a sequence of all targets in the global list of targets.</p>","parent_name":"Target"},"Classes/Target.html#/s:4LLVM6TargetC05firstB0ACSgvpZ":{"name":"firstTarget","abstract":"<p>Returns the first target in the global target list, if it exists.</p>","parent_name":"Target"},"Classes/Target.html#/s:4LLVM6TargetC4nextACSgyF":{"name":"next()","abstract":"<p>Returns the target following this target in the global target list,","parent_name":"Target"},"Classes/TargetData.html#/s:4LLVM10TargetDataC4llvmACs13OpaquePointerV_tcfc":{"name":"init(llvm:)","abstract":"<p>Creates a Target Data object from an <code>LLVMTargetDataRef</code> object.</p>","parent_name":"TargetData"},"Classes/TargetData.html#/s:4LLVM10TargetDataC15offsetOfElement2at4typeS2i_AA10StructTypeVtF":{"name":"offsetOfElement(at:type:)","parent_name":"TargetData"},"Classes/TargetData.html#/s:4LLVM10TargetDataC15elementAtOffset_4typeS2i_AA10StructTypeVtF":{"name":"elementAtOffset(_:type:)","parent_name":"TargetData"},"Classes/TargetData.html#/s:4LLVM10TargetDataC16sizeOfTypeInBitsySiAA6IRType_pF":{"name":"sizeOfTypeInBits(_:)","abstract":"<p>Computes the number of bits necessary to hold a value of the given type","parent_name":"TargetData"},"Classes/TargetData.html#/s:4LLVM10TargetDataC9byteOrderAA04ByteE0Ovp":{"name":"byteOrder","abstract":"<p>The current platform byte order, either big or little endian.</p>","parent_name":"TargetData"},"Classes/TargetData.html#/s:4LLVM10TargetDataC12layoutStringSSvp":{"name":"layoutString","abstract":"<p>Creates a string representation of the target data.</p>","parent_name":"TargetData"},"Classes/TargetData.html#/s:4LLVM10TargetDataC14intPointerType7context12addressSpaceAA03IntF0VAA7ContextCSg_SiSgtF":{"name":"intPointerType(context:addressSpace:)","abstract":"<p>The integer type that is the same size as a pointer on this target.","parent_name":"TargetData"},"Classes/TargetData.html#/s:4LLVM10TargetDataC18preferredAlignment2ofAA0E0VAA6GlobalC_tF":{"name":"preferredAlignment(of:)","abstract":"<p>Computes the preferred alignment of the given global for this target</p>","parent_name":"TargetData"},"Classes/TargetData.html#/s:4LLVM10TargetDataC18preferredAlignment2ofAA0E0VAA6IRType_p_tF":{"name":"preferredAlignment(of:)","abstract":"<p>Computes the preferred alignment of the given type for this target</p>","parent_name":"TargetData"},"Classes/TargetData.html#/s:4LLVM10TargetDataC12abiAlignment2ofAA0E0VAA6IRType_p_tF":{"name":"abiAlignment(of:)","abstract":"<p>Computes the minimum ABI-required alignment for the specified type.</p>","parent_name":"TargetData"},"Classes/TargetData.html#/s:4LLVM10TargetDataC18callFrameAlignment2ofAA0F0VAA6IRType_p_tF":{"name":"callFrameAlignment(of:)","abstract":"<p>Computes the minimum ABI-required alignment for the specified type.</p>","parent_name":"TargetData"},"Classes/TargetData.html#/s:4LLVM10TargetDataC7abiSize2ofAA0E0VAA6IRType_p_tF":{"name":"abiSize(of:)","abstract":"<p>Computes the ABI size of a type in bytes for a target.</p>","parent_name":"TargetData"},"Classes/TargetData.html#/s:4LLVM10TargetDataC9storeSize2ofAA0E0VAA6IRType_p_tF":{"name":"storeSize(of:)","abstract":"<p>Computes the maximum number of bytes that may be overwritten by","parent_name":"TargetData"},"Classes/TargetData.html#/s:4LLVM10TargetDataC11pointerSize12addressSpaceAA0E0VSiSg_tF":{"name":"pointerSize(addressSpace:)","abstract":"<p>Computes the pointer size for the platform, optionally in a given","parent_name":"TargetData"},"Classes/TargetData.html#/s:4LLVM10TargetDataC14allocationSize2ofAA0E0VAA6IRType_p_tF":{"name":"allocationSize(of:)","abstract":"<p>Returns the offset in bytes between successive objects of the","parent_name":"TargetData"},"Classes/TargetData.html#/s:4LLVM10TargetDataC6layout2ofAA12StructLayoutVAA0F4TypeV_tF":{"name":"layout(of:)","abstract":"<p>Returns a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/StructLayout.html\">StructLayout</a></code> object containing the alignment of the","parent_name":"TargetData"},"Classes/TargetData.html#/s:4LLVM10TargetDataC5align_2to4skewAA4SizeVAH_AA9AlignmentVAHtFZ":{"name":"align(_:to:skew:)","abstract":"<p>Returns the next integer (mod 2**64) that is greater than or equal to","parent_name":"TargetData"},"Classes/FunctionPassManager.html#/s:4LLVM19FunctionPassManagerC6moduleAcA6ModuleC_tcfc":{"name":"init(module:)","abstract":"<p>Creates a <code>FunctionPassManager</code> bound to the given module&rsquo;s IR.</p>","parent_name":"FunctionPassManager"},"Classes/FunctionPassManager.html#/s:4LLVM19FunctionPassManagerC3addyyAA0bC0Od_tF":{"name":"add(_:)","abstract":"<p>Adds the given passes to the pass manager.</p>","parent_name":"FunctionPassManager"},"Classes/FunctionPassManager.html#/s:4LLVM19FunctionPassManagerC3run2onyAA0B0C_tF":{"name":"run(on:)","abstract":"<p>Runs all listed functions in the pass manager on the given function.</p>","parent_name":"FunctionPassManager"},"Classes/SymbolSequence.html#/s:4LLVM14SymbolSequenceC12makeIterators03AnyE0VyAA0B0VGyF":{"name":"makeIterator()","abstract":"<p>Creates an iterator that will iterate over all symbols in an object","parent_name":"SymbolSequence"},"Classes/SymbolSequence.html#/s:4LLVM14SymbolSequenceCfd":{"name":"deinit","abstract":"<p>Deinitialize this value and dispose of its resources.</p>","parent_name":"SymbolSequence"},"Classes/RelocationSequence.html#/s:4LLVM18RelocationSequenceC12makeIterators03AnyE0VyAA0B0VGyF":{"name":"makeIterator()","abstract":"<p>Creates an iterator that will iterate over all relocations in an object","parent_name":"RelocationSequence"},"Classes/RelocationSequence.html#/s:4LLVM18RelocationSequenceCfd":{"name":"deinit","abstract":"<p>Deinitialize this value and dispose of its resources.</p>","parent_name":"RelocationSequence"},"Classes/SectionSequence.html#/s:4LLVM15SectionSequenceC12makeIterators03AnyE0VyAA0B0VGyF":{"name":"makeIterator()","abstract":"<p>Makes an iterator that iterates over the sections in an object file.</p>","parent_name":"SectionSequence"},"Classes/SectionSequence.html#/s:4LLVM15SectionSequenceCfd":{"name":"deinit","abstract":"<p>Deinitialize this value and dispose of its resources.</p>","parent_name":"SectionSequence"},"Classes/ObjectFile.html#/s:4LLVM10ObjectFileC12memoryBufferACSgAA06MemoryE0C_tcfc":{"name":"init(memoryBuffer:)","abstract":"<p>Creates an <code>ObjectFile</code> with the contents of a provided memory buffer.</p>","parent_name":"ObjectFile"},"Classes/ObjectFile.html#/s:4LLVM10ObjectFileC4pathACSgSS_tcfc":{"name":"init(path:)","abstract":"<p>Creates an <code>ObjectFile</code> with the contents of the object file at","parent_name":"ObjectFile"},"Classes/ObjectFile.html#/s:4LLVM10ObjectFileC8sectionsAA15SectionSequenceCvp":{"name":"sections","abstract":"<p>Returns a sequence of all the sections in this object file.</p>","parent_name":"ObjectFile"},"Classes/ObjectFile.html#/s:4LLVM10ObjectFileC7symbolsAA14SymbolSequenceCvp":{"name":"symbols","abstract":"<p>Returns a sequence of all the symbols in this object file.</p>","parent_name":"ObjectFile"},"Classes/ObjectFile.html#/s:4LLVM10ObjectFileCfd":{"name":"deinit","abstract":"<p>Deinitialize this value and dispose of its resources.</p>","parent_name":"ObjectFile"},"Classes/NamedMetadata.html#/s:4LLVM13NamedMetadataC6moduleAA6ModuleCvp":{"name":"module","abstract":"<p>The module with which this named metadata is associated.</p>","parent_name":"NamedMetadata"},"Classes/NamedMetadata.html#/s:4LLVM13NamedMetadataC4nameSSvp":{"name":"name","abstract":"<p>The name associated with this named metadata.</p>","parent_name":"NamedMetadata"},"Classes/NamedMetadata.html#/s:4LLVM13NamedMetadataC8previousACSgyF":{"name":"previous()","abstract":"<p>Retrieves the previous alias in the module, if there is one.</p>","parent_name":"NamedMetadata"},"Classes/NamedMetadata.html#/s:4LLVM13NamedMetadataC4nextACSgyF":{"name":"next()","abstract":"<p>Retrieves the next alias in the module, if there is one.</p>","parent_name":"NamedMetadata"},"Classes/NamedMetadata.html#/s:4LLVM13NamedMetadataC8operandsSayAA10IRMetadata_pGvp":{"name":"operands","abstract":"<p>Computes the operands of a named metadata node.</p>","parent_name":"NamedMetadata"},"Classes/NamedMetadata.html#/s:4LLVM13NamedMetadataC10addOperandyyAA10IRMetadata_pF":{"name":"addOperand(_:)","abstract":"<p>Appends a metadata node as an operand.</p>","parent_name":"NamedMetadata"},"Classes/Module/Flags/Entry.html#/s:4LLVM6ModuleC5FlagsC5EntryV8behaviorAE8BehaviorOvp":{"name":"behavior","abstract":"<p>The conflict behavior of this flag.</p>","parent_name":"Entry"},"Classes/Module/Flags/Entry.html#/s:4LLVM6ModuleC5FlagsC5EntryV3keySSvp":{"name":"key","abstract":"<p>The key this flag was inserted with.</p>","parent_name":"Entry"},"Classes/Module/Flags/Entry.html#/s:4LLVM6ModuleC5FlagsC5EntryV8metadataAA10IRMetadata_pvp":{"name":"metadata","abstract":"<p>The metadata value associated with this flag.</p>","parent_name":"Entry"},"Classes/Module/Flags/Behavior.html#/s:4LLVM6ModuleC5FlagsC8BehaviorO5erroryA2GmF":{"name":"error","abstract":"<p>Emits an error if two values disagree, otherwise the resulting value","parent_name":"Behavior"},"Classes/Module/Flags/Behavior.html#/s:4LLVM6ModuleC5FlagsC8BehaviorO7warningyA2GmF":{"name":"warning","abstract":"<p>Emits a warning if two values disagree. The result value will be the","parent_name":"Behavior"},"Classes/Module/Flags/Behavior.html#/s:4LLVM6ModuleC5FlagsC8BehaviorO7requireyA2GmF":{"name":"require","abstract":"<p>Adds a requirement that another module flag be present and have a","parent_name":"Behavior"},"Classes/Module/Flags/Behavior.html#/s:4LLVM6ModuleC5FlagsC8BehaviorO8overrideyA2GmF":{"name":"override","abstract":"<p>Uses the specified value, regardless of the behavior or value of the","parent_name":"Behavior"},"Classes/Module/Flags/Behavior.html#/s:4LLVM6ModuleC5FlagsC8BehaviorO6appendyA2GmF":{"name":"append","abstract":"<p>Appends the two values, which are required to be metadata nodes.</p>","parent_name":"Behavior"},"Classes/Module/Flags/Behavior.html#/s:4LLVM6ModuleC5FlagsC8BehaviorO12appendUniqueyA2GmF":{"name":"appendUnique","abstract":"<p>Appends the two values, which are required to be metadata","parent_name":"Behavior"},"Classes/Module/Flags/Behavior.html":{"name":"Behavior","abstract":"<p>Enumerates the supported behaviors for resolving collisions when two","parent_name":"Flags"},"Classes/Module/Flags/Entry.html":{"name":"Entry","abstract":"<p>Represents an entry in the module flags structure.</p>","parent_name":"Flags"},"Classes/Module/Flags.html#/s:4LLVM6ModuleC5FlagsCfd":{"name":"deinit","abstract":"<p>Deinitialize this value and dispose of its resources.</p>","parent_name":"Flags"},"Classes/Module/Flags.html#/s:4LLVM6ModuleC5FlagsCyAE5EntryVSicip":{"name":"subscript(_:)","abstract":"<p>Retrieves a flag at the given index.</p>","parent_name":"Flags"},"Classes/Module/Flags.html#/s:4LLVM6ModuleC5FlagsC5countSivp":{"name":"count","abstract":"<p>Returns the number of module flag metadata entries.</p>","parent_name":"Flags"},"Classes/Module.html#/s:4LLVM6ModuleC4name7contextACSS_AA7ContextCSgtcfc":{"name":"init(name:context:)","abstract":"<p>Creates a <code>Module</code> with the given name.</p>","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC7contextAA7ContextCvp":{"name":"context","abstract":"<p>Returns the context associated with this module.</p>","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC10dataLayoutAA10TargetDataCvp":{"name":"dataLayout","abstract":"<p>Obtain the data layout for this module.</p>","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC16dataLayoutStringSSvp":{"name":"dataLayoutString","abstract":"<p>Returns a string describing the data layout associated with this module.</p>","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC4nameSSvp":{"name":"name","abstract":"<p>The identifier of this module.</p>","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC14inlineAssemblySSvp":{"name":"inlineAssembly","abstract":"<p>Retrieves the inline assembly for this module, if any.</p>","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC5print2toySS_tKF":{"name":"print(to:)","abstract":"<p>Print a representation of a module to a file at the given path.</p>","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC11emitBitCode2toySS_tKF":{"name":"emitBitCode(to:)","abstract":"<p>Writes the bitcode of elements in this module to a file at the given path.</p>","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC6verifyyyKF":{"name":"verify()","abstract":"<p>Verifies that this module is valid, taking the specified action if not.","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC4linkySbACF":{"name":"link(_:)","abstract":"<p>Links the given module with this module.  If the link succeeds, this","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC9functionss11AnySequenceVyAA8FunctionCGvp":{"name":"functions","abstract":"<p>Retrieves the sequence of functions that make up this module.</p>","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC13firstFunctionAA0D0CSgvp":{"name":"firstFunction","abstract":"<p>Retrieves the first function in this module, if there are any functions.</p>","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC12lastFunctionAA0D0CSgvp":{"name":"lastFunction","abstract":"<p>Retrieves the last function in this module, if there are any functions.</p>","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC11firstGlobalAA0D0CSgvp":{"name":"firstGlobal","abstract":"<p>Retrieves the first global in this module, if there are any globals.</p>","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC10lastGlobalAA0D0CSgvp":{"name":"lastGlobal","abstract":"<p>Retrieves the last global in this module, if there are any globals.</p>","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC7globalss11AnySequenceVyAA6GlobalCGvp":{"name":"globals","abstract":"<p>Retrieves the sequence of functions that make up this module.</p>","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC10firstAliasAA0D0VSgvp":{"name":"firstAlias","abstract":"<p>Retrieves the first alias in this module, if there are any aliases.</p>","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC9lastAliasAA0D0VSgvp":{"name":"lastAlias","abstract":"<p>Retrieves the last alias in this module, if there are any aliases.</p>","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC7aliasess11AnySequenceVyAA5AliasVGvp":{"name":"aliases","abstract":"<p>Retrieves the sequence of aliases that make up this module.</p>","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC18firstNamedMetadataAA0dE0CSgvp":{"name":"firstNamedMetadata","abstract":"<p>Retrieves the first alias in this module, if there are any aliases.</p>","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC17lastNamedMetadataAA0dE0CSgvp":{"name":"lastNamedMetadata","abstract":"<p>Retrieves the last alias in this module, if there are any aliases.</p>","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC13namedMetadatas11AnySequenceVyAA05NamedD0CGvp":{"name":"namedMetadata","abstract":"<p>Retrieves the sequence of aliases that make up this module.</p>","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC20debugMetadataVersions6UInt32VvpZ":{"name":"debugMetadataVersion","abstract":"<p>The current debug metadata version number.</p>","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC20debugMetadataVersions6UInt32Vvp":{"name":"debugMetadataVersion","abstract":"<p>The version of debug metadata that&rsquo;s present in this module.</p>","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC14stripDebugInfoSbyF":{"name":"stripDebugInfo()","abstract":"<p>Strip debug info in the module if it exists.</p>","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC4dumpyyF":{"name":"dump()","abstract":"<p>Dump a representation of this module to stderr.</p>","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC11descriptionSSvp":{"name":"description","abstract":"<p>The full text IR of this module</p>","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleCfd":{"name":"deinit","abstract":"<p>Deinitialize this value and dispose of its resources.</p>","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC6global5namedAA6GlobalCSgSS_tF":{"name":"global(named:)","abstract":"<p>Searches for and retrieves a global variable with the given name in this","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC4type5namedAA6IRType_pSgSS_tF":{"name":"type(named:)","abstract":"<p>Searches for and retrieves a type with the given name in this module if","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC8function5namedAA8FunctionCSgSS_tF":{"name":"function(named:)","abstract":"<p>Searches for and retrieves a function with the given name in this module","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC9intrinsic5named10parametersAA9IntrinsicCSgSS_SayAA6IRType_pGtF":{"name":"intrinsic(named:parameters:)","abstract":"<p>Searches for and retrieves an intrinsic with the given name in this module","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC9intrinsic_10parametersAA9IntrinsicCSgAG8SelectorV_SayAA6IRType_pGtF":{"name":"intrinsic(_:parameters:)","abstract":"<p>Searches for and retrieves an intrinsic with the given selector in this","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC5alias5namedAA5AliasVSgSS_tF":{"name":"alias(named:)","abstract":"<p>Searches for and retrieves an alias with the given name in this module","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC6comdat5namedAA6ComdatCSS_tF":{"name":"comdat(named:)","abstract":"<p>Searches for and retrieves a comdat section with the given name in this","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC8metadata5namedAA13NamedMetadataCSS_tF":{"name":"metadata(named:)","abstract":"<p>Searches for and retrieves module-level named metadata with the given name","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC11addFunction_4typeAA0D0CSS_AA0D4TypeVtF":{"name":"addFunction(_:type:)","abstract":"<p>Build a named function body with the given type.</p>","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC9addGlobal_4type12addressSpaceAA0D0CSS_AA6IRType_pSiSgtF":{"name":"addGlobal(_:type:addressSpace:)","abstract":"<p>Build a named global of the given type.</p>","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC9addGlobal_11initializer12addressSpaceAA0D0CSS_AA7IRValue_pSiSgtF":{"name":"addGlobal(_:initializer:addressSpace:)","abstract":"<p>Build a named global of the given type.</p>","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC15addGlobalString4name5valueAA0D0CSS_SStF":{"name":"addGlobalString(name:value:)","abstract":"<p>Build a named global string consisting of an array of <code>i8</code> type filled in","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC8addAlias4name2to4typeAA0D0VSS_AA8IRGlobal_pAA6IRType_ptF":{"name":"addAlias(name:to:type:)","abstract":"<p>Build a named alias to a global value or a constant expression.</p>","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC20appendInlineAssemblyyySSF":{"name":"appendInlineAssembly(_:)","abstract":"<p>Append to the module-scope inline assembly blocks.</p>","parent_name":"Module"},"Classes/Module/Flags.html":{"name":"Flags","abstract":"<p>Represents flags that describe information about the module for use by","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC7addFlag5named5value8behaviorySS_AA10IRMetadata_pAC5FlagsC8BehaviorOtF":{"name":"addFlag(named:value:behavior:)","abstract":"<p>Add a module-level flag to the module-level flags metadata.</p>","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC7addFlag5named8constant8behaviorySS_AA10IRConstant_pAC5FlagsC8BehaviorOtF":{"name":"addFlag(named:constant:behavior:)","abstract":"<p>A convenience for inserting constant values as module-level flags.</p>","parent_name":"Module"},"Classes/Module.html#/s:4LLVM6ModuleC5flagsAC5FlagsCSgvp":{"name":"flags","abstract":"<p>Retrieves the module-level flags, if they exist.</p>","parent_name":"Module"},"Classes/MemoryBuffer.html#/s:4LLVM12MemoryBufferC9fromStdinACyKFZ":{"name":"fromStdin()","abstract":"<p>Creates a <code>MemoryBuffer</code> with the contents of <code>stdin</code>, stopping once","parent_name":"MemoryBuffer"},"Classes/MemoryBuffer.html#/s:4LLVM12MemoryBufferC6buffer4name22requiresNullTerminatorACSRys4Int8VG_SSSbtcfc":{"name":"init(buffer:name:requiresNullTerminator:)","abstract":"<p>Creates a <code>MemoryBuffer</code> that points to a specified","parent_name":"MemoryBuffer"},"Classes/MemoryBuffer.html#/s:4LLVM12MemoryBufferC07copyingC04nameACSRys4Int8VG_SStcfc":{"name":"init(copyingBuffer:name:)","abstract":"<p>Creates a <code>MemoryBuffer</code> by copying the data within a specified","parent_name":"MemoryBuffer"},"Classes/MemoryBuffer.html#/s:4LLVM12MemoryBufferC10contentsOfACSS_tKcfc":{"name":"init(contentsOf:)","abstract":"<p>Creates a <code>MemoryBuffer</code> with the contents of the file at the provided","parent_name":"MemoryBuffer"},"Classes/MemoryBuffer.html#/s:4LLVM12MemoryBufferC5startSPys4Int8VGvp":{"name":"start","abstract":"<p>Retrieves the start address of this buffer.</p>","parent_name":"MemoryBuffer"},"Classes/MemoryBuffer.html#/s:4LLVM12MemoryBufferC4sizeSivp":{"name":"size","abstract":"<p>Retrieves the size in bytes of this buffer.</p>","parent_name":"MemoryBuffer"},"Classes/MemoryBuffer.html#/s:4LLVM12MemoryBufferC12makeIteratorSR0E0Vys4Int8V_GyF":{"name":"makeIterator()","abstract":"<p>Makes an iterator so this buffer can be traversed in a <code>for</code> loop.</p>","parent_name":"MemoryBuffer"},"Classes/MemoryBuffer.html#/s:4LLVM12MemoryBufferCfd":{"name":"deinit","abstract":"<p>Deinitialize this value and dispose of its resources.</p>","parent_name":"MemoryBuffer"},"Classes/JIT/TargetAddress.html#/s:4LLVM3JITC13TargetAddressVAEycfc":{"name":"init()","abstract":"<p>Creates a target address value of <code>0</code>.</p>","parent_name":"TargetAddress"},"Classes/JIT/TargetAddress.html#/s:4LLVM3JITC13TargetAddressV3rawAEs6UInt64V_tcfc":{"name":"init(raw:)","abstract":"<p>Creates a target address from a raw address value.</p>","parent_name":"TargetAddress"},"Classes/JIT/TargetAddress.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"TargetAddress"},"Classes/JIT/TargetAddress.html#/s:SL1loiySbx_xtFZ":{"name":"<(_:_:)","parent_name":"TargetAddress"},"Classes/JIT/TargetAddress.html":{"name":"TargetAddress","abstract":"<p>A type that represents an address, either symbolically within the JIT or","parent_name":"JIT"},"Classes/JIT.html#/s:4LLVM3JITC12ModuleHandleV":{"name":"ModuleHandle","abstract":"<p>Represents a handle to a module owned by the JIT stack.</p>","parent_name":"JIT"},"Classes/JIT.html#/s:4LLVM3JITC7machineAcA13TargetMachineC_tcfc":{"name":"init(machine:)","abstract":"<p>Create and initialize a <code>JIT</code> with this target machine&rsquo;s representation.</p>","parent_name":"JIT"},"Classes/JIT.html#/s:4LLVM3JITCfd":{"name":"deinit","abstract":"<p>Deinitialize this value and dispose of its resources.</p>","parent_name":"JIT"},"Classes/JIT.html#/s:4LLVM3JITC6mangle6symbolS2S_tF":{"name":"mangle(symbol:)","abstract":"<p>Mangles the given symbol name according to the data layout of the JIT&rsquo;s","parent_name":"JIT"},"Classes/JIT.html#/s:4LLVM3JITC7address2of2inAC13TargetAddressVSS_AC12ModuleHandleVSgtKF":{"name":"address(of:in:)","abstract":"<p>Computes the address of the given symbol, optionally restricting the","parent_name":"JIT"},"Classes/JIT.html#/s:4LLVM3JITC19registerLazyCompileyAC13TargetAddressVAfCcKF":{"name":"registerLazyCompile(_:)","abstract":"<p>Registers a lazy compile callback that can be used to get the target","parent_name":"JIT"},"Classes/JIT.html#/s:4LLVM3JITC18createIndirectStub5named7addressySS_AC13TargetAddressVtKF":{"name":"createIndirectStub(named:address:)","abstract":"<p>Creates a new named indirect stub pointing to the given target address.</p>","parent_name":"JIT"},"Classes/JIT.html#/s:4LLVM3JITC22setIndirectStubPointer5named7addressySS_AC13TargetAddressVtKF":{"name":"setIndirectStubPointer(named:address:)","abstract":"<p>Resets the address of an indirect stub.</p>","parent_name":"JIT"},"Classes/JIT.html#/s:4LLVM3JITC20addEagerlyCompiledIRyAC12ModuleHandleVAA0G0C_AC13TargetAddressVSSctKF":{"name":"addEagerlyCompiledIR(_:_:)","abstract":"<p>Adds the IR from a given module to the JIT, consuming it in the process.</p>","parent_name":"JIT"},"Classes/JIT.html#/s:4LLVM3JITC19addLazilyCompiledIRyAC12ModuleHandleVAA0G0C_AC13TargetAddressVSSctKF":{"name":"addLazilyCompiledIR(_:_:)","abstract":"<p>Adds the IR from a given module to the JIT, consuming it in the process.</p>","parent_name":"JIT"},"Classes/JIT.html#/s:4LLVM3JITC13addObjectFileyAC12ModuleHandleVAA12MemoryBufferC_AC13TargetAddressVSSctKF":{"name":"addObjectFile(_:_:)","abstract":"<p>Adds the executable code from an object file to ths JIT, consuming it in","parent_name":"JIT"},"Classes/JIT.html#/s:4LLVM3JITC12removeModuleyyAC0D6HandleVKF":{"name":"removeModule(_:)","abstract":"<p>Remove previously-added code from the JIT.</p>","parent_name":"JIT"},"Classes/Intrinsic/DynamicIntrinsicResolver.html#/s:4LLVM9IntrinsicC07DynamicB8ResolverV13dynamicMemberAC8SelectorVSS_tcip":{"name":"subscript(dynamicMember:)","abstract":"<p>Performs a dynamic lookup for the normalized form of an intrinsic","parent_name":"DynamicIntrinsicResolver"},"Classes/Intrinsic.html#/s:4LLVM9IntrinsicC8SelectorV":{"name":"Selector","abstract":"<p>A wrapper type for an intrinsic selector.</p>","parent_name":"Intrinsic"},"Classes/Intrinsic/DynamicIntrinsicResolver.html":{"name":"DynamicIntrinsicResolver","abstract":"<p>This type provides a dynamic member lookup facility for LLVM intrinsics.</p>","parent_name":"Intrinsic"},"Classes/Intrinsic.html#/s:4LLVM9IntrinsicC2IDAC07DynamicB8ResolverVvpZ":{"name":"ID","abstract":"<p>The default dynamic intrinsic resolver.</p>","parent_name":"Intrinsic"},"Classes/Intrinsic.html#/s:4LLVM9IntrinsicC4nameSSvp":{"name":"name","abstract":"<p>Retrieves the name of this intrinsic if it is not overloaded.</p>","parent_name":"Intrinsic"},"Classes/Intrinsic.html#/s:4LLVM9IntrinsicC14overloadedName3forSSSayAA6IRType_pG_tF":{"name":"overloadedName(for:)","abstract":"<p>Retrieves the name of this intrinsic if it is overloaded, resolving it","parent_name":"Intrinsic"},"Classes/Intrinsic.html#/s:4LLVM9IntrinsicC4typeAA6IRType_pvp":{"name":"type","abstract":"<p>Retrieves the type of this intrinsic if it is not overloaded.</p>","parent_name":"Intrinsic"},"Classes/Intrinsic.html#/s:4LLVM9IntrinsicC14overloadedType2in4withAA6IRType_pAA7ContextC_SayAaG_pGtF":{"name":"overloadedType(in:with:)","abstract":"<p>Resolves the type of an overloaded intrinsic using the given parameter","parent_name":"Intrinsic"},"Classes/Intrinsic.html#/s:4LLVM9IntrinsicC12isOverloadedSbvp":{"name":"isOverloaded","abstract":"<p>Retrieves if this intrinsic is overloaded.</p>","parent_name":"Intrinsic"},"Classes/Intrinsic.html#/s:4LLVM9IntrinsicC10identifiers6UInt32Vvp":{"name":"identifier","abstract":"<p>Retrieves the ID number of this intrinsic function.</p>","parent_name":"Intrinsic"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC6moduleAA6ModuleCvp":{"name":"module","abstract":"<p>The module this <code>IRBuilder</code> is associated with.</p>","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC6moduleAcA6ModuleC_tcfc":{"name":"init(module:)","abstract":"<p>Creates an <code>IRBuilder</code> object with the given module.</p>","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderCfd":{"name":"deinit","abstract":"<p>Deinitialize this value and dispose of its resources.</p>","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC13positionAtEnd2ofyAA10BasicBlockV_tF":{"name":"positionAtEnd(of:)","abstract":"<p>Repositions the IR Builder at the end of the given basic block.</p>","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC14positionBeforeyyAA7IRValue_pF":{"name":"positionBefore(_:)","abstract":"<p>Repositions the IR Builder before the start of the given instruction.</p>","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC8position_5blockyAA7IRValue_p_AA10BasicBlockVtF":{"name":"position(_:block:)","abstract":"<p>Repositions the IR Builder at the point specified by the given instruction","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC22clearInsertionPositionyyF":{"name":"clearInsertionPosition()","abstract":"<p>Clears the insertion point.</p>","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC11insertBlockAA05BasicD0VSgvp":{"name":"insertBlock","abstract":"<p>Gets the basic block built instructions will be inserted into.</p>","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC15currentFunctionAA0D0CSgvp":{"name":"currentFunction","abstract":"<p>Gets the function this builder is building into.</p>","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC6insert_4nameyAA7IRValue_p_SSSgtF":{"name":"insert(_:name:)","abstract":"<p>Inserts the given instruction into the IR Builder.</p>","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC20currentDebugLocationAA0dE0Vvp":{"name":"currentDebugLocation","abstract":"<p>Access location information used by debugging information.</p>","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC20buildBinaryOperation___4nameAA7IRValue_pAA6OpCodeO0D0O_AaF_pAaF_pSStF":{"name":"buildBinaryOperation(_:_:_:name:)","abstract":"<p>Builds the specified binary operation instruction with the given arguments.</p>","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC9buildCast_5value4type4nameAA7IRValue_pAA6OpCodeO0D0O_AaH_pAA6IRType_pSStF":{"name":"buildCast(_:value:type:name:)","abstract":"<p>Builds the specified cast operation instruction with the given value and","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC16buildPointerCast2of2to4nameAA7IRValue_pAaH_p_AA6IRType_pSStF":{"name":"buildPointerCast(of:to:name:)","abstract":"<p>Builds a cast operation from a value of pointer type to any other","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC12buildIntCast2of2to6signed4nameAA7IRValue_pAaI_p_AA0D4TypeVSbSStF":{"name":"buildIntCast(of:to:signed:name:)","abstract":"<p>Builds a cast operation from a value of integral type to given integral","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC8buildNeg_16overflowBehavior4nameAA7IRValue_pAaG_p_AA08OverflowF0OSStF":{"name":"buildNeg(_:overflowBehavior:name:)","abstract":"<p>Build a negation instruction with the given value as an operand.</p>","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC8buildAdd__16overflowBehavior4nameAA7IRValue_pAaG_p_AaG_pAA08OverflowF0OSStF":{"name":"buildAdd(_:_:overflowBehavior:name:)","abstract":"<p>Build an add instruction with the given values as operands.</p>","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC8buildSub__16overflowBehavior4nameAA7IRValue_pAaG_p_AaG_pAA08OverflowF0OSStF":{"name":"buildSub(_:_:overflowBehavior:name:)","abstract":"<p>Build a subtract instruction with the given values as operands.</p>","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC8buildMul__16overflowBehavior4nameAA7IRValue_pAaG_p_AaG_pAA08OverflowF0OSStF":{"name":"buildMul(_:_:overflowBehavior:name:)","abstract":"<p>Build a multiply instruction with the given values as operands.</p>","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC8buildRem__6signed4nameAA7IRValue_pAaG_p_AaG_pSbSStF":{"name":"buildRem(_:_:signed:name:)","abstract":"<p>Build a remainder instruction that provides the remainder after divison of","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC8buildDiv__6signed5exact4nameAA7IRValue_pAaH_p_AaH_pS2bSStF":{"name":"buildDiv(_:_:signed:exact:name:)","abstract":"<p>Build a division instruction that divides the first value by the second","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC9buildICmp___4nameAA7IRValue_pAaF_p_AaF_pAA12IntPredicateOSStF":{"name":"buildICmp(_:_:_:name:)","abstract":"<p>Build an integer comparison between the two provided values using the","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC9buildFCmp___4nameAA7IRValue_pAaF_p_AaF_pAA13RealPredicateOSStF":{"name":"buildFCmp(_:_:_:name:)","abstract":"<p>Build a floating comparison between the two provided values using the","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC8buildNot_4nameAA7IRValue_pAaF_p_SStF":{"name":"buildNot(_:name:)","abstract":"<p>Build a bitwise logical not with the given value as an operand.</p>","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC8buildXor__4nameAA7IRValue_pAaF_p_AaF_pSStF":{"name":"buildXor(_:_:name:)","abstract":"<p>Build a bitwise logical exclusive OR with the given values as operands.</p>","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC7buildOr__4nameAA7IRValue_pAaF_p_AaF_pSStF":{"name":"buildOr(_:_:name:)","abstract":"<p>Build a bitwise logical OR with the given values as operands.</p>","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC8buildAnd__4nameAA7IRValue_pAaF_p_AaF_pSStF":{"name":"buildAnd(_:_:name:)","abstract":"<p>Build a bitwise logical AND with the given values as operands.</p>","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC8buildShl__4nameAA7IRValue_pAaF_p_AaF_pSStF":{"name":"buildShl(_:_:name:)","abstract":"<p>Build a left-shift instruction of the first value by an amount in the","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC8buildShr__12isArithmetic4nameAA7IRValue_pAaG_p_AaG_pSbSStF":{"name":"buildShr(_:_:isArithmetic:name:)","abstract":"<p>Build a right-shift instruction of the first value by an amount in the","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC8buildPhi_4nameAA0D4NodeVAA6IRType_p_SStF":{"name":"buildPhi(_:name:)","abstract":"<p>Build a phi node with the given type acting as the result of any incoming","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC11buildSelect_4then4else4nameAA7IRValue_pAaH_p_AaH_pAaH_pSStF":{"name":"buildSelect(_:then:else:name:)","abstract":"<p>Build a select instruction to choose a value based on a condition without","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC11buildSwitch_4else9caseCountAA0D0VAA7IRValue_p_AA10BasicBlockVSitF":{"name":"buildSwitch(_:else:caseCount:)","abstract":"<p>Build a branch table that branches on the given value with the given","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC11addFunction_4typeAA0D0CSS_AA0D4TypeVtF":{"name":"addFunction(_:type:)","abstract":"<p>Build a named function body with the given type.</p>","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC12createStruct4name5types8isPackedAA0D4TypeVSS_SayAA6IRType_pGSgSbtF":{"name":"createStruct(name:types:isPacked:)","abstract":"<p>Build a named structure definition.</p>","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC7buildBryAA7IRValue_pAA10BasicBlockVF":{"name":"buildBr(_:)","abstract":"<p>Build an unconditional branch to the given basic block.</p>","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC11buildCondBr9condition4then4elseAA7IRValue_pAaH_p_AA10BasicBlockVAJtF":{"name":"buildCondBr(condition:then:else:)","abstract":"<p>Build a condition branch that branches to the first basic block if the","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC15buildIndirectBr7address12destinationsAA7IRValue_pAA10BasicBlockV7AddressV_SayAIGtF":{"name":"buildIndirectBr(address:destinations:)","abstract":"<p>Build an indirect branch to a label within the current function.</p>","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC8buildRetyAA7IRValue_pAaE_pF":{"name":"buildRet(_:)","abstract":"<p>Build a return from the current function back to the calling function","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC12buildRetVoidAA7IRValue_pyF":{"name":"buildRetVoid()","abstract":"<p>Build a void return from the current function.</p>","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC16buildUnreachableAA7IRValue_pyF":{"name":"buildUnreachable()","abstract":"<p>Build an unreachable instruction in the current function.</p>","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC17buildRetAggregate2ofAA7IRValue_pSayAaF_pG_tF":{"name":"buildRetAggregate(of:)","abstract":"<p>Build a return from the current function back to the calling function with","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC9buildCall_4args4nameAA0D0VAA7IRValue_p_SayAaI_pGSStF":{"name":"buildCall(_:args:name:)","abstract":"<p>Build a call to the given function with the given arguments to transfer","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC11buildInvoke_4args4next5catch4nameAA0D0VAA7IRValue_p_SayAaK_pGAA10BasicBlockVANSStF":{"name":"buildInvoke(_:args:next:catch:name:)","abstract":"<p>Build a call to the given function with the given arguments with the","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC15buildLandingPad9returning13personalityFn7clauses7cleanup4nameAA7IRValue_pAA6IRType_p_AA8FunctionCSgSayAA0dE6ClauseOGSbSStF":{"name":"buildLandingPad(returning:personalityFn:clauses:cleanup:name:)","abstract":"<p>Build a landing pad to specify that a basic block is where an exception","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC11buildResumeyAA7IRValue_pAaE_pF":{"name":"buildResume(_:)","abstract":"<p>Build a resume instruction to resume propagation of an existing","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC10buildVAArg_4type4nameAA7IRValue_pAaG_p_AA6IRType_pSStF":{"name":"buildVAArg(_:type:name:)","abstract":"<p>Build a <code>va_arg</code> instruction to access arguments passed through the","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC11buildAlloca4type5count9alignment4nameAA7IRValue_pAA6IRType_p_AaI_pSgAA9AlignmentVSStF":{"name":"buildAlloca(type:count:alignment:name:)","abstract":"<p>Build an <code>alloca</code> to allocate stack memory to hold a value of the given","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC10buildStore_2to8ordering8volatile9alignmentAA7IRValue_pAaI_p_AaI_pAA14AtomicOrderingOSbAA9AlignmentVtF":{"name":"buildStore(_:to:ordering:volatile:alignment:)","abstract":"<p>Build a store instruction that stores the first value into the location","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC9buildLoad_8ordering8volatile9alignment4nameAA7IRValue_pAaI_p_AA14AtomicOrderingOSbAA9AlignmentVSStF":{"name":"buildLoad(_:ordering:volatile:alignment:name:)","abstract":"<p>Build a load instruction that loads a value from the location in the","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC16buildInBoundsGEP_7indices4nameAA7IRValue_pAaG_p_SayAaG_pGSStF":{"name":"buildInBoundsGEP(_:indices:name:)","abstract":"<p>Build a <code>GEP</code> (Get Element Pointer) instruction with a resultant value","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC8buildGEP_7indices4nameAA7IRValue_pAaG_p_SayAaG_pGSStF":{"name":"buildGEP(_:indices:name:)","abstract":"<p>Build a GEP (Get Element Pointer) instruction.</p>","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC14buildStructGEP_5index4nameAA7IRValue_pAaG_p_SiSStF":{"name":"buildStructGEP(_:index:name:)","abstract":"<p>Build a GEP (Get Element Pointer) instruction suitable for indexing into","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC17buildExtractValue_5index4nameAA7IRValue_pAaG_p_SiSStF":{"name":"buildExtractValue(_:index:name:)","abstract":"<p>Build an ExtractValue instruction to retrieve an indexed value from a","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC11buildIsNull_4nameAA7IRValue_pAaF_p_SStF":{"name":"buildIsNull(_:name:)","abstract":"<p>Build a comparision instruction that returns whether the given operand is","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC14buildIsNotNull_4nameAA7IRValue_pAaF_p_SStF":{"name":"buildIsNotNull(_:name:)","abstract":"<p>Build a comparision instruction that returns whether the given operand is","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC19buildTruncOrBitCast_4type4nameAA7IRValue_pAaG_p_AA6IRType_pSStF":{"name":"buildTruncOrBitCast(_:type:name:)","abstract":"<p>Build an instruction that either performs a truncation or a bitcast of","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC18buildZExtOrBitCast_4type4nameAA7IRValue_pAaG_p_AA6IRType_pSStF":{"name":"buildZExtOrBitCast(_:type:name:)","abstract":"<p>Build an instruction that either performs a zero extension or a bitcast of","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC12buildBitCast_4type4nameAA7IRValue_pAaG_p_AA6IRType_pSStF":{"name":"buildBitCast(_:type:name:)","abstract":"<p>Build a bitcast instruction to convert the given value to a value of the","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC11buildFPCast_4type4nameAA7IRValue_pAaG_p_AA6IRType_pSStF":{"name":"buildFPCast(_:type:name:)","abstract":"<p>Build a cast instruction to convert the given floating-point value to a","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC18buildAddrSpaceCast_4type4nameAA7IRValue_pAaG_p_AA6IRType_pSStF":{"name":"buildAddrSpaceCast(_:type:name:)","abstract":"<p>Build an address space cast instruction that converts a pointer value","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC10buildTrunc_4type4nameAA7IRValue_pAaG_p_AA6IRType_pSStF":{"name":"buildTrunc(_:type:name:)","abstract":"<p>Build a truncate instruction to truncate the given value to the given","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC9buildSExt_4type4nameAA7IRValue_pAaG_p_AA6IRType_pSStF":{"name":"buildSExt(_:type:name:)","abstract":"<p>Build a sign extension instruction to sign extend the given value to","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC9buildZExt_4type4nameAA7IRValue_pAaG_p_AA6IRType_pSStF":{"name":"buildZExt(_:type:name:)","abstract":"<p>Build a zero extension instruction to zero extend the given value to the","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC13buildIntToPtr_4type4nameAA7IRValue_pAaG_p_AA11PointerTypeVSStF":{"name":"buildIntToPtr(_:type:name:)","abstract":"<p>Build an integer-to-pointer instruction to convert the given value to the","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC13buildPtrToInt_4type4nameAA7IRValue_pAaG_p_AA0F4TypeVSStF":{"name":"buildPtrToInt(_:type:name:)","abstract":"<p>Build a pointer-to-integer instruction to convert the given pointer value","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC12buildIntToFP_4type6signed4nameAA7IRValue_pAaH_p_AA9FloatTypeVSbSStF":{"name":"buildIntToFP(_:type:signed:name:)","abstract":"<p>Build an integer-to-floating instruction to convert the given integer","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC12buildFPToInt_4type6signed4nameAA7IRValue_pAaH_p_AA0E4TypeVSbSStF":{"name":"buildFPToInt(_:type:signed:name:)","abstract":"<p>Build a floating-to-integer instruction to convert the given floating","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC12buildAlignOfyAA7IRValue_pAA6IRType_pF":{"name":"buildAlignOf(_:)","abstract":"<p>Build a constant expression that returns the alignment of the given type","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC11buildSizeOfyAA7IRValue_pAA6IRType_pF":{"name":"buildSizeOf(_:)","abstract":"<p>Build a constant expression that returns the size of the given type in","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC22buildPointerDifference__4nameAA7IRValue_pAaF_p_AaF_pSStF":{"name":"buildPointerDifference(_:_:name:)","abstract":"<p>Build an expression that returns the difference between two pointer","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC10buildFence8ordering14singleThreaded4nameAA7IRValue_pAA14AtomicOrderingO_SbSStF":{"name":"buildFence(ordering:singleThreaded:name:)","abstract":"<p>Build a fence instruction that introduces <q>happens-before</q> edges between","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC18buildAtomicCmpXchg3ptr2of2to15successOrdering07failureK014singleThreadedAA7IRValue_pAaK_p_AaK_pAaK_pAA0dK0OAMSbtF":{"name":"buildAtomicCmpXchg(ptr:of:to:successOrdering:failureOrdering:singleThreaded:)","abstract":"<p>Build an atomic compare-and-exchange instruction to atomically modify","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC14buildAtomicRMW8atomicOp3ptr5value8ordering14singleThreadedAA7IRValue_pAA0D24ReadModifyWriteOperationO_AaJ_pAaJ_pAA0D8OrderingOSbtF":{"name":"buildAtomicRMW(atomicOp:ptr:value:ordering:singleThreaded:)","abstract":"<p>Build an atomic read-modify-write instruction to atomically modify memory.</p>","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC11buildMalloc_5count4nameAA7IRValue_pAA6IRType_p_AaG_pSgSStF":{"name":"buildMalloc(_:count:name:)","abstract":"<p>Build a call to the C standard library <code>malloc</code> instruction.</p>","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC9buildFreeyAA7IRValue_pAaE_pF":{"name":"buildFree(_:)","abstract":"<p>Build a call to the C standard library <code>free</code> function, with the provided","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC11buildMemset2to2of6length9alignment8volatileyAA7IRValue_p_AaJ_pAaJ_pAA9AlignmentVSbtF":{"name":"buildMemset(to:of:length:alignment:volatile:)","abstract":"<p>Builds a call to the <code>llvm.memset.*</code> family of intrinsics to fill a","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC11buildMemCpy2to_4from_6length8volatileyAA7IRValue_p_AA9AlignmentVAaI_pAkaI_pSbtF":{"name":"buildMemCpy(to:_:from:_:length:volatile:)","abstract":"<p>Builds a call to the <code>llvm.memcpy.*</code> family of intrinsics to copy a block","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC12buildMemMove2to_4from_6length8volatileyAA7IRValue_p_AA9AlignmentVAaI_pAkaI_pSbtF":{"name":"buildMemMove(to:_:from:_:length:volatile:)","abstract":"<p>Builds a call to the <code>llvm.memmove.*</code> family of intrinsics to move a","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC16buildInsertValue9aggregate7element5index4nameAA7IRValue_pAaI_p_AaI_pSiSStF":{"name":"buildInsertValue(aggregate:element:index:name:)","abstract":"<p>Build an instruction to insert a value into a member field in an","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC17buildExtractValue9aggregate5index4nameAA7IRValue_pAaH_p_SiSStF":{"name":"buildExtractValue(aggregate:index:name:)","abstract":"<p>Build an instruction to extract a value from a member field in an","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC18buildInsertElement6vector7element5index4nameAA7IRValue_pAaI_p_AaI_pAaI_pSStF":{"name":"buildInsertElement(vector:element:index:name:)","abstract":"<p>Build a vector insert instruction to nondestructively insert the given","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC19buildExtractElement6vector5index4nameAA7IRValue_pAaH_p_AaH_pSStF":{"name":"buildExtractElement(vector:index:name:)","abstract":"<p>Build an instruction to extract a single scalar element from a vector at","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC18buildShuffleVector_3and4mask4nameAA7IRValue_pAaH_p_AaH_pAaH_pSStF":{"name":"buildShuffleVector(_:and:mask:name:)","abstract":"<p>Build a vector shuffle instruction to construct a permutation of elements","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC9addGlobal_4type12addressSpaceAA0D0CSS_AA6IRType_pSiSgtF":{"name":"addGlobal(_:type:addressSpace:)","abstract":"<p>Build a named global of the given type.</p>","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC9addGlobal_11initializer12addressSpaceAA0D0CSS_AA7IRValue_pSiSgtF":{"name":"addGlobal(_:initializer:addressSpace:)","abstract":"<p>Build a named global of the given type.</p>","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC15addGlobalString4name5valueAA0D0CSS_SStF":{"name":"addGlobalString(name:value:)","abstract":"<p>Build a named global string consisting of an array of <code>i8</code> type filled in","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC17buildGlobalString_4nameAA0D0CSS_SStF":{"name":"buildGlobalString(_:name:)","abstract":"<p>Build a named global variable containing the characters of the given","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC20buildGlobalStringPtr_4nameAA7IRValue_pSS_SStF":{"name":"buildGlobalStringPtr(_:name:)","abstract":"<p>Build a named global variable containing a pointer to the contents of the","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC8addAlias4name2to4typeAA0D0VSS_AA8IRGlobal_pAA6IRType_ptF":{"name":"addAlias(name:to:type:)","abstract":"<p>Build a named alias to a global value or a constant expression.</p>","parent_name":"IRBuilder"},"Classes/IRBuilder.html#/s:4LLVM9IRBuilderC19buildInlineAssembly_7dialect4type11constraints14hasSideEffects17needsAlignedStackAA7IRValue_pSS_AA0dE7DialectOAA12FunctionTypeVSSS2btF":{"name":"buildInlineAssembly(_:dialect:type:constraints:hasSideEffects:needsAlignedStack:)","abstract":"<p>Build a value representing an inline assembly expression (as opposed to","parent_name":"IRBuilder"},"Classes/Global.html#/s:4LLVM6GlobalC23isExternallyInitializedSbvp":{"name":"isExternallyInitialized","abstract":"<p>Returns whether this global variable has no initializer because it makes","parent_name":"Global"},"Classes/Global.html#/s:4LLVM6GlobalC11initializerAA7IRValue_pSgvp":{"name":"initializer","abstract":"<p>Retrieves the initializer for this global variable, if it exists.</p>","parent_name":"Global"},"Classes/Global.html#/s:4LLVM6GlobalC02isB8ConstantSbvp":{"name":"isGlobalConstant","abstract":"<p>Returns whether this global variable is a constant, whether or not the","parent_name":"Global"},"Classes/Global.html#/s:4LLVM6GlobalC13isThreadLocalSbvp":{"name":"isThreadLocal","abstract":"<p>Returns whether this global variable is thread-local.  That is, returns","parent_name":"Global"},"Classes/Global.html#/s:4LLVM6GlobalC16threadLocalModelAA06ThreaddE0Ovp":{"name":"threadLocalModel","abstract":"<p>Accesses the model of reference for this global variable if it is","parent_name":"Global"},"Classes/Global.html#/s:4LLVM6GlobalC8previousACSgyF":{"name":"previous()","abstract":"<p>Retrieves the previous global in the module, if there is one.</p>","parent_name":"Global"},"Classes/Global.html#/s:4LLVM6GlobalC4nextACSgyF":{"name":"next()","abstract":"<p>Retrieves the next global in the module, if there is one.</p>","parent_name":"Global"},"Classes/Global.html#/s:4LLVM6GlobalC6deleteyyF":{"name":"delete()","abstract":"<p>Deletes the global variable from its containing module.</p>","parent_name":"Global"},"Classes/Global.html#/s:4LLVM6GlobalC02asA0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM value object.</p>","parent_name":"Global"},"Classes/Function.html#/s:4LLVM8FunctionC8metadataAA0B8MetadataVvp":{"name":"metadata","abstract":"<p>Accesses the metadata associated with this function.</p>","parent_name":"Function"},"Classes/Function.html#/s:4LLVM8FunctionC17callingConventionAA07CallingD0Ovp":{"name":"callingConvention","abstract":"<p>Accesses the calling convention for this function.</p>","parent_name":"Function"},"Classes/Function.html#/s:4LLVM8FunctionC10entryBlockAA05BasicD0VSgvp":{"name":"entryBlock","abstract":"<p>Retrieves the entry block of this function.</p>","parent_name":"Function"},"Classes/Function.html#/s:4LLVM8FunctionC10firstBlockAA05BasicD0VSgvp":{"name":"firstBlock","abstract":"<p>Retrieves the first basic block in this function&rsquo;s body.</p>","parent_name":"Function"},"Classes/Function.html#/s:4LLVM8FunctionC9lastBlockAA05BasicD0VSgvp":{"name":"lastBlock","abstract":"<p>Retrieves the last basic block in this function&rsquo;s body.</p>","parent_name":"Function"},"Classes/Function.html#/s:4LLVM8FunctionC11basicBlockss11AnySequenceVyAA10BasicBlockVGvp":{"name":"basicBlocks","abstract":"<p>Retrieves the sequence of basic blocks that make up this function&rsquo;s body.</p>","parent_name":"Function"},"Classes/Function.html#/s:4LLVM8FunctionC15basicBlockCountSivp":{"name":"basicBlockCount","abstract":"<p>Retrieves the number of basic blocks in this function</p>","parent_name":"Function"},"Classes/Function.html#/s:4LLVM8FunctionC7address2ofAA10BasicBlockV7AddressVSgAG_tF":{"name":"address(of:)","abstract":"<p>Computes the address of the specified basic block in this function.</p>","parent_name":"Function"},"Classes/Function.html#/s:4LLVM8FunctionC8previousACSgyF":{"name":"previous()","abstract":"<p>Retrieves the previous function in the module, if there is one.</p>","parent_name":"Function"},"Classes/Function.html#/s:4LLVM8FunctionC4nextACSgyF":{"name":"next()","abstract":"<p>Retrieves the next function in the module, if there is one.</p>","parent_name":"Function"},"Classes/Function.html#/s:4LLVM8FunctionC9parameter2atAA9ParameterVSgSi_tF":{"name":"parameter(at:)","abstract":"<p>Retrieves a parameter at the given index, if it exists.</p>","parent_name":"Function"},"Classes/Function.html#/s:4LLVM8FunctionC14firstParameterAA0D0VSgvp":{"name":"firstParameter","abstract":"<p>Retrieves a parameter at the first index, if it exists.</p>","parent_name":"Function"},"Classes/Function.html#/s:4LLVM8FunctionC13lastParameterAA0D0VSgvp":{"name":"lastParameter","abstract":"<p>Retrieves a parameter at the last index, if it exists.</p>","parent_name":"Function"},"Classes/Function.html#/s:4LLVM8FunctionC10parametersSayAA7IRValue_pGvp":{"name":"parameters","abstract":"<p>Retrieves the list of all parameters for this function, in order.</p>","parent_name":"Function"},"Classes/Function.html#/s:4LLVM8FunctionC14parameterCountSivp":{"name":"parameterCount","abstract":"<p>Retrieves the number of parameter values in this function.</p>","parent_name":"Function"},"Classes/Function.html#/s:4LLVM8FunctionC16appendBasicBlock5named2inAA0dE0VSS_AA7ContextCSgtF":{"name":"appendBasicBlock(named:in:)","abstract":"<p>Appends the named basic block to the body of this function.</p>","parent_name":"Function"},"Classes/Function.html#/s:4LLVM8FunctionC6deleteyyF":{"name":"delete()","abstract":"<p>Deletes the function from its containing module.</p>","parent_name":"Function"},"Classes/Function.html#/s:4LLVM8FunctionC02asA0s13OpaquePointerVyF":{"name":"asLLVM()","abstract":"<p>Retrieves the underlying LLVM value object.</p>","parent_name":"Function"},"Classes/Function.html#/s:4LLVM8FunctionC12addAttribute_5value2toAA04EnumD0VAA0D4KindO_s6UInt64VAA0D5IndexOtF":{"name":"addAttribute(_:value:to:)","abstract":"<p>Adds an enum attribute to the function, its return value or one of its","parent_name":"Function"},"Classes/Function.html#/s:4LLVM8FunctionC12addAttribute_5value2toAA06StringD0VSS_SSAA0D5IndexOtF":{"name":"addAttribute(_:value:to:)","abstract":"<p>Adds a string attribute to the function, its return value or one of its","parent_name":"Function"},"Classes/Function.html#/s:4LLVM8FunctionC15removeAttribute_4fromyAA0D0_p_AA0D5IndexOtF":{"name":"removeAttribute(_:from:)","abstract":"<p>Removes an attribute from the function, its return value or one of its","parent_name":"Function"},"Classes/Function.html#/s:4LLVM8FunctionC15removeAttribute_4fromyAA0D4KindO_AA0D5IndexOtF":{"name":"removeAttribute(_:from:)","abstract":"<p>Removes an enum attribute from the function, its return value or one of","parent_name":"Function"},"Classes/Function.html#/s:4LLVM8FunctionC15removeAttribute_4fromySS_AA0D5IndexOtF":{"name":"removeAttribute(_:from:)","abstract":"<p>Removes a string attribute from the function, its return value or one of","parent_name":"Function"},"Classes/Function.html#/s:4LLVM8FunctionC10attributes2atSayAA9Attribute_pGAA0E5IndexO_tF":{"name":"attributes(at:)","abstract":"<p>Gets the attributes of the function, its return value or its parameters.</p>","parent_name":"Function"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC6moduleAA6ModuleCvp":{"name":"module","abstract":"<p>The module this <code>DIBuilder</code> is associated with.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC6module15allowUnresolvedAcA6ModuleC_Sbtcfc":{"name":"init(module:allowUnresolved:)","abstract":"<p>Initializes a new <code>DIBuilder</code> object.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC8finalizeyyF":{"name":"finalize()","abstract":"<p>Construct any deferred debug info descriptors.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderCfd":{"name":"deinit","abstract":"<p>Deinitialize this value and dispose of its resources.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC12buildDeclare2of6before8metadata4expr8locationyAA7IRValue_p_AA11InstructionVAA21LocalVariableMetadataVAA010ExpressionN0VAA13DebugLocationVtF":{"name":"buildDeclare(of:before:metadata:expr:location:)","abstract":"<p>Builds a call to a debug intrinsic for declaring a local variable and","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC12buildDeclare2of7atEndOf8metadata4expr8locationyAA7IRValue_p_AA10BasicBlockVAA21LocalVariableMetadataVAA010ExpressionQ0VAA13DebugLocationVtF":{"name":"buildDeclare(of:atEndOf:metadata:expr:location:)","abstract":"<p>Builds a call to a debug intrinsic for declaring a local variable and","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC13buildDbgValue2of2to6before4expr8locationyAA7IRValue_p_AA21LocalVariableMetadataVAA11InstructionVAA010ExpressionN0VAA13DebugLocationVtF":{"name":"buildDbgValue(of:to:before:expr:location:)","abstract":"<p>Builds a call to a debug intrinsic for providing information about the","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC13buildDbgValue2of2to7atEndOf4expr8locationyAA7IRValue_p_AA21LocalVariableMetadataVAA10BasicBlockVAA010ExpressionP0VAA13DebugLocationVtF":{"name":"buildDbgValue(of:to:atEndOf:expr:location:)","abstract":"<p>Builds a call to a debug intrinsic for providing information about the","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC16buildCompileUnit3for2in4kind9optimized18splitDebugInlining21debugInfoForProfiling5flags14runtimeVersion0J9DWARFPath8identityAA0dE8MetadataVAA19DWARFSourceLanguageO_AA04FileV0VAA17DWARFEmissionKindOS3bSaySSGSiS2StF":{"name":"buildCompileUnit(for:in:kind:optimized:splitDebugInlining:debugInfoForProfiling:flags:runtimeVersion:splitDWARFPath:identity:)","abstract":"<p>A CompileUnit provides an anchor for all debugging information generated","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC9buildFile5named2inAA0D8MetadataVSS_SStF":{"name":"buildFile(named:in:)","abstract":"<p>Create a file descriptor to hold debugging information for a file.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC11buildModule5named5scope6macros11includePath0H10SystemRootAA0D8MetadataVSS_AA7DIScope_pSaySSGS2StF":{"name":"buildModule(named:scope:macros:includePath:includeSystemRoot:)","abstract":"<p>Creates a new descriptor for a module with the specified parent scope.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC14buildNameSpace5named5scope14exportsSymbolsAA0dE8MetadataVSS_AA7DIScope_pSbtF":{"name":"buildNameSpace(named:scope:exportsSymbols:)","abstract":"<p>Creates a new descriptor for a namespace with the specified parent scope.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC13buildFunction5named11linkageName5scope4file4line0H4Line4type5flags7isLocal0N10Definition0N9OptimizedAA0D8MetadataVSS_SSAA7DIScope_pAA04FileR0VS2iAA16DISubroutineTypeVAA7DIFlagsVS3btF":{"name":"buildFunction(named:linkageName:scope:file:line:scopeLine:type:flags:isLocal:isDefinition:isOptimized:)","abstract":"<p>Create a new descriptor for the specified subprogram.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC17buildLexicalBlock5scope4file4line6columnAA0dE8MetadataVAA7DIScope_p_AA04FileJ0VS2itF":{"name":"buildLexicalBlock(scope:file:line:column:)","abstract":"<p>Create a descriptor for a lexical block with the specified parent context.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC21buildLexicalBlockFile5scope4file13discriminatorAA0deF8MetadataVAA7DIScope_p_AA0fJ0VSitF":{"name":"buildLexicalBlockFile(scope:file:discriminator:)","abstract":"<p>Create a descriptor for a lexical block with a new file attached.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC18buildLocalVariable5named5scope4file4line4type14alwaysPreserve5flags9alignmentAA0dE8MetadataVSS_AA7DIScope_pAA04FileO0VSiAA6DIType_pSbAA7DIFlagsVAA9AlignmentVtF":{"name":"buildLocalVariable(named:scope:file:line:type:alwaysPreserve:flags:alignment:)","abstract":"<p>Create a new descriptor for a local auto variable.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC22buildParameterVariable5named5index5scope4file4line4type14alwaysPreserve5flagsAA05LocalE8MetadataVSS_SiAA7DIScope_pAA04FileP0VSiAA6DIType_pSbAA7DIFlagsVtF":{"name":"buildParameterVariable(named:index:scope:file:line:type:alwaysPreserve:flags:)","abstract":"<p>Create a new descriptor for a function parameter variable.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC18buildDebugLocation2at2in9inlinedAtAA0dE0VSi4line_Si6columnt_AA7DIScope_pAaL_pSgtF":{"name":"buildDebugLocation(at:in:inlinedAt:)","abstract":"<p>Creates a new debug location that describes a source location.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC19buildSubroutineType2in14parameterTypes06returnE05flagsAA012DISubroutineE0VAA12FileMetadataV_SayAA6DIType_pGAaM_pSgAA7DIFlagsVtF":{"name":"buildSubroutineType(in:parameterTypes:returnType:flags:)","abstract":"<p>Create subroutine type.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC20buildEnumerationType5named5scope4file4line4size9alignment8elements010underlyingE0AA6DIType_pSS_AA7DIScope_pAA12FileMetadataVSiAA4SizeVAA9AlignmentVSayAaM_pGAaM_ptF":{"name":"buildEnumerationType(named:scope:file:line:size:alignment:elements:underlyingType:)","abstract":"<p>Create a debugging information entry for an enumeration.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC14buildUnionType5named5scope4file4line4size9alignment5flags8elements14runtimeVersion8uniqueIDAA6DIType_pSS_AA7DIScope_pAA12FileMetadataVSiAA4SizeVAA9AlignmentVAA7DIFlagsVSayAaO_pGSiSStF":{"name":"buildUnionType(named:scope:file:line:size:alignment:flags:elements:runtimeVersion:uniqueID:)","abstract":"<p>Create a debugging information entry for a union.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC14buildArrayType2of4size9alignment10subscriptsAA6DIType_pAaI_p_AA4SizeVAA9AlignmentVSaySnySiGGtF":{"name":"buildArrayType(of:size:alignment:subscripts:)","abstract":"<p>Create a debugging information entry for an array.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC15buildVectorType2of4size9alignment10subscriptsAA6DIType_pAaI_p_AA4SizeVAA9AlignmentVSaySnySiGGtF":{"name":"buildVectorType(of:size:alignment:subscripts:)","abstract":"<p>Create a debugging information entry for a vector.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC20buildUnspecifiedType5namedAA6DIType_pSS_tF":{"name":"buildUnspecifiedType(named:)","abstract":"<p>Create a debugging information entry for a DWARF unspecified type.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC14buildBasicType5named8encoding5flags4sizeAA6DIType_pSS_AA011DIAttributeE8EncodingOAA7DIFlagsVAA4SizeVtF":{"name":"buildBasicType(named:encoding:flags:size:)","abstract":"<p>Create a debugging information entry for a basic type.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC16buildPointerType7pointee4size9alignment12addressSpace4nameAA6DIType_pAaJ_p_AA4SizeVAA9AlignmentVs6UInt32VSStF":{"name":"buildPointerType(pointee:size:alignment:addressSpace:name:)","abstract":"<p>Create a debugging information entry for a pointer.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC15buildStructType5named5scope4file4line4size9alignment5flags04baseE08elements12vtableHolder14runtimeVersion8uniqueIDAA6DIType_pSS_AA7DIScope_pAA12FileMetadataVSiAA4SizeVAA9AlignmentVAA7DIFlagsVAaQ_pSgSayAaQ_pGA_SiSStF":{"name":"buildStructType(named:scope:file:line:size:alignment:flags:baseType:elements:vtableHolder:runtimeVersion:uniqueID:)","abstract":"<p>Create a debugging information entry for a struct.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC15buildMemberType2of5scope4name4file4line4size9alignment6offset5flagsAA6DIType_pAaN_p_AA7DIScope_pSSAA12FileMetadataVSiAA4SizeVAA9AlignmentVAsA7DIFlagsVtF":{"name":"buildMemberType(of:scope:name:file:line:size:alignment:offset:flags:)","abstract":"<p>Create a debugging information entry for a member.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC21buildStaticMemberType2of5scope4name4file4line9alignment5flags12initialValueAA6DIType_pAaM_p_AA7DIScope_pSSAA12FileMetadataVSiAA9AlignmentVAA7DIFlagsVAA10IRConstant_pSgtF":{"name":"buildStaticMemberType(of:scope:name:file:line:alignment:flags:initialValue:)","abstract":"<p>Create a debugging information entry for a C++ static data member.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC22buildMemberPointerType7pointee04baseF04size9alignment5flagsAA6DIType_pAaJ_p_AaJ_pAA4SizeVAA9AlignmentVAA7DIFlagsVtF":{"name":"buildMemberPointerType(pointee:baseType:size:alignment:flags:)","abstract":"<p>Create a debugging information entry for a pointer to member.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC22buildObjectPointerType7pointeeAA6DIType_pAaF_p_tF":{"name":"buildObjectPointerType(pointee:)","abstract":"<p>Create a uniqued DIType* clone with FlagObjectPointer and","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC18buildQualifiedTypeyAA6DIType_pAA8DWARFTagO_AaE_ptF":{"name":"buildQualifiedType(_:_:)","abstract":"<p>Create a debugging information entry for a qualified type, e.g. &lsquo;const int&rsquo;.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC18buildReferenceTypeyAA6DIType_pAA8DWARFTagO_AaE_ptF":{"name":"buildReferenceType(_:_:)","abstract":"<p>Create a debugging information entry for a c++ style reference or rvalue","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC16buildNullPtrTypeAA6DIType_pyF":{"name":"buildNullPtrType()","abstract":"<p>Create C++11 nullptr type.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC12buildTypedef2of4name5scope4file4lineAA6DIType_pAaJ_p_SSAA7DIScope_pAA12FileMetadataVSitF":{"name":"buildTypedef(of:name:scope:file:line:)","abstract":"<p>Create a debugging information entry for a typedef.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC16buildInheritance2of2to10baseOffset018virtualBasePointerH05flagsAA6DIType_pAaJ_p_AaJ_pAA4SizeVAlA7DIFlagsVtF":{"name":"buildInheritance(of:to:baseOffset:virtualBasePointerOffset:flags:)","abstract":"<p>Create a debugging information entry to establish inheritance relationship","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC23buildForwardDeclaration5named3tag5scope4file4line4size9alignment15runtimeLanguage8uniqueIDAA6DIType_pSS_AA8DWARFTagOAA7DIScope_pAA12FileMetadataVSiAA4SizeVAA9AlignmentVSiSStF":{"name":"buildForwardDeclaration(named:tag:scope:file:line:size:alignment:runtimeLanguage:uniqueID:)","abstract":"<p>Create a permanent forward-declared type.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC29buildReplaceableCompositeType5named3tag5scope4file4line4size9alignment5flags14runtimeVersion8uniqueIDAA6DIType_pSS_AA8DWARFTagOAA7DIScope_pAA12FileMetadataVSiAA4SizeVAA9AlignmentVAA7DIFlagsVSiSStF":{"name":"buildReplaceableCompositeType(named:tag:scope:file:line:size:alignment:flags:runtimeVersion:uniqueID:)","abstract":"<p>Create a temporary forward-declared type.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC23buildBitFieldMemberType5named4type5scope4file4line4size6offset13storageOffset5flagsAA6DIType_pSS_AaN_pAA7DIScope_pAA12FileMetadataVSiAA4SizeVA2sA7DIFlagsVtF":{"name":"buildBitFieldMemberType(named:type:scope:file:line:size:offset:storageOffset:flags:)","abstract":"<p>Create a debugging information entry for a bit field member.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC14buildClassType5named11derivedFrom5scope4file4line4size9alignment6offset5flags8elements12vtableHolder8uniqueIDAA6DIType_pSS_AaQ_pSgAA7DIScope_pAA12FileMetadataVSiAA4SizeVAA9AlignmentVAwA7DIFlagsVSayAaQ_pGARSStF":{"name":"buildClassType(named:derivedFrom:scope:file:line:size:alignment:offset:flags:elements:vtableHolder:uniqueID:)","abstract":"<p>Create a debugging information entry for a class.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC19buildArtificialTypeyAA6DIType_pAaE_pF":{"name":"buildArtificialType(_:)","abstract":"<p>Create a uniqued DIType* clone with FlagArtificial set.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC19buildImportedModule2in9namespace4file4lineAA0D14EntityMetadataVAA7DIScope_p_AA09NameSpaceK0VAA04FileK0VSitF":{"name":"buildImportedModule(in:namespace:file:line:)","abstract":"<p>Create a descriptor for an imported module.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC19buildImportedModule2in7aliasee4file4lineAA0D14EntityMetadataVAA7DIScope_p_AjA04FileK0VSitF":{"name":"buildImportedModule(in:aliasee:file:line:)","abstract":"<p>Create a descriptor for an imported module.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC19buildImportedModule2in6module4file4lineAA0D14EntityMetadataVAA7DIScope_p_AA0eK0VAA04FileK0VSitF":{"name":"buildImportedModule(in:module:file:line:)","abstract":"<p>Create a descriptor for an imported module.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC24buildImportedDeclaration2in11declaration4file4line4nameAA0D14EntityMetadataVAA7DIScope_p_AA10IRMetadata_pAA04FileL0VSiSStF":{"name":"buildImportedDeclaration(in:declaration:file:line:name:)","abstract":"<p>Create a descriptor for an imported function.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC13buildObjCIVar3for4name4type4file4line4size9alignment6offset5flagsAA6DIType_pAA26ObjectiveCPropertyMetadataV_SSAaN_pAA04FileR0VSiAA4SizeVAA9AlignmentVAtA7DIFlagsVtF":{"name":"buildObjCIVar(for:name:type:file:line:size:alignment:offset:flags:)","abstract":"<p>Create a debugging information entry for Objective-C instance variable.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC17buildObjCProperty5named4type4file4line6getter6setter18propertyAttributesAA09ObjectiveE8MetadataVSS_AA6DIType_pAA04FileO0VSiS2SAA0nE9AttributeVtF":{"name":"buildObjCProperty(named:type:file:line:getter:setter:propertyAttributes:)","abstract":"<p>Create a debugging information entry for Objective-C property.</p>","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC15buildExpressionyAA0D8MetadataVSayAA15DWARFExpressionOGF":{"name":"buildExpression(_:)","abstract":"<p>Create a new descriptor for the specified variable which has a complex","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC22buildConstantExpresionyAA18ExpressionMetadataVSiF":{"name":"buildConstantExpresion(_:)","abstract":"<p>Create a new descriptor for the specified variable that does not have an","parent_name":"DIBuilder"},"Classes/DIBuilder.html#/s:4LLVM9DIBuilderC21buildGlobalExpression5named11linkageName4type5scope4file4line7isLocal10expression11declaration9alignmentAA0E8MetadataVSS_SSAA6DIType_pAA7DIScope_pAA04FileR0VSiSbAPSgAA10IRMetadata_pSgAA9AlignmentVtF":{"name":"buildGlobalExpression(named:linkageName:type:scope:file:line:isLocal:expression:declaration:alignment:)","abstract":"<p>Create a new descriptor for the specified variable.</p>","parent_name":"DIBuilder"},"Classes/Comdat/SelectionKind.html#/s:4LLVM6ComdatC13SelectionKindO3anyyA2EmF":{"name":"any","abstract":"<p>The linker may choose any COMDAT section with a matching key.</p>","parent_name":"SelectionKind"},"Classes/Comdat/SelectionKind.html#/s:4LLVM6ComdatC13SelectionKindO10exactMatchyA2EmF":{"name":"exactMatch","abstract":"<p>The linker may choose any identically-keyed COMDAT section and requires","parent_name":"SelectionKind"},"Classes/Comdat/SelectionKind.html#/s:4LLVM6ComdatC13SelectionKindO7largestyA2EmF":{"name":"largest","abstract":"<p>The linker chooses the identically-keyed COMDAT section with the largest","parent_name":"SelectionKind"},"Classes/Comdat/SelectionKind.html#/s:4LLVM6ComdatC13SelectionKindO12noDuplicatesyA2EmF":{"name":"noDuplicates","abstract":"<p>The COMDAT section with this key is unique.</p>","parent_name":"SelectionKind"},"Classes/Comdat/SelectionKind.html#/s:4LLVM6ComdatC13SelectionKindO8sameSizeyA2EmF":{"name":"sameSize","abstract":"<p>The linker may choose any identically-keyed COMDAT section and requires","parent_name":"SelectionKind"},"Classes/Comdat.html#/s:4LLVM6ComdatC13selectionKindAC09SelectionD0Ovp":{"name":"selectionKind","abstract":"<p>The selection kind for this COMDAT section.</p>","parent_name":"Comdat"},"Classes/Comdat/SelectionKind.html":{"name":"SelectionKind","abstract":"<p>A <code>Comdat.SelectionKind</code> describes the behavior of the linker when","parent_name":"Comdat"},"Classes/AttachedMetadata/Entry.html#/s:4LLVM16AttachedMetadataC5EntryV4kinds6UInt32Vvp":{"name":"kind","abstract":"<p>The metadata kind associated with this global metadata.</p>","parent_name":"Entry"},"Classes/AttachedMetadata/Entry.html#/s:4LLVM16AttachedMetadataC5EntryV8metadataAA10IRMetadata_pvp":{"name":"metadata","abstract":"<p>The metadata value associated with this entry.</p>","parent_name":"Entry"},"Classes/AttachedMetadata/PinnedKind.html#/s:4LLVM16AttachedMetadataC10PinnedKindO3dbgyA2EmF":{"name":"dbg","abstract":"<p>Debug information metadata.</p>","parent_name":"PinnedKind"},"Classes/AttachedMetadata/PinnedKind.html#/s:4LLVM16AttachedMetadataC10PinnedKindO4tbaayA2EmF":{"name":"tbaa","abstract":"<p>Type Based Alias Analysis metadata.</p>","parent_name":"PinnedKind"},"Classes/AttachedMetadata/PinnedKind.html#/s:4LLVM16AttachedMetadataC10PinnedKindO4profyA2EmF":{"name":"prof","abstract":"<p>Profiling metadata.</p>","parent_name":"PinnedKind"},"Classes/AttachedMetadata/PinnedKind.html#/s:4LLVM16AttachedMetadataC10PinnedKindO6fpmathyA2EmF":{"name":"fpmath","abstract":"<p>Floating-point math metadata.</p>","parent_name":"PinnedKind"},"Classes/AttachedMetadata/PinnedKind.html#/s:4LLVM16AttachedMetadataC10PinnedKindO5rangeyA2EmF":{"name":"range","abstract":"<p>Range metadata.</p>","parent_name":"PinnedKind"},"Classes/AttachedMetadata/PinnedKind.html#/s:4LLVM16AttachedMetadataC10PinnedKindO10tbaaStructyA2EmF":{"name":"tbaaStruct","abstract":"<p>Type Based Alias Analysis struct metadata.</p>","parent_name":"PinnedKind"},"Classes/AttachedMetadata/PinnedKind.html#/s:4LLVM16AttachedMetadataC10PinnedKindO13invariantLoadyA2EmF":{"name":"invariantLoad","abstract":"<p>Load addreess invariance metadata.</p>","parent_name":"PinnedKind"},"Classes/AttachedMetadata/PinnedKind.html#/s:4LLVM16AttachedMetadataC10PinnedKindO10aliasScopeyA2EmF":{"name":"aliasScope","abstract":"<p>Alias scope metadata.</p>","parent_name":"PinnedKind"},"Classes/AttachedMetadata/PinnedKind.html#/s:4LLVM16AttachedMetadataC10PinnedKindO7noaliasyA2EmF":{"name":"noalias","abstract":"<p>No-alias metadata.</p>","parent_name":"PinnedKind"},"Classes/AttachedMetadata/PinnedKind.html#/s:4LLVM16AttachedMetadataC10PinnedKindO11nontemporalyA2EmF":{"name":"nontemporal","abstract":"<p>Temporal metadata.</p>","parent_name":"PinnedKind"},"Classes/AttachedMetadata/PinnedKind.html#/s:4LLVM16AttachedMetadataC10PinnedKindO21memParallelLoopAccessyA2EmF":{"name":"memParallelLoopAccess","abstract":"<p>Loop memory access metadata.</p>","parent_name":"PinnedKind"},"Classes/AttachedMetadata/PinnedKind.html#/s:4LLVM16AttachedMetadataC10PinnedKindO7nonnullyA2EmF":{"name":"nonnull","abstract":"<p>Non-null metadata.</p>","parent_name":"PinnedKind"},"Classes/AttachedMetadata/PinnedKind.html#/s:4LLVM16AttachedMetadataC10PinnedKindO15dereferenceableyA2EmF":{"name":"dereferenceable","abstract":"<p>Dereferenceable metadata.</p>","parent_name":"PinnedKind"},"Classes/AttachedMetadata/PinnedKind.html#/s:4LLVM16AttachedMetadataC10PinnedKindO21dereferenceableOrNullyA2EmF":{"name":"dereferenceableOrNull","abstract":"<p>Dereferenceable or null metadata.</p>","parent_name":"PinnedKind"},"Classes/AttachedMetadata/PinnedKind.html#/s:4LLVM16AttachedMetadataC10PinnedKindO12makeImplicityA2EmF":{"name":"makeImplicit","abstract":"<p>Implicit checks metadata.</p>","parent_name":"PinnedKind"},"Classes/AttachedMetadata/PinnedKind.html#/s:4LLVM16AttachedMetadataC10PinnedKindO13unpredictableyA2EmF":{"name":"unpredictable","abstract":"<p>Unpredictable metadata.</p>","parent_name":"PinnedKind"},"Classes/AttachedMetadata/PinnedKind.html#/s:4LLVM16AttachedMetadataC10PinnedKindO14invariantGroupyA2EmF":{"name":"invariantGroup","abstract":"<p>Invariant group metadata.</p>","parent_name":"PinnedKind"},"Classes/AttachedMetadata/PinnedKind.html#/s:4LLVM16AttachedMetadataC10PinnedKindO5alignyA2EmF":{"name":"align","abstract":"<p>Alignment metadata.</p>","parent_name":"PinnedKind"},"Classes/AttachedMetadata/PinnedKind.html#/s:4LLVM16AttachedMetadataC10PinnedKindO4loopyA2EmF":{"name":"loop","abstract":"<p>Loop identifier metadata.</p>","parent_name":"PinnedKind"},"Classes/AttachedMetadata/PinnedKind.html#/s:4LLVM16AttachedMetadataC10PinnedKindO4typeyA2EmF":{"name":"type","abstract":"<p>Type metadata.</p>","parent_name":"PinnedKind"},"Classes/AttachedMetadata/PinnedKind.html#/s:4LLVM16AttachedMetadataC10PinnedKindO13sectionPrefixyA2EmF":{"name":"sectionPrefix","abstract":"<p>Section prefix metadata.</p>","parent_name":"PinnedKind"},"Classes/AttachedMetadata/PinnedKind.html#/s:4LLVM16AttachedMetadataC10PinnedKindO14absoluteSymbolyA2EmF":{"name":"absoluteSymbol","abstract":"<p>Absolute symbol metadata.</p>","parent_name":"PinnedKind"},"Classes/AttachedMetadata/PinnedKind.html#/s:4LLVM16AttachedMetadataC10PinnedKindO10associatedyA2EmF":{"name":"associated","abstract":"<p>Associated metadata.</p>","parent_name":"PinnedKind"},"Classes/AttachedMetadata/PinnedKind.html#/s:4LLVM16AttachedMetadataC10PinnedKindO7calleesyA2EmF":{"name":"callees","abstract":"<p>Callees metadata.</p>","parent_name":"PinnedKind"},"Classes/AttachedMetadata/PinnedKind.html#/s:4LLVM16AttachedMetadataC10PinnedKindO7irrLoopyA2EmF":{"name":"irrLoop","abstract":"<p>Irreducible loop metadata.</p>","parent_name":"PinnedKind"},"Classes/AttachedMetadata/PinnedKind.html#/s:4LLVM16AttachedMetadataC10PinnedKindO11accessGroupyA2EmF":{"name":"accessGroup","abstract":"<p>Memory access group metadata.</p>","parent_name":"PinnedKind"},"Classes/AttachedMetadata/PinnedKind.html#/s:4LLVM16AttachedMetadataC10PinnedKindO8callbackyA2EmF":{"name":"callback","abstract":"<p>Callback metadata.</p>","parent_name":"PinnedKind"},"Classes/AttachedMetadata/PinnedKind.html":{"name":"PinnedKind","abstract":"<p>Metadata kinds that are known to LLVM.</p>","parent_name":"AttachedMetadata"},"Classes/AttachedMetadata/Entry.html":{"name":"Entry","abstract":"<p>Represents an entry in the module flags structure.</p>","parent_name":"AttachedMetadata"},"Classes/AttachedMetadata.html#/s:4LLVM16AttachedMetadataCfd":{"name":"deinit","abstract":"<p>Deinitialize this value and dispose of its resources.</p>","parent_name":"AttachedMetadata"},"Classes/AttachedMetadata.html#/s:4LLVM16AttachedMetadataCyAC5EntryVSicip":{"name":"subscript(_:)","abstract":"<p>Retrieves a flag at the given index.</p>","parent_name":"AttachedMetadata"},"Classes/AttachedMetadata.html#/s:4LLVM16AttachedMetadataC5countSivp":{"name":"count","abstract":"<p>Returns the number of metadata entries.</p>","parent_name":"AttachedMetadata"},"Classes/Context.html#/s:4LLVM7ContextC6globalACvpZ":{"name":"global","abstract":"<p>Retrieves the global context instance.</p>","parent_name":"Context"},"Classes/Context.html#/s:4LLVM7ContextCACycfc":{"name":"init()","abstract":"<p>Creates a <code>Context</code> object using <code>LLVMContextCreate</code></p>","parent_name":"Context"},"Classes/Context.html#/s:4LLVM7ContextC4llvm04ownsB0ACs13OpaquePointerV_Sbtcfc":{"name":"init(llvm:ownsContext:)","abstract":"<p>Creates a <code>Context</code> object from an <code>LLVMContextRef</code> object.</p>","parent_name":"Context"},"Classes/Context.html#/s:4LLVM7ContextC17discardValueNamesSbvp":{"name":"discardValueNames","abstract":"<p>Returns whether the given context is set to discard all value names.</p>","parent_name":"Context"},"Classes/Context.html#/s:4LLVM7ContextCfd":{"name":"deinit","abstract":"<p>Deinitialize this value and dispose of its resources.</p>","parent_name":"Context"},"Classes/Context.html#/s:4LLVM7ContextC12metadataKind5named2ins6UInt32VSS_ACtF":{"name":"metadataKind(named:in:)","abstract":"<p>Searches for and retrieves a metadata kind with the given name in this","parent_name":"Context"},"Classes/Context.html":{"name":"Context","abstract":"<p>A <code>Context</code> represents execution states for the core LLVM IR system.</p>"},"Classes/AttachedMetadata.html":{"name":"AttachedMetadata","abstract":"<p>Represents a sequence of metadata entries attached to a global value that"},"Classes/Comdat.html":{"name":"Comdat","abstract":"<p>A <code>Comdat</code> object represents a particular COMDAT section in a final"},"Classes/DIBuilder.html":{"name":"DIBuilder","abstract":"<p>A <code>DIBuilder</code> is a helper object used to generate debugging information in"},"Classes/Function.html":{"name":"Function","abstract":"<p>A <code>Function</code> represents a named function body in LLVM IR source.  Functions"},"Classes/Global.html":{"name":"Global","abstract":"<p>A <code>Global</code> represents a region of memory allocated at compile time instead"},"Classes/IRBuilder.html":{"name":"IRBuilder","abstract":"<p>An <code>IRBuilder</code> is a helper object that generates LLVM instructions.  IR"},"Classes/Intrinsic.html":{"name":"Intrinsic","abstract":"<p>An <code>Intrinsic</code> represents an intrinsic known to LLVM.</p>"},"Classes/JIT.html":{"name":"JIT","abstract":"<p>A <code>JIT</code> is a Just-In-Time compiler that will compile and execute LLVM IR"},"Classes/MemoryBuffer.html":{"name":"MemoryBuffer","abstract":"<p><code>MemoryBuffer</code> provides simple read-only access to a block of memory, and"},"Classes/Module.html":{"name":"Module","abstract":"<p>A <code>Module</code> represents the top-level structure of an LLVM program. An LLVM"},"Classes/NamedMetadata.html":{"name":"NamedMetadata","abstract":"<p>A <code>NamedMetadata</code> object represents a module-level metadata value identified"},"Classes/ObjectFile.html":{"name":"ObjectFile","abstract":"<p>An in-memory representation of a format-independent object file.</p>"},"Classes/SectionSequence.html":{"name":"SectionSequence","abstract":"<p>A sequence for iterating over the sections in an object file.</p>"},"Classes/RelocationSequence.html":{"name":"RelocationSequence","abstract":"<p>A sequence for iterating over the relocations in an object file.</p>"},"Classes/SymbolSequence.html":{"name":"SymbolSequence","abstract":"<p>A sequence for iterating over the symbols in an object file.</p>"},"Classes/FunctionPassManager.html":{"name":"FunctionPassManager","abstract":"<p>A <code>FunctionPassManager</code> is an object that collects a sequence of passes"},"Classes/TargetData.html":{"name":"TargetData","abstract":"<p>A <code>TargetData</code> encapsulates information about the data requirements of a"},"Classes/Target.html":{"name":"Target","abstract":"<p>A <code>Target</code> object represents an object that encapsulates information about"},"Classes/TargetMachine.html":{"name":"TargetMachine","abstract":"<p>A <code>TargetMachine</code> object represents an object that encapsulates information"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}